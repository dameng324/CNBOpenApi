// <auto-generated>
/*
 * CNB OPENAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cnb@tencent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using CNBOpenApi.Client;

namespace CNBOpenApi.Model
{
    /// <summary>
    /// DtoActivityJoinGroupDetail
    /// </summary>
    public partial class DtoActivityJoinGroupDetail : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DtoActivityJoinGroupDetail" /> class.
        /// </summary>
        /// <param name="createAt">createAt</param>
        /// <param name="detail">组织详情，组织被删后为 null</param>
        /// <param name="remark">组织别名，组织被删除后才有值</param>
        [JsonConstructor]
        public DtoActivityJoinGroupDetail(Option<string?> createAt = default, Option<DtoOrganizationUnion?> detail = default, Option<string?> remark = default)
        {
            CreateAtOption = createAt;
            DetailOption = detail;
            RemarkOption = remark;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of CreateAt
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> CreateAtOption { get; private set; }

        /// <summary>
        /// Gets or Sets CreateAt
        /// </summary>
        [JsonPropertyName("create_at")]
        public string? CreateAt { get { return this.CreateAtOption; } set { this.CreateAtOption = new(value); } }

        /// <summary>
        /// Used to track the state of Detail
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<DtoOrganizationUnion?> DetailOption { get; private set; }

        /// <summary>
        /// 组织详情，组织被删后为 null
        /// </summary>
        /// <value>组织详情，组织被删后为 null</value>
        [JsonPropertyName("detail")]
        public DtoOrganizationUnion? Detail { get { return this.DetailOption; } set { this.DetailOption = new(value); } }

        /// <summary>
        /// Used to track the state of Remark
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> RemarkOption { get; private set; }

        /// <summary>
        /// 组织别名，组织被删除后才有值
        /// </summary>
        /// <value>组织别名，组织被删除后才有值</value>
        [JsonPropertyName("remark")]
        public string? Remark { get { return this.RemarkOption; } set { this.RemarkOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DtoActivityJoinGroupDetail {\n");
            sb.Append("  CreateAt: ").Append(CreateAt).Append("\n");
            sb.Append("  Detail: ").Append(Detail).Append("\n");
            sb.Append("  Remark: ").Append(Remark).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="DtoActivityJoinGroupDetail" />
    /// </summary>
    public class DtoActivityJoinGroupDetailJsonConverter : JsonConverter<DtoActivityJoinGroupDetail>
    {
        /// <summary>
        /// Deserializes json to <see cref="DtoActivityJoinGroupDetail" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override DtoActivityJoinGroupDetail Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> createAt = default;
            Option<DtoOrganizationUnion?> detail = default;
            Option<string?> remark = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "create_at":
                            createAt = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "detail":
                            detail = new Option<DtoOrganizationUnion?>(JsonSerializer.Deserialize<DtoOrganizationUnion>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "remark":
                            remark = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (createAt.IsSet && createAt.Value == null)
                throw new ArgumentNullException(nameof(createAt), "Property is not nullable for class DtoActivityJoinGroupDetail.");

            if (detail.IsSet && detail.Value == null)
                throw new ArgumentNullException(nameof(detail), "Property is not nullable for class DtoActivityJoinGroupDetail.");

            if (remark.IsSet && remark.Value == null)
                throw new ArgumentNullException(nameof(remark), "Property is not nullable for class DtoActivityJoinGroupDetail.");

            return new DtoActivityJoinGroupDetail(createAt, detail, remark);
        }

        /// <summary>
        /// Serializes a <see cref="DtoActivityJoinGroupDetail" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="dtoActivityJoinGroupDetail"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, DtoActivityJoinGroupDetail dtoActivityJoinGroupDetail, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, dtoActivityJoinGroupDetail, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="DtoActivityJoinGroupDetail" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="dtoActivityJoinGroupDetail"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, DtoActivityJoinGroupDetail dtoActivityJoinGroupDetail, JsonSerializerOptions jsonSerializerOptions)
        {
            if (dtoActivityJoinGroupDetail.CreateAtOption.IsSet && dtoActivityJoinGroupDetail.CreateAt == null)
                throw new ArgumentNullException(nameof(dtoActivityJoinGroupDetail.CreateAt), "Property is required for class DtoActivityJoinGroupDetail.");

            if (dtoActivityJoinGroupDetail.DetailOption.IsSet && dtoActivityJoinGroupDetail.Detail == null)
                throw new ArgumentNullException(nameof(dtoActivityJoinGroupDetail.Detail), "Property is required for class DtoActivityJoinGroupDetail.");

            if (dtoActivityJoinGroupDetail.RemarkOption.IsSet && dtoActivityJoinGroupDetail.Remark == null)
                throw new ArgumentNullException(nameof(dtoActivityJoinGroupDetail.Remark), "Property is required for class DtoActivityJoinGroupDetail.");

            if (dtoActivityJoinGroupDetail.CreateAtOption.IsSet)
                writer.WriteString("create_at", dtoActivityJoinGroupDetail.CreateAt);

            if (dtoActivityJoinGroupDetail.DetailOption.IsSet)
            {
                writer.WritePropertyName("detail");
                JsonSerializer.Serialize(writer, dtoActivityJoinGroupDetail.Detail, jsonSerializerOptions);
            }
            if (dtoActivityJoinGroupDetail.RemarkOption.IsSet)
                writer.WriteString("remark", dtoActivityJoinGroupDetail.Remark);
        }
    }
}
