// <auto-generated>
/*
 * CNB OPENAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cnb@tencent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using CNBOpenApi.Client;

namespace CNBOpenApi.Model
{
    /// <summary>
    /// DtoUpdateMembersRequest
    /// </summary>
    public partial class DtoUpdateMembersRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DtoUpdateMembersRequest" /> class.
        /// </summary>
        /// <param name="accessLevel">accessLevel</param>
        /// <param name="isOutsideCollaborator">isOutsideCollaborator</param>
        [JsonConstructor]
        public DtoUpdateMembersRequest(Option<string?> accessLevel = default, Option<bool?> isOutsideCollaborator = default)
        {
            AccessLevelOption = accessLevel;
            IsOutsideCollaboratorOption = isOutsideCollaborator;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of AccessLevel
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> AccessLevelOption { get; private set; }

        /// <summary>
        /// Gets or Sets AccessLevel
        /// </summary>
        [JsonPropertyName("access_level")]
        public string? AccessLevel { get { return this.AccessLevelOption; } set { this.AccessLevelOption = new(value); } }

        /// <summary>
        /// Used to track the state of IsOutsideCollaborator
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> IsOutsideCollaboratorOption { get; private set; }

        /// <summary>
        /// Gets or Sets IsOutsideCollaborator
        /// </summary>
        [JsonPropertyName("is_outside_collaborator")]
        public bool? IsOutsideCollaborator { get { return this.IsOutsideCollaboratorOption; } set { this.IsOutsideCollaboratorOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DtoUpdateMembersRequest {\n");
            sb.Append("  AccessLevel: ").Append(AccessLevel).Append("\n");
            sb.Append("  IsOutsideCollaborator: ").Append(IsOutsideCollaborator).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="DtoUpdateMembersRequest" />
    /// </summary>
    public class DtoUpdateMembersRequestJsonConverter : JsonConverter<DtoUpdateMembersRequest>
    {
        /// <summary>
        /// Deserializes json to <see cref="DtoUpdateMembersRequest" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override DtoUpdateMembersRequest Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> accessLevel = default;
            Option<bool?> isOutsideCollaborator = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "access_level":
                            accessLevel = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "is_outside_collaborator":
                            isOutsideCollaborator = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        default:
                            break;
                    }
                }
            }

            if (accessLevel.IsSet && accessLevel.Value == null)
                throw new ArgumentNullException(nameof(accessLevel), "Property is not nullable for class DtoUpdateMembersRequest.");

            if (isOutsideCollaborator.IsSet && isOutsideCollaborator.Value == null)
                throw new ArgumentNullException(nameof(isOutsideCollaborator), "Property is not nullable for class DtoUpdateMembersRequest.");

            return new DtoUpdateMembersRequest(accessLevel, isOutsideCollaborator);
        }

        /// <summary>
        /// Serializes a <see cref="DtoUpdateMembersRequest" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="dtoUpdateMembersRequest"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, DtoUpdateMembersRequest dtoUpdateMembersRequest, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, dtoUpdateMembersRequest, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="DtoUpdateMembersRequest" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="dtoUpdateMembersRequest"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, DtoUpdateMembersRequest dtoUpdateMembersRequest, JsonSerializerOptions jsonSerializerOptions)
        {
            if (dtoUpdateMembersRequest.AccessLevelOption.IsSet && dtoUpdateMembersRequest.AccessLevel == null)
                throw new ArgumentNullException(nameof(dtoUpdateMembersRequest.AccessLevel), "Property is required for class DtoUpdateMembersRequest.");

            if (dtoUpdateMembersRequest.AccessLevelOption.IsSet)
                writer.WriteString("access_level", dtoUpdateMembersRequest.AccessLevel);

            if (dtoUpdateMembersRequest.IsOutsideCollaboratorOption.IsSet)
                writer.WriteBoolean("is_outside_collaborator", dtoUpdateMembersRequest.IsOutsideCollaboratorOption.Value!.Value);
        }
    }
}
