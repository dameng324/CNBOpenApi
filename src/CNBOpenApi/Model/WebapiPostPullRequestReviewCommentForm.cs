// <auto-generated>
/*
 * CNB OPENAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cnb@tencent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using CNBOpenApi.Client;

namespace CNBOpenApi.Model
{
    /// <summary>
    /// WebapiPostPullRequestReviewCommentForm
    /// </summary>
    public partial class WebapiPostPullRequestReviewCommentForm : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebapiPostPullRequestReviewCommentForm" /> class.
        /// </summary>
        /// <param name="body">body</param>
        /// <param name="endLine">endLine</param>
        /// <param name="endSide">endSide</param>
        /// <param name="path">path</param>
        /// <param name="startLine">startLine</param>
        /// <param name="startSide">startSide</param>
        /// <param name="subjectType">can be one of: line, file</param>
        [JsonConstructor]
        public WebapiPostPullRequestReviewCommentForm(Option<string?> body = default, Option<int?> endLine = default, Option<string?> endSide = default, Option<string?> path = default, Option<int?> startLine = default, Option<string?> startSide = default, Option<string?> subjectType = default)
        {
            BodyOption = body;
            EndLineOption = endLine;
            EndSideOption = endSide;
            PathOption = path;
            StartLineOption = startLine;
            StartSideOption = startSide;
            SubjectTypeOption = subjectType;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Body
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> BodyOption { get; private set; }

        /// <summary>
        /// Gets or Sets Body
        /// </summary>
        [JsonPropertyName("body")]
        public string? Body { get { return this.BodyOption; } set { this.BodyOption = new(value); } }

        /// <summary>
        /// Used to track the state of EndLine
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> EndLineOption { get; private set; }

        /// <summary>
        /// Gets or Sets EndLine
        /// </summary>
        [JsonPropertyName("end_line")]
        public int? EndLine { get { return this.EndLineOption; } set { this.EndLineOption = new(value); } }

        /// <summary>
        /// Used to track the state of EndSide
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> EndSideOption { get; private set; }

        /// <summary>
        /// Gets or Sets EndSide
        /// </summary>
        [JsonPropertyName("end_side")]
        public string? EndSide { get { return this.EndSideOption; } set { this.EndSideOption = new(value); } }

        /// <summary>
        /// Used to track the state of Path
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> PathOption { get; private set; }

        /// <summary>
        /// Gets or Sets Path
        /// </summary>
        [JsonPropertyName("path")]
        public string? Path { get { return this.PathOption; } set { this.PathOption = new(value); } }

        /// <summary>
        /// Used to track the state of StartLine
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> StartLineOption { get; private set; }

        /// <summary>
        /// Gets or Sets StartLine
        /// </summary>
        [JsonPropertyName("start_line")]
        public int? StartLine { get { return this.StartLineOption; } set { this.StartLineOption = new(value); } }

        /// <summary>
        /// Used to track the state of StartSide
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> StartSideOption { get; private set; }

        /// <summary>
        /// Gets or Sets StartSide
        /// </summary>
        [JsonPropertyName("start_side")]
        public string? StartSide { get { return this.StartSideOption; } set { this.StartSideOption = new(value); } }

        /// <summary>
        /// Used to track the state of SubjectType
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SubjectTypeOption { get; private set; }

        /// <summary>
        /// can be one of: line, file
        /// </summary>
        /// <value>can be one of: line, file</value>
        [JsonPropertyName("subject_type")]
        public string? SubjectType { get { return this.SubjectTypeOption; } set { this.SubjectTypeOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebapiPostPullRequestReviewCommentForm {\n");
            sb.Append("  Body: ").Append(Body).Append("\n");
            sb.Append("  EndLine: ").Append(EndLine).Append("\n");
            sb.Append("  EndSide: ").Append(EndSide).Append("\n");
            sb.Append("  Path: ").Append(Path).Append("\n");
            sb.Append("  StartLine: ").Append(StartLine).Append("\n");
            sb.Append("  StartSide: ").Append(StartSide).Append("\n");
            sb.Append("  SubjectType: ").Append(SubjectType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="WebapiPostPullRequestReviewCommentForm" />
    /// </summary>
    public class WebapiPostPullRequestReviewCommentFormJsonConverter : JsonConverter<WebapiPostPullRequestReviewCommentForm>
    {
        /// <summary>
        /// Deserializes json to <see cref="WebapiPostPullRequestReviewCommentForm" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override WebapiPostPullRequestReviewCommentForm Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> body = default;
            Option<int?> endLine = default;
            Option<string?> endSide = default;
            Option<string?> path = default;
            Option<int?> startLine = default;
            Option<string?> startSide = default;
            Option<string?> subjectType = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "body":
                            body = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "end_line":
                            endLine = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "end_side":
                            endSide = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "path":
                            path = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "start_line":
                            startLine = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "start_side":
                            startSide = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "subject_type":
                            subjectType = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (body.IsSet && body.Value == null)
                throw new ArgumentNullException(nameof(body), "Property is not nullable for class WebapiPostPullRequestReviewCommentForm.");

            if (endLine.IsSet && endLine.Value == null)
                throw new ArgumentNullException(nameof(endLine), "Property is not nullable for class WebapiPostPullRequestReviewCommentForm.");

            if (endSide.IsSet && endSide.Value == null)
                throw new ArgumentNullException(nameof(endSide), "Property is not nullable for class WebapiPostPullRequestReviewCommentForm.");

            if (path.IsSet && path.Value == null)
                throw new ArgumentNullException(nameof(path), "Property is not nullable for class WebapiPostPullRequestReviewCommentForm.");

            if (startLine.IsSet && startLine.Value == null)
                throw new ArgumentNullException(nameof(startLine), "Property is not nullable for class WebapiPostPullRequestReviewCommentForm.");

            if (startSide.IsSet && startSide.Value == null)
                throw new ArgumentNullException(nameof(startSide), "Property is not nullable for class WebapiPostPullRequestReviewCommentForm.");

            if (subjectType.IsSet && subjectType.Value == null)
                throw new ArgumentNullException(nameof(subjectType), "Property is not nullable for class WebapiPostPullRequestReviewCommentForm.");

            return new WebapiPostPullRequestReviewCommentForm(body, endLine, endSide, path, startLine, startSide, subjectType);
        }

        /// <summary>
        /// Serializes a <see cref="WebapiPostPullRequestReviewCommentForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webapiPostPullRequestReviewCommentForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, WebapiPostPullRequestReviewCommentForm webapiPostPullRequestReviewCommentForm, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, webapiPostPullRequestReviewCommentForm, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="WebapiPostPullRequestReviewCommentForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webapiPostPullRequestReviewCommentForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, WebapiPostPullRequestReviewCommentForm webapiPostPullRequestReviewCommentForm, JsonSerializerOptions jsonSerializerOptions)
        {
            if (webapiPostPullRequestReviewCommentForm.BodyOption.IsSet && webapiPostPullRequestReviewCommentForm.Body == null)
                throw new ArgumentNullException(nameof(webapiPostPullRequestReviewCommentForm.Body), "Property is required for class WebapiPostPullRequestReviewCommentForm.");

            if (webapiPostPullRequestReviewCommentForm.EndSideOption.IsSet && webapiPostPullRequestReviewCommentForm.EndSide == null)
                throw new ArgumentNullException(nameof(webapiPostPullRequestReviewCommentForm.EndSide), "Property is required for class WebapiPostPullRequestReviewCommentForm.");

            if (webapiPostPullRequestReviewCommentForm.PathOption.IsSet && webapiPostPullRequestReviewCommentForm.Path == null)
                throw new ArgumentNullException(nameof(webapiPostPullRequestReviewCommentForm.Path), "Property is required for class WebapiPostPullRequestReviewCommentForm.");

            if (webapiPostPullRequestReviewCommentForm.StartSideOption.IsSet && webapiPostPullRequestReviewCommentForm.StartSide == null)
                throw new ArgumentNullException(nameof(webapiPostPullRequestReviewCommentForm.StartSide), "Property is required for class WebapiPostPullRequestReviewCommentForm.");

            if (webapiPostPullRequestReviewCommentForm.SubjectTypeOption.IsSet && webapiPostPullRequestReviewCommentForm.SubjectType == null)
                throw new ArgumentNullException(nameof(webapiPostPullRequestReviewCommentForm.SubjectType), "Property is required for class WebapiPostPullRequestReviewCommentForm.");

            if (webapiPostPullRequestReviewCommentForm.BodyOption.IsSet)
                writer.WriteString("body", webapiPostPullRequestReviewCommentForm.Body);

            if (webapiPostPullRequestReviewCommentForm.EndLineOption.IsSet)
                writer.WriteNumber("end_line", webapiPostPullRequestReviewCommentForm.EndLineOption.Value!.Value);

            if (webapiPostPullRequestReviewCommentForm.EndSideOption.IsSet)
                writer.WriteString("end_side", webapiPostPullRequestReviewCommentForm.EndSide);

            if (webapiPostPullRequestReviewCommentForm.PathOption.IsSet)
                writer.WriteString("path", webapiPostPullRequestReviewCommentForm.Path);

            if (webapiPostPullRequestReviewCommentForm.StartLineOption.IsSet)
                writer.WriteNumber("start_line", webapiPostPullRequestReviewCommentForm.StartLineOption.Value!.Value);

            if (webapiPostPullRequestReviewCommentForm.StartSideOption.IsSet)
                writer.WriteString("start_side", webapiPostPullRequestReviewCommentForm.StartSide);

            if (webapiPostPullRequestReviewCommentForm.SubjectTypeOption.IsSet)
                writer.WriteString("subject_type", webapiPostPullRequestReviewCommentForm.SubjectType);
        }
    }
}
