// <auto-generated>
/*
 * CNB OPENAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cnb@tencent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using CNBOpenApi.Client;

namespace CNBOpenApi.Model
{
    /// <summary>
    /// WebapiMergePullRequestForm
    /// </summary>
    public partial class WebapiMergePullRequestForm : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebapiMergePullRequestForm" /> class.
        /// </summary>
        /// <param name="commitMessage">commitMessage</param>
        /// <param name="mergeStyle">mergeStyle</param>
        [JsonConstructor]
        public WebapiMergePullRequestForm(Option<string?> commitMessage = default, Option<string?> mergeStyle = default)
        {
            CommitMessageOption = commitMessage;
            MergeStyleOption = mergeStyle;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of CommitMessage
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> CommitMessageOption { get; private set; }

        /// <summary>
        /// Gets or Sets CommitMessage
        /// </summary>
        [JsonPropertyName("commit_message")]
        public string? CommitMessage { get { return this.CommitMessageOption; } set { this.CommitMessageOption = new(value); } }

        /// <summary>
        /// Used to track the state of MergeStyle
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> MergeStyleOption { get; private set; }

        /// <summary>
        /// Gets or Sets MergeStyle
        /// </summary>
        [JsonPropertyName("merge_style")]
        public string? MergeStyle { get { return this.MergeStyleOption; } set { this.MergeStyleOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebapiMergePullRequestForm {\n");
            sb.Append("  CommitMessage: ").Append(CommitMessage).Append("\n");
            sb.Append("  MergeStyle: ").Append(MergeStyle).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="WebapiMergePullRequestForm" />
    /// </summary>
    public class WebapiMergePullRequestFormJsonConverter : JsonConverter<WebapiMergePullRequestForm>
    {
        /// <summary>
        /// Deserializes json to <see cref="WebapiMergePullRequestForm" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override WebapiMergePullRequestForm Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> commitMessage = default;
            Option<string?> mergeStyle = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "commit_message":
                            commitMessage = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "merge_style":
                            mergeStyle = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (commitMessage.IsSet && commitMessage.Value == null)
                throw new ArgumentNullException(nameof(commitMessage), "Property is not nullable for class WebapiMergePullRequestForm.");

            if (mergeStyle.IsSet && mergeStyle.Value == null)
                throw new ArgumentNullException(nameof(mergeStyle), "Property is not nullable for class WebapiMergePullRequestForm.");

            return new WebapiMergePullRequestForm(commitMessage, mergeStyle);
        }

        /// <summary>
        /// Serializes a <see cref="WebapiMergePullRequestForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webapiMergePullRequestForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, WebapiMergePullRequestForm webapiMergePullRequestForm, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, webapiMergePullRequestForm, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="WebapiMergePullRequestForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webapiMergePullRequestForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, WebapiMergePullRequestForm webapiMergePullRequestForm, JsonSerializerOptions jsonSerializerOptions)
        {
            if (webapiMergePullRequestForm.CommitMessageOption.IsSet && webapiMergePullRequestForm.CommitMessage == null)
                throw new ArgumentNullException(nameof(webapiMergePullRequestForm.CommitMessage), "Property is required for class WebapiMergePullRequestForm.");

            if (webapiMergePullRequestForm.MergeStyleOption.IsSet && webapiMergePullRequestForm.MergeStyle == null)
                throw new ArgumentNullException(nameof(webapiMergePullRequestForm.MergeStyle), "Property is required for class WebapiMergePullRequestForm.");

            if (webapiMergePullRequestForm.CommitMessageOption.IsSet)
                writer.WriteString("commit_message", webapiMergePullRequestForm.CommitMessage);

            if (webapiMergePullRequestForm.MergeStyleOption.IsSet)
                writer.WriteString("merge_style", webapiMergePullRequestForm.MergeStyle);
        }
    }
}
