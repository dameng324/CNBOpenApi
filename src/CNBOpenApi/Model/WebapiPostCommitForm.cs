// <auto-generated>
/*
 * CNB OPENAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cnb@tencent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using CNBOpenApi.Client;

namespace CNBOpenApi.Model
{
    /// <summary>
    /// WebapiPostCommitForm
    /// </summary>
    public partial class WebapiPostCommitForm : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebapiPostCommitForm" /> class.
        /// </summary>
        /// <param name="baseBranch">baseBranch</param>
        /// <param name="files">files</param>
        /// <param name="message">message</param>
        /// <param name="newBranch">newBranch</param>
        /// <param name="parentCommitSha">parentCommitSha</param>
        [JsonConstructor]
        public WebapiPostCommitForm(Option<string?> baseBranch = default, Option<List<WebapiPostCommitFile>?> files = default, Option<string?> message = default, Option<string?> newBranch = default, Option<string?> parentCommitSha = default)
        {
            BaseBranchOption = baseBranch;
            FilesOption = files;
            MessageOption = message;
            NewBranchOption = newBranch;
            ParentCommitShaOption = parentCommitSha;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of BaseBranch
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> BaseBranchOption { get; private set; }

        /// <summary>
        /// Gets or Sets BaseBranch
        /// </summary>
        [JsonPropertyName("base_branch")]
        public string? BaseBranch { get { return this.BaseBranchOption; } set { this.BaseBranchOption = new(value); } }

        /// <summary>
        /// Used to track the state of Files
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<WebapiPostCommitFile>?> FilesOption { get; private set; }

        /// <summary>
        /// Gets or Sets Files
        /// </summary>
        [JsonPropertyName("files")]
        public List<WebapiPostCommitFile>? Files { get { return this.FilesOption; } set { this.FilesOption = new(value); } }

        /// <summary>
        /// Used to track the state of Message
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> MessageOption { get; private set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [JsonPropertyName("message")]
        public string? Message { get { return this.MessageOption; } set { this.MessageOption = new(value); } }

        /// <summary>
        /// Used to track the state of NewBranch
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> NewBranchOption { get; private set; }

        /// <summary>
        /// Gets or Sets NewBranch
        /// </summary>
        [JsonPropertyName("new_branch")]
        public string? NewBranch { get { return this.NewBranchOption; } set { this.NewBranchOption = new(value); } }

        /// <summary>
        /// Used to track the state of ParentCommitSha
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> ParentCommitShaOption { get; private set; }

        /// <summary>
        /// Gets or Sets ParentCommitSha
        /// </summary>
        [JsonPropertyName("parent_commit_sha")]
        public string? ParentCommitSha { get { return this.ParentCommitShaOption; } set { this.ParentCommitShaOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebapiPostCommitForm {\n");
            sb.Append("  BaseBranch: ").Append(BaseBranch).Append("\n");
            sb.Append("  Files: ").Append(Files).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  NewBranch: ").Append(NewBranch).Append("\n");
            sb.Append("  ParentCommitSha: ").Append(ParentCommitSha).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="WebapiPostCommitForm" />
    /// </summary>
    public class WebapiPostCommitFormJsonConverter : JsonConverter<WebapiPostCommitForm>
    {
        /// <summary>
        /// Deserializes json to <see cref="WebapiPostCommitForm" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override WebapiPostCommitForm Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> baseBranch = default;
            Option<List<WebapiPostCommitFile>?> files = default;
            Option<string?> message = default;
            Option<string?> newBranch = default;
            Option<string?> parentCommitSha = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "base_branch":
                            baseBranch = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "files":
                            files = new Option<List<WebapiPostCommitFile>?>(JsonSerializer.Deserialize<List<WebapiPostCommitFile>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "message":
                            message = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "new_branch":
                            newBranch = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "parent_commit_sha":
                            parentCommitSha = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (baseBranch.IsSet && baseBranch.Value == null)
                throw new ArgumentNullException(nameof(baseBranch), "Property is not nullable for class WebapiPostCommitForm.");

            if (files.IsSet && files.Value == null)
                throw new ArgumentNullException(nameof(files), "Property is not nullable for class WebapiPostCommitForm.");

            if (message.IsSet && message.Value == null)
                throw new ArgumentNullException(nameof(message), "Property is not nullable for class WebapiPostCommitForm.");

            if (newBranch.IsSet && newBranch.Value == null)
                throw new ArgumentNullException(nameof(newBranch), "Property is not nullable for class WebapiPostCommitForm.");

            if (parentCommitSha.IsSet && parentCommitSha.Value == null)
                throw new ArgumentNullException(nameof(parentCommitSha), "Property is not nullable for class WebapiPostCommitForm.");

            return new WebapiPostCommitForm(baseBranch, files, message, newBranch, parentCommitSha);
        }

        /// <summary>
        /// Serializes a <see cref="WebapiPostCommitForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webapiPostCommitForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, WebapiPostCommitForm webapiPostCommitForm, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, webapiPostCommitForm, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="WebapiPostCommitForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webapiPostCommitForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, WebapiPostCommitForm webapiPostCommitForm, JsonSerializerOptions jsonSerializerOptions)
        {
            if (webapiPostCommitForm.BaseBranchOption.IsSet && webapiPostCommitForm.BaseBranch == null)
                throw new ArgumentNullException(nameof(webapiPostCommitForm.BaseBranch), "Property is required for class WebapiPostCommitForm.");

            if (webapiPostCommitForm.FilesOption.IsSet && webapiPostCommitForm.Files == null)
                throw new ArgumentNullException(nameof(webapiPostCommitForm.Files), "Property is required for class WebapiPostCommitForm.");

            if (webapiPostCommitForm.MessageOption.IsSet && webapiPostCommitForm.Message == null)
                throw new ArgumentNullException(nameof(webapiPostCommitForm.Message), "Property is required for class WebapiPostCommitForm.");

            if (webapiPostCommitForm.NewBranchOption.IsSet && webapiPostCommitForm.NewBranch == null)
                throw new ArgumentNullException(nameof(webapiPostCommitForm.NewBranch), "Property is required for class WebapiPostCommitForm.");

            if (webapiPostCommitForm.ParentCommitShaOption.IsSet && webapiPostCommitForm.ParentCommitSha == null)
                throw new ArgumentNullException(nameof(webapiPostCommitForm.ParentCommitSha), "Property is required for class WebapiPostCommitForm.");

            if (webapiPostCommitForm.BaseBranchOption.IsSet)
                writer.WriteString("base_branch", webapiPostCommitForm.BaseBranch);

            if (webapiPostCommitForm.FilesOption.IsSet)
            {
                writer.WritePropertyName("files");
                JsonSerializer.Serialize(writer, webapiPostCommitForm.Files, jsonSerializerOptions);
            }
            if (webapiPostCommitForm.MessageOption.IsSet)
                writer.WriteString("message", webapiPostCommitForm.Message);

            if (webapiPostCommitForm.NewBranchOption.IsSet)
                writer.WriteString("new_branch", webapiPostCommitForm.NewBranch);

            if (webapiPostCommitForm.ParentCommitShaOption.IsSet)
                writer.WriteString("parent_commit_sha", webapiPostCommitForm.ParentCommitSha);
        }
    }
}
