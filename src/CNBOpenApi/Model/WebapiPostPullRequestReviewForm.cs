// <auto-generated>
/*
 * CNB OPENAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cnb@tencent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using CNBOpenApi.Client;

namespace CNBOpenApi.Model
{
    /// <summary>
    /// WebapiPostPullRequestReviewForm
    /// </summary>
    public partial class WebapiPostPullRequestReviewForm : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebapiPostPullRequestReviewForm" /> class.
        /// </summary>
        /// <param name="body">body</param>
        /// <param name="comment">comment</param>
        /// <param name="event">comment, approve, request_changes or \&quot;\&quot;</param>
        [JsonConstructor]
        public WebapiPostPullRequestReviewForm(Option<string?> body = default, Option<WebapiPostPullRequestReviewCommentForm?> comment = default, Option<string?> @event = default)
        {
            BodyOption = body;
            CommentOption = comment;
            EventOption = @event;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Body
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> BodyOption { get; private set; }

        /// <summary>
        /// Gets or Sets Body
        /// </summary>
        [JsonPropertyName("body")]
        public string? Body { get { return this.BodyOption; } set { this.BodyOption = new(value); } }

        /// <summary>
        /// Used to track the state of Comment
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<WebapiPostPullRequestReviewCommentForm?> CommentOption { get; private set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [JsonPropertyName("comment")]
        public WebapiPostPullRequestReviewCommentForm? Comment { get { return this.CommentOption; } set { this.CommentOption = new(value); } }

        /// <summary>
        /// Used to track the state of Event
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> EventOption { get; private set; }

        /// <summary>
        /// comment, approve, request_changes or \&quot;\&quot;
        /// </summary>
        /// <value>comment, approve, request_changes or \&quot;\&quot;</value>
        [JsonPropertyName("event")]
        public string? Event { get { return this.EventOption; } set { this.EventOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebapiPostPullRequestReviewForm {\n");
            sb.Append("  Body: ").Append(Body).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  Event: ").Append(Event).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="WebapiPostPullRequestReviewForm" />
    /// </summary>
    public class WebapiPostPullRequestReviewFormJsonConverter : JsonConverter<WebapiPostPullRequestReviewForm>
    {
        /// <summary>
        /// Deserializes json to <see cref="WebapiPostPullRequestReviewForm" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override WebapiPostPullRequestReviewForm Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> body = default;
            Option<WebapiPostPullRequestReviewCommentForm?> comment = default;
            Option<string?> varEvent = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "body":
                            body = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "comment":
                            comment = new Option<WebapiPostPullRequestReviewCommentForm?>(JsonSerializer.Deserialize<WebapiPostPullRequestReviewCommentForm>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "event":
                            varEvent = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (body.IsSet && body.Value == null)
                throw new ArgumentNullException(nameof(body), "Property is not nullable for class WebapiPostPullRequestReviewForm.");

            if (comment.IsSet && comment.Value == null)
                throw new ArgumentNullException(nameof(comment), "Property is not nullable for class WebapiPostPullRequestReviewForm.");

            if (varEvent.IsSet && varEvent.Value == null)
                throw new ArgumentNullException(nameof(varEvent), "Property is not nullable for class WebapiPostPullRequestReviewForm.");

            return new WebapiPostPullRequestReviewForm(body, comment, varEvent);
        }

        /// <summary>
        /// Serializes a <see cref="WebapiPostPullRequestReviewForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webapiPostPullRequestReviewForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, WebapiPostPullRequestReviewForm webapiPostPullRequestReviewForm, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, webapiPostPullRequestReviewForm, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="WebapiPostPullRequestReviewForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webapiPostPullRequestReviewForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, WebapiPostPullRequestReviewForm webapiPostPullRequestReviewForm, JsonSerializerOptions jsonSerializerOptions)
        {
            if (webapiPostPullRequestReviewForm.BodyOption.IsSet && webapiPostPullRequestReviewForm.Body == null)
                throw new ArgumentNullException(nameof(webapiPostPullRequestReviewForm.Body), "Property is required for class WebapiPostPullRequestReviewForm.");

            if (webapiPostPullRequestReviewForm.CommentOption.IsSet && webapiPostPullRequestReviewForm.Comment == null)
                throw new ArgumentNullException(nameof(webapiPostPullRequestReviewForm.Comment), "Property is required for class WebapiPostPullRequestReviewForm.");

            if (webapiPostPullRequestReviewForm.EventOption.IsSet && webapiPostPullRequestReviewForm.Event == null)
                throw new ArgumentNullException(nameof(webapiPostPullRequestReviewForm.Event), "Property is required for class WebapiPostPullRequestReviewForm.");

            if (webapiPostPullRequestReviewForm.BodyOption.IsSet)
                writer.WriteString("body", webapiPostPullRequestReviewForm.Body);

            if (webapiPostPullRequestReviewForm.CommentOption.IsSet)
            {
                writer.WritePropertyName("comment");
                JsonSerializer.Serialize(writer, webapiPostPullRequestReviewForm.Comment, jsonSerializerOptions);
            }
            if (webapiPostPullRequestReviewForm.EventOption.IsSet)
                writer.WriteString("event", webapiPostPullRequestReviewForm.Event);
        }
    }
}
