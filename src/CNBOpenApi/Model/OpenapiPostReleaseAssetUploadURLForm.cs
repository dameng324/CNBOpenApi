// <auto-generated>
/*
 * CNB OPENAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cnb@tencent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using CNBOpenApi.Client;

namespace CNBOpenApi.Model
{
    /// <summary>
    /// OpenapiPostReleaseAssetUploadURLForm
    /// </summary>
    public partial class OpenapiPostReleaseAssetUploadURLForm : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OpenapiPostReleaseAssetUploadURLForm" /> class.
        /// </summary>
        /// <param name="assetName">assetName</param>
        /// <param name="overwrite">overwrite</param>
        [JsonConstructor]
        public OpenapiPostReleaseAssetUploadURLForm(Option<string?> assetName = default, Option<bool?> overwrite = default)
        {
            AssetNameOption = assetName;
            OverwriteOption = overwrite;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of AssetName
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> AssetNameOption { get; private set; }

        /// <summary>
        /// Gets or Sets AssetName
        /// </summary>
        [JsonPropertyName("asset_name")]
        public string? AssetName { get { return this.AssetNameOption; } set { this.AssetNameOption = new(value); } }

        /// <summary>
        /// Used to track the state of Overwrite
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> OverwriteOption { get; private set; }

        /// <summary>
        /// Gets or Sets Overwrite
        /// </summary>
        [JsonPropertyName("overwrite")]
        public bool? Overwrite { get { return this.OverwriteOption; } set { this.OverwriteOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OpenapiPostReleaseAssetUploadURLForm {\n");
            sb.Append("  AssetName: ").Append(AssetName).Append("\n");
            sb.Append("  Overwrite: ").Append(Overwrite).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="OpenapiPostReleaseAssetUploadURLForm" />
    /// </summary>
    public class OpenapiPostReleaseAssetUploadURLFormJsonConverter : JsonConverter<OpenapiPostReleaseAssetUploadURLForm>
    {
        /// <summary>
        /// Deserializes json to <see cref="OpenapiPostReleaseAssetUploadURLForm" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override OpenapiPostReleaseAssetUploadURLForm Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> assetName = default;
            Option<bool?> overwrite = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "asset_name":
                            assetName = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "overwrite":
                            overwrite = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        default:
                            break;
                    }
                }
            }

            if (assetName.IsSet && assetName.Value == null)
                throw new ArgumentNullException(nameof(assetName), "Property is not nullable for class OpenapiPostReleaseAssetUploadURLForm.");

            if (overwrite.IsSet && overwrite.Value == null)
                throw new ArgumentNullException(nameof(overwrite), "Property is not nullable for class OpenapiPostReleaseAssetUploadURLForm.");

            return new OpenapiPostReleaseAssetUploadURLForm(assetName, overwrite);
        }

        /// <summary>
        /// Serializes a <see cref="OpenapiPostReleaseAssetUploadURLForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="openapiPostReleaseAssetUploadURLForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, OpenapiPostReleaseAssetUploadURLForm openapiPostReleaseAssetUploadURLForm, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, openapiPostReleaseAssetUploadURLForm, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="OpenapiPostReleaseAssetUploadURLForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="openapiPostReleaseAssetUploadURLForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, OpenapiPostReleaseAssetUploadURLForm openapiPostReleaseAssetUploadURLForm, JsonSerializerOptions jsonSerializerOptions)
        {
            if (openapiPostReleaseAssetUploadURLForm.AssetNameOption.IsSet && openapiPostReleaseAssetUploadURLForm.AssetName == null)
                throw new ArgumentNullException(nameof(openapiPostReleaseAssetUploadURLForm.AssetName), "Property is required for class OpenapiPostReleaseAssetUploadURLForm.");

            if (openapiPostReleaseAssetUploadURLForm.AssetNameOption.IsSet)
                writer.WriteString("asset_name", openapiPostReleaseAssetUploadURLForm.AssetName);

            if (openapiPostReleaseAssetUploadURLForm.OverwriteOption.IsSet)
                writer.WriteBoolean("overwrite", openapiPostReleaseAssetUploadURLForm.OverwriteOption.Value!.Value);
        }
    }
}
