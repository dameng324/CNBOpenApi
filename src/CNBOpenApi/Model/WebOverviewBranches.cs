// <auto-generated>
/*
 * CNB OPENAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cnb@tencent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using CNBOpenApi.Client;

namespace CNBOpenApi.Model
{
    /// <summary>
    /// WebOverviewBranches
    /// </summary>
    public partial class WebOverviewBranches : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebOverviewBranches" /> class.
        /// </summary>
        /// <param name="activeBranches">activeBranches</param>
        /// <param name="defaultBranch">defaultBranch</param>
        /// <param name="hasMoreActiveBranch">hasMoreActiveBranch</param>
        /// <param name="hasMoreStaleBranch">hasMoreStaleBranch</param>
        /// <param name="hasMoreYoursBranch">hasMoreYoursBranch</param>
        /// <param name="initialized">initialized</param>
        /// <param name="staleBranches">staleBranches</param>
        /// <param name="yoursBranches">yoursBranches</param>
        [JsonConstructor]
        public WebOverviewBranches(Option<List<WebBranchListItem>?> activeBranches = default, Option<WebBranchListItem?> defaultBranch = default, Option<bool?> hasMoreActiveBranch = default, Option<bool?> hasMoreStaleBranch = default, Option<bool?> hasMoreYoursBranch = default, Option<bool?> initialized = default, Option<List<WebBranchListItem>?> staleBranches = default, Option<List<WebBranchListItem>?> yoursBranches = default)
        {
            ActiveBranchesOption = activeBranches;
            DefaultBranchOption = defaultBranch;
            HasMoreActiveBranchOption = hasMoreActiveBranch;
            HasMoreStaleBranchOption = hasMoreStaleBranch;
            HasMoreYoursBranchOption = hasMoreYoursBranch;
            InitializedOption = initialized;
            StaleBranchesOption = staleBranches;
            YoursBranchesOption = yoursBranches;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of ActiveBranches
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<WebBranchListItem>?> ActiveBranchesOption { get; private set; }

        /// <summary>
        /// Gets or Sets ActiveBranches
        /// </summary>
        [JsonPropertyName("active_branches")]
        public List<WebBranchListItem>? ActiveBranches { get { return this.ActiveBranchesOption; } set { this.ActiveBranchesOption = new(value); } }

        /// <summary>
        /// Used to track the state of DefaultBranch
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<WebBranchListItem?> DefaultBranchOption { get; private set; }

        /// <summary>
        /// Gets or Sets DefaultBranch
        /// </summary>
        [JsonPropertyName("default_branch")]
        public WebBranchListItem? DefaultBranch { get { return this.DefaultBranchOption; } set { this.DefaultBranchOption = new(value); } }

        /// <summary>
        /// Used to track the state of HasMoreActiveBranch
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> HasMoreActiveBranchOption { get; private set; }

        /// <summary>
        /// Gets or Sets HasMoreActiveBranch
        /// </summary>
        [JsonPropertyName("has_more_active_branch")]
        public bool? HasMoreActiveBranch { get { return this.HasMoreActiveBranchOption; } set { this.HasMoreActiveBranchOption = new(value); } }

        /// <summary>
        /// Used to track the state of HasMoreStaleBranch
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> HasMoreStaleBranchOption { get; private set; }

        /// <summary>
        /// Gets or Sets HasMoreStaleBranch
        /// </summary>
        [JsonPropertyName("has_more_stale_branch")]
        public bool? HasMoreStaleBranch { get { return this.HasMoreStaleBranchOption; } set { this.HasMoreStaleBranchOption = new(value); } }

        /// <summary>
        /// Used to track the state of HasMoreYoursBranch
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> HasMoreYoursBranchOption { get; private set; }

        /// <summary>
        /// Gets or Sets HasMoreYoursBranch
        /// </summary>
        [JsonPropertyName("has_more_yours_branch")]
        public bool? HasMoreYoursBranch { get { return this.HasMoreYoursBranchOption; } set { this.HasMoreYoursBranchOption = new(value); } }

        /// <summary>
        /// Used to track the state of Initialized
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> InitializedOption { get; private set; }

        /// <summary>
        /// Gets or Sets Initialized
        /// </summary>
        [JsonPropertyName("initialized")]
        public bool? Initialized { get { return this.InitializedOption; } set { this.InitializedOption = new(value); } }

        /// <summary>
        /// Used to track the state of StaleBranches
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<WebBranchListItem>?> StaleBranchesOption { get; private set; }

        /// <summary>
        /// Gets or Sets StaleBranches
        /// </summary>
        [JsonPropertyName("stale_branches")]
        public List<WebBranchListItem>? StaleBranches { get { return this.StaleBranchesOption; } set { this.StaleBranchesOption = new(value); } }

        /// <summary>
        /// Used to track the state of YoursBranches
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<WebBranchListItem>?> YoursBranchesOption { get; private set; }

        /// <summary>
        /// Gets or Sets YoursBranches
        /// </summary>
        [JsonPropertyName("yours_branches")]
        public List<WebBranchListItem>? YoursBranches { get { return this.YoursBranchesOption; } set { this.YoursBranchesOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebOverviewBranches {\n");
            sb.Append("  ActiveBranches: ").Append(ActiveBranches).Append("\n");
            sb.Append("  DefaultBranch: ").Append(DefaultBranch).Append("\n");
            sb.Append("  HasMoreActiveBranch: ").Append(HasMoreActiveBranch).Append("\n");
            sb.Append("  HasMoreStaleBranch: ").Append(HasMoreStaleBranch).Append("\n");
            sb.Append("  HasMoreYoursBranch: ").Append(HasMoreYoursBranch).Append("\n");
            sb.Append("  Initialized: ").Append(Initialized).Append("\n");
            sb.Append("  StaleBranches: ").Append(StaleBranches).Append("\n");
            sb.Append("  YoursBranches: ").Append(YoursBranches).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="WebOverviewBranches" />
    /// </summary>
    public class WebOverviewBranchesJsonConverter : JsonConverter<WebOverviewBranches>
    {
        /// <summary>
        /// Deserializes json to <see cref="WebOverviewBranches" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override WebOverviewBranches Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<List<WebBranchListItem>?> activeBranches = default;
            Option<WebBranchListItem?> defaultBranch = default;
            Option<bool?> hasMoreActiveBranch = default;
            Option<bool?> hasMoreStaleBranch = default;
            Option<bool?> hasMoreYoursBranch = default;
            Option<bool?> initialized = default;
            Option<List<WebBranchListItem>?> staleBranches = default;
            Option<List<WebBranchListItem>?> yoursBranches = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "active_branches":
                            activeBranches = new Option<List<WebBranchListItem>?>(JsonSerializer.Deserialize<List<WebBranchListItem>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "default_branch":
                            defaultBranch = new Option<WebBranchListItem?>(JsonSerializer.Deserialize<WebBranchListItem>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "has_more_active_branch":
                            hasMoreActiveBranch = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "has_more_stale_branch":
                            hasMoreStaleBranch = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "has_more_yours_branch":
                            hasMoreYoursBranch = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "initialized":
                            initialized = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "stale_branches":
                            staleBranches = new Option<List<WebBranchListItem>?>(JsonSerializer.Deserialize<List<WebBranchListItem>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "yours_branches":
                            yoursBranches = new Option<List<WebBranchListItem>?>(JsonSerializer.Deserialize<List<WebBranchListItem>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (activeBranches.IsSet && activeBranches.Value == null)
                throw new ArgumentNullException(nameof(activeBranches), "Property is not nullable for class WebOverviewBranches.");

            if (defaultBranch.IsSet && defaultBranch.Value == null)
                throw new ArgumentNullException(nameof(defaultBranch), "Property is not nullable for class WebOverviewBranches.");

            if (hasMoreActiveBranch.IsSet && hasMoreActiveBranch.Value == null)
                throw new ArgumentNullException(nameof(hasMoreActiveBranch), "Property is not nullable for class WebOverviewBranches.");

            if (hasMoreStaleBranch.IsSet && hasMoreStaleBranch.Value == null)
                throw new ArgumentNullException(nameof(hasMoreStaleBranch), "Property is not nullable for class WebOverviewBranches.");

            if (hasMoreYoursBranch.IsSet && hasMoreYoursBranch.Value == null)
                throw new ArgumentNullException(nameof(hasMoreYoursBranch), "Property is not nullable for class WebOverviewBranches.");

            if (initialized.IsSet && initialized.Value == null)
                throw new ArgumentNullException(nameof(initialized), "Property is not nullable for class WebOverviewBranches.");

            if (staleBranches.IsSet && staleBranches.Value == null)
                throw new ArgumentNullException(nameof(staleBranches), "Property is not nullable for class WebOverviewBranches.");

            if (yoursBranches.IsSet && yoursBranches.Value == null)
                throw new ArgumentNullException(nameof(yoursBranches), "Property is not nullable for class WebOverviewBranches.");

            return new WebOverviewBranches(activeBranches, defaultBranch, hasMoreActiveBranch, hasMoreStaleBranch, hasMoreYoursBranch, initialized, staleBranches, yoursBranches);
        }

        /// <summary>
        /// Serializes a <see cref="WebOverviewBranches" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webOverviewBranches"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, WebOverviewBranches webOverviewBranches, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, webOverviewBranches, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="WebOverviewBranches" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webOverviewBranches"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, WebOverviewBranches webOverviewBranches, JsonSerializerOptions jsonSerializerOptions)
        {
            if (webOverviewBranches.ActiveBranchesOption.IsSet && webOverviewBranches.ActiveBranches == null)
                throw new ArgumentNullException(nameof(webOverviewBranches.ActiveBranches), "Property is required for class WebOverviewBranches.");

            if (webOverviewBranches.DefaultBranchOption.IsSet && webOverviewBranches.DefaultBranch == null)
                throw new ArgumentNullException(nameof(webOverviewBranches.DefaultBranch), "Property is required for class WebOverviewBranches.");

            if (webOverviewBranches.StaleBranchesOption.IsSet && webOverviewBranches.StaleBranches == null)
                throw new ArgumentNullException(nameof(webOverviewBranches.StaleBranches), "Property is required for class WebOverviewBranches.");

            if (webOverviewBranches.YoursBranchesOption.IsSet && webOverviewBranches.YoursBranches == null)
                throw new ArgumentNullException(nameof(webOverviewBranches.YoursBranches), "Property is required for class WebOverviewBranches.");

            if (webOverviewBranches.ActiveBranchesOption.IsSet)
            {
                writer.WritePropertyName("active_branches");
                JsonSerializer.Serialize(writer, webOverviewBranches.ActiveBranches, jsonSerializerOptions);
            }
            if (webOverviewBranches.DefaultBranchOption.IsSet)
            {
                writer.WritePropertyName("default_branch");
                JsonSerializer.Serialize(writer, webOverviewBranches.DefaultBranch, jsonSerializerOptions);
            }
            if (webOverviewBranches.HasMoreActiveBranchOption.IsSet)
                writer.WriteBoolean("has_more_active_branch", webOverviewBranches.HasMoreActiveBranchOption.Value!.Value);

            if (webOverviewBranches.HasMoreStaleBranchOption.IsSet)
                writer.WriteBoolean("has_more_stale_branch", webOverviewBranches.HasMoreStaleBranchOption.Value!.Value);

            if (webOverviewBranches.HasMoreYoursBranchOption.IsSet)
                writer.WriteBoolean("has_more_yours_branch", webOverviewBranches.HasMoreYoursBranchOption.Value!.Value);

            if (webOverviewBranches.InitializedOption.IsSet)
                writer.WriteBoolean("initialized", webOverviewBranches.InitializedOption.Value!.Value);

            if (webOverviewBranches.StaleBranchesOption.IsSet)
            {
                writer.WritePropertyName("stale_branches");
                JsonSerializer.Serialize(writer, webOverviewBranches.StaleBranches, jsonSerializerOptions);
            }
            if (webOverviewBranches.YoursBranchesOption.IsSet)
            {
                writer.WritePropertyName("yours_branches");
                JsonSerializer.Serialize(writer, webOverviewBranches.YoursBranches, jsonSerializerOptions);
            }
        }
    }
}
