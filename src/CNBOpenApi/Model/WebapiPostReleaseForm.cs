// <auto-generated>
/*
 * CNB OPENAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cnb@tencent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using CNBOpenApi.Client;

namespace CNBOpenApi.Model
{
    /// <summary>
    /// WebapiPostReleaseForm
    /// </summary>
    public partial class WebapiPostReleaseForm : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebapiPostReleaseForm" /> class.
        /// </summary>
        /// <param name="body">body</param>
        /// <param name="isDraft">isDraft</param>
        /// <param name="isPrerelease">isPrerelease</param>
        /// <param name="makeLatest">makeLatest</param>
        /// <param name="tagName">tagName</param>
        /// <param name="targetCommitish">targetCommitish</param>
        /// <param name="title">title</param>
        [JsonConstructor]
        public WebapiPostReleaseForm(Option<string?> body = default, Option<bool?> isDraft = default, Option<bool?> isPrerelease = default, Option<string?> makeLatest = default, Option<string?> tagName = default, Option<string?> targetCommitish = default, Option<string?> title = default)
        {
            BodyOption = body;
            IsDraftOption = isDraft;
            IsPrereleaseOption = isPrerelease;
            MakeLatestOption = makeLatest;
            TagNameOption = tagName;
            TargetCommitishOption = targetCommitish;
            TitleOption = title;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Body
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> BodyOption { get; private set; }

        /// <summary>
        /// Gets or Sets Body
        /// </summary>
        [JsonPropertyName("body")]
        public string? Body { get { return this.BodyOption; } set { this.BodyOption = new(value); } }

        /// <summary>
        /// Used to track the state of IsDraft
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> IsDraftOption { get; private set; }

        /// <summary>
        /// Gets or Sets IsDraft
        /// </summary>
        [JsonPropertyName("is_draft")]
        public bool? IsDraft { get { return this.IsDraftOption; } set { this.IsDraftOption = new(value); } }

        /// <summary>
        /// Used to track the state of IsPrerelease
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> IsPrereleaseOption { get; private set; }

        /// <summary>
        /// Gets or Sets IsPrerelease
        /// </summary>
        [JsonPropertyName("is_prerelease")]
        public bool? IsPrerelease { get { return this.IsPrereleaseOption; } set { this.IsPrereleaseOption = new(value); } }

        /// <summary>
        /// Used to track the state of MakeLatest
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> MakeLatestOption { get; private set; }

        /// <summary>
        /// Gets or Sets MakeLatest
        /// </summary>
        [JsonPropertyName("make_latest")]
        public string? MakeLatest { get { return this.MakeLatestOption; } set { this.MakeLatestOption = new(value); } }

        /// <summary>
        /// Used to track the state of TagName
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> TagNameOption { get; private set; }

        /// <summary>
        /// Gets or Sets TagName
        /// </summary>
        [JsonPropertyName("tag_name")]
        public string? TagName { get { return this.TagNameOption; } set { this.TagNameOption = new(value); } }

        /// <summary>
        /// Used to track the state of TargetCommitish
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> TargetCommitishOption { get; private set; }

        /// <summary>
        /// Gets or Sets TargetCommitish
        /// </summary>
        [JsonPropertyName("target_commitish")]
        public string? TargetCommitish { get { return this.TargetCommitishOption; } set { this.TargetCommitishOption = new(value); } }

        /// <summary>
        /// Used to track the state of Title
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> TitleOption { get; private set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [JsonPropertyName("title")]
        public string? Title { get { return this.TitleOption; } set { this.TitleOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebapiPostReleaseForm {\n");
            sb.Append("  Body: ").Append(Body).Append("\n");
            sb.Append("  IsDraft: ").Append(IsDraft).Append("\n");
            sb.Append("  IsPrerelease: ").Append(IsPrerelease).Append("\n");
            sb.Append("  MakeLatest: ").Append(MakeLatest).Append("\n");
            sb.Append("  TagName: ").Append(TagName).Append("\n");
            sb.Append("  TargetCommitish: ").Append(TargetCommitish).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="WebapiPostReleaseForm" />
    /// </summary>
    public class WebapiPostReleaseFormJsonConverter : JsonConverter<WebapiPostReleaseForm>
    {
        /// <summary>
        /// Deserializes json to <see cref="WebapiPostReleaseForm" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override WebapiPostReleaseForm Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> body = default;
            Option<bool?> isDraft = default;
            Option<bool?> isPrerelease = default;
            Option<string?> makeLatest = default;
            Option<string?> tagName = default;
            Option<string?> targetCommitish = default;
            Option<string?> title = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "body":
                            body = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "is_draft":
                            isDraft = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "is_prerelease":
                            isPrerelease = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "make_latest":
                            makeLatest = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "tag_name":
                            tagName = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "target_commitish":
                            targetCommitish = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "title":
                            title = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (body.IsSet && body.Value == null)
                throw new ArgumentNullException(nameof(body), "Property is not nullable for class WebapiPostReleaseForm.");

            if (isDraft.IsSet && isDraft.Value == null)
                throw new ArgumentNullException(nameof(isDraft), "Property is not nullable for class WebapiPostReleaseForm.");

            if (isPrerelease.IsSet && isPrerelease.Value == null)
                throw new ArgumentNullException(nameof(isPrerelease), "Property is not nullable for class WebapiPostReleaseForm.");

            if (makeLatest.IsSet && makeLatest.Value == null)
                throw new ArgumentNullException(nameof(makeLatest), "Property is not nullable for class WebapiPostReleaseForm.");

            if (tagName.IsSet && tagName.Value == null)
                throw new ArgumentNullException(nameof(tagName), "Property is not nullable for class WebapiPostReleaseForm.");

            if (targetCommitish.IsSet && targetCommitish.Value == null)
                throw new ArgumentNullException(nameof(targetCommitish), "Property is not nullable for class WebapiPostReleaseForm.");

            if (title.IsSet && title.Value == null)
                throw new ArgumentNullException(nameof(title), "Property is not nullable for class WebapiPostReleaseForm.");

            return new WebapiPostReleaseForm(body, isDraft, isPrerelease, makeLatest, tagName, targetCommitish, title);
        }

        /// <summary>
        /// Serializes a <see cref="WebapiPostReleaseForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webapiPostReleaseForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, WebapiPostReleaseForm webapiPostReleaseForm, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, webapiPostReleaseForm, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="WebapiPostReleaseForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webapiPostReleaseForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, WebapiPostReleaseForm webapiPostReleaseForm, JsonSerializerOptions jsonSerializerOptions)
        {
            if (webapiPostReleaseForm.BodyOption.IsSet && webapiPostReleaseForm.Body == null)
                throw new ArgumentNullException(nameof(webapiPostReleaseForm.Body), "Property is required for class WebapiPostReleaseForm.");

            if (webapiPostReleaseForm.MakeLatestOption.IsSet && webapiPostReleaseForm.MakeLatest == null)
                throw new ArgumentNullException(nameof(webapiPostReleaseForm.MakeLatest), "Property is required for class WebapiPostReleaseForm.");

            if (webapiPostReleaseForm.TagNameOption.IsSet && webapiPostReleaseForm.TagName == null)
                throw new ArgumentNullException(nameof(webapiPostReleaseForm.TagName), "Property is required for class WebapiPostReleaseForm.");

            if (webapiPostReleaseForm.TargetCommitishOption.IsSet && webapiPostReleaseForm.TargetCommitish == null)
                throw new ArgumentNullException(nameof(webapiPostReleaseForm.TargetCommitish), "Property is required for class WebapiPostReleaseForm.");

            if (webapiPostReleaseForm.TitleOption.IsSet && webapiPostReleaseForm.Title == null)
                throw new ArgumentNullException(nameof(webapiPostReleaseForm.Title), "Property is required for class WebapiPostReleaseForm.");

            if (webapiPostReleaseForm.BodyOption.IsSet)
                writer.WriteString("body", webapiPostReleaseForm.Body);

            if (webapiPostReleaseForm.IsDraftOption.IsSet)
                writer.WriteBoolean("is_draft", webapiPostReleaseForm.IsDraftOption.Value!.Value);

            if (webapiPostReleaseForm.IsPrereleaseOption.IsSet)
                writer.WriteBoolean("is_prerelease", webapiPostReleaseForm.IsPrereleaseOption.Value!.Value);

            if (webapiPostReleaseForm.MakeLatestOption.IsSet)
                writer.WriteString("make_latest", webapiPostReleaseForm.MakeLatest);

            if (webapiPostReleaseForm.TagNameOption.IsSet)
                writer.WriteString("tag_name", webapiPostReleaseForm.TagName);

            if (webapiPostReleaseForm.TargetCommitishOption.IsSet)
                writer.WriteString("target_commitish", webapiPostReleaseForm.TargetCommitish);

            if (webapiPostReleaseForm.TitleOption.IsSet)
                writer.WriteString("title", webapiPostReleaseForm.Title);
        }
    }
}
