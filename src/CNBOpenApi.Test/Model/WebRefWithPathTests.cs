/*
 * CNB OPENAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: cnb@tencent.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CNBOpenApi.Model;
using CNBOpenApi.Client;
using System.Reflection;

namespace CNBOpenApi.Test.Model
{
    /// <summary>
    ///  Class for testing WebRefWithPath
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class WebRefWithPathTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for WebRefWithPath
        //private WebRefWithPath instance;

        public WebRefWithPathTests()
        {
            // TODO uncomment below to create an instance of WebRefWithPath
            //instance = new WebRefWithPath();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WebRefWithPath
        /// </summary>
        [Fact]
        public void WebRefWithPathInstanceTest()
        {
            // TODO uncomment below to test "IsType" WebRefWithPath
            //Assert.IsType<WebRefWithPath>(instance);
        }

        /// <summary>
        /// Test the property 'Initialized'
        /// </summary>
        [Fact]
        public void InitializedTest()
        {
            // TODO unit test for the property 'Initialized'
        }

        /// <summary>
        /// Test the property 'Path'
        /// </summary>
        [Fact]
        public void PathTest()
        {
            // TODO unit test for the property 'Path'
        }

        /// <summary>
        /// Test the property 'Ref'
        /// </summary>
        [Fact]
        public void RefTest()
        {
            // TODO unit test for the property 'Ref'
        }

        /// <summary>
        /// Test the property 'RefSimpleName'
        /// </summary>
        [Fact]
        public void RefSimpleNameTest()
        {
            // TODO unit test for the property 'RefSimpleName'
        }

        /// <summary>
        /// Test the property 'RefType'
        /// </summary>
        [Fact]
        public void RefTypeTest()
        {
            // TODO unit test for the property 'RefType'
        }
    }
}
