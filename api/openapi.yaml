openapi: 3.0.1
info:
  contact:
    email: cnb@tencent.com
    name: Open API Support
    url: https://docs.cnb.cool/
  title: CNB OPENAPI
  version: "1.0"
servers:
- url: /
paths:
  /groups:
    post:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:rw"
      operationId: CreateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.CreateGroupReq'
        description: group information
        required: true
      responses:
        "201":
          content: {}
          description: Created
      security:
      - BearerAuth: []
      summary: 创建新组织
      tags:
      - Organizations
      x-codegen-request-body-name: request
  /user:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-profile:r"
      operationId: GetUserInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.UsersResultForSelf'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.UsersResultForSelf'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.UsersResultForSelf'
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定用户的详情信息
      tags:
      - Users
    post:
      description: "访问令牌调用此接口需包含以下权限 \naccount-profile:rw"
      operationId: UpdateUserInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/http.UpdateUserInfoPayload'
        description: user info
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: "更新指定用户的详情信息, 可更新内容为: 昵称, 个人签名, 微信公众号名称, 微信公众号二维码链接, 个人网站, 个人地址, 公司\
        名称"
      tags:
      - Users
      x-codegen-request-body-name: request
  /user/autocomplete_source:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-engage:r"
      operationId: AutoCompleteSource
      parameters:
      - description: "资源类型, 默认group"
        in: query
        name: source_type
        schema:
          enum:
          - Group
          - Repo
          type: string
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 过滤组织
        in: query
        name: search
        schema:
          type: string
      - description: 最小仓库权限，默认owner
        in: query
        name: access
        schema:
          enum:
          - Reporter
          - Developer
          - Master
          - Owner
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  type: string
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 查询当前用户用户拥有指定权限的所有资源列表
      tags:
      - Users
  /user/groups:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-engage:r"
      operationId: ListTopGroups
      parameters:
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 过滤组织
        in: query
        name: search
        schema:
          type: string
      - description: 筛选角色
        in: query
        name: role
        schema:
          enum:
          - Guest
          - Reporter
          - Developer
          - Master
          - Owner
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.OrganizationAccess'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.OrganizationAccess'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.OrganizationAccess'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取当前用户拥有权限的顶层组织列表
      tags:
      - Organizations
  /user/groups/{group}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-engage:r"
      operationId: ListGroups
      parameters:
      - description: Group slug
        in: path
        name: group
        required: true
        schema:
          default: hello
          type: string
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: access level
        in: query
        name: access
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.OrganizationAccess'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.OrganizationAccess'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.OrganizationAccess'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 查询当前用户在指定组织下拥有指定权限的子组织列表
      tags:
      - Organizations
  /user/repos:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-engage:r"
      operationId: GetRepos
      parameters:
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 过滤仓库
        in: query
        name: search
        schema:
          type: string
      - description: 仓库类型
        in: query
        name: filter_type
        schema:
          enum:
          - private
          - public
          - encrypted
          type: string
      - description: 最小仓库权限，默认owner
        in: query
        name: role
        schema:
          enum:
          - Reporter
          - Developer
          - Master
          - Owner
          type: string
      - description: 排序类型，默认last_updated_at
        in: query
        name: order_by
        schema:
          enum:
          - created_at
          - last_updated_at
          - stars
          - slug_path
          - forks
          type: string
      - description: 排序顺序
        in: query
        name: desc
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4User'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4User'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4User'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取当前用户拥有指定权限及其以上权限的仓库
      tags:
      - Repositories
  /user/stared-repos:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-engage:r"
      operationId: GetUserAllStaredRepos
      parameters:
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 过滤仓库
        in: query
        name: search
        schema:
          type: string
      - description: 排序顺序
        in: query
        name: desc
        schema:
          default: false
          type: boolean
      - description: 排序类型，默认last_updated_at
        in: query
        name: order_by
        schema:
          enum:
          - created_at
          - last_updated_at
          - stars
          - forks
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4UserBase'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4UserBase'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4UserBase'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取当前用户 star 的仓库列表
      tags:
      - Repositories
  /users/{username}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-profile:r"
      operationId: GetUserInfoByName
      parameters:
      - description: User Name
        in: path
        name: username
        required: true
        schema:
          default: someone
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.UsersResult'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.UsersResult'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.UsersResult'
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定用户的详情信息
      tags:
      - Users
  /users/{username}/avatar/{size}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-profile:r"
      operationId: GetUserAvatar
      parameters:
      - description: User Name
        in: path
        name: username
        required: true
        schema:
          default: someone
          type: string
      - description: 头像大小，取 s 或者 l
        in: path
        name: size
        required: true
        schema:
          type: string
      summary: 获取指定用户的用户头像
      tags:
      - Assets
  /users/{username}/followers:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-engage:r"
      operationId: GetFollowersByUserID
      parameters:
      - description: User Name
        in: path
        name: username
        required: true
        schema:
          default: someone
          type: string
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UserFollowResult'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UserFollowResult'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UserFollowResult'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定用户的粉丝列表
      tags:
      - Followers
  /users/{username}/following:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-engage:r"
      operationId: GetFollowingByUserID
      parameters:
      - description: User Name
        in: path
        name: username
        required: true
        schema:
          default: someone
          type: string
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UserFollowResult'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UserFollowResult'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UserFollowResult'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定用户的关注人列表
      tags:
      - Followers
  /users/{username}/groups:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-engage:r"
      operationId: GetGroupsByUserID
      parameters:
      - description: UserName
        in: path
        name: username
        required: true
        schema:
          default: someone
          type: string
      - description: 过滤组织
        in: query
        name: search
        schema:
          type: string
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 排序顺序
        in: query
        name: desc
        schema:
          default: false
          type: boolean
      - description: 排序类型，默认为created_at
        in: query
        name: order_by
        schema:
          enum:
          - join_time
          - created_at
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.OrganizationUnion'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.OrganizationUnion'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.OrganizationUnion'
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定用户拥有权限的顶层组织列表
      tags:
      - Organizations
  /users/{username}/pinned-repos:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-engage:r"
      operationId: GetPinnedRepoByID
      parameters:
      - description: User Name
        in: path
        name: username
        required: true
        schema:
          default: someone
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4User'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4User'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4User'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定用户的用户仓库墙
      tags:
      - Repositories
  /users/{username}/repos:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-engage:r"
      operationId: GetReposByUserName
      parameters:
      - description: UserName
        in: path
        name: username
        required: true
        schema:
          default: someone
          type: string
      - description: 过滤仓库
        in: query
        name: search
        schema:
          type: string
      - description: 最小仓库权限，默认owner
        in: query
        name: role
        schema:
          enum:
          - Reporter
          - Developer
          - Master
          - Owner
          type: string
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 排序顺序
        in: query
        name: desc
        schema:
          default: false
          type: boolean
      - description: 排序类型，默认last_updated_at
        in: query
        name: order_by
        schema:
          enum:
          - created_at
          - last_updated_at
          - stars
          - slug_path
          - forks
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4User'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4User'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4User'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定用户有指定以上权限并且客人态可见的仓库
      tags:
      - Repositories
  /users/{username}/stared-repos:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-engage:r"
      operationId: GetUserStaredRepos
      parameters:
      - description: UserName
        in: path
        name: username
        required: true
        schema:
          default: someone
          type: string
      - description: 过滤仓库
        in: query
        name: search
        schema:
          type: string
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 排序顺序
        in: query
        name: desc
        schema:
          default: false
          type: boolean
      - description: 排序类型，默认last_updated_at
        in: query
        name: order_by
        schema:
          enum:
          - created_at
          - last_updated_at
          - stars
          - forks
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4User'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4User'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4User'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定用户的 star 仓库列表
      tags:
      - Starring
  /workspace/delete:
    post:
      description: "访问令牌调用此接口需包含以下权限 \naccount-engage:rw"
      operationId: DeleteWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.WorkspaceDeleteReq'
        description: 参数
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.WorkspaceDeleteResult'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.WorkspaceDeleteResult'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.WorkspaceDeleteResult'
          description: OK
      security:
      - BearerAuth: []
      summary: 删除我的云原生开发环境
      tags:
      - Workspace
      x-codegen-request-body-name: request
  /workspace/list:
    get:
      description: "访问令牌调用此接口需包含以下权限 \naccount-engage:r"
      operationId: ListWorkspaces
      parameters:
      - description: 分支名，例如：main
        in: query
        name: branch
        schema:
          type: string
      - description: 查询结束时间，格式：YYYY-MM-DD HH:mm:ssZZ，例如：2024-12-01 00:00:00+0800
        in: query
        name: end
        schema:
          type: string
      - description: 分页页码，从 1 开始，默认为 1
        in: query
        name: page
        schema:
          type: integer
      - description: 每页条数，默认为 20，最高 100
        in: query
        name: pageSize
        schema:
          type: integer
      - description: 仓库路径，例如：groupname/reponame
        in: query
        name: slug
        schema:
          type: string
      - description: 查询开始时间，格式：YYYY-MM-DD HH:mm:ssZZ，例如：2024-12-01 00:00:00+0800
        in: query
        name: start
        schema:
          type: string
      - description: "开发环境状态，running: 开发环境已启动，closed：开发环境已关闭"
        in: query
        name: status
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.WorkspaceListResult'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.WorkspaceListResult'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.WorkspaceListResult'
          description: OK
      security:
      - BearerAuth: []
      summary: 获取我的云原生开发环境列表
      tags:
      - Workspace
  /{group}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-delete:rw"
      operationId: DeleteOrganization
      parameters:
      - description: group path
        in: path
        name: group
        required: true
        schema:
          type: string
      - description: 微信用户需要确认身份，第一次调用不传接口会调用失败并返回一个x-cnb-identity-ticket，第二次调用再传返回的值
        in: header
        name: x-cnb-identity-ticket
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 删除指定组织
      tags:
      - Organizations
    get:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-resource:r"
      operationId: GetGroup
      parameters:
      - description: group path
        in: path
        name: group
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.OrganizationAccess'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.OrganizationAccess'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.OrganizationAccess'
          description: group
      security:
      - BearerAuth: []
      summary: 获取指定组织信息
      tags:
      - Organizations
    put:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:rw"
      operationId: UpdateOrganization
      parameters:
      - description: slug
        in: path
        name: group
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UpdateGroupReq'
        description: group information to update
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: "更新组织信息, 可更新的内容为: 组织描述, 组织展示名称, 组织网站, 组织联系邮箱"
      tags:
      - Organizations
      x-codegen-request-body-name: request
  /{group}/-/avatar:
    put:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:rw"
      operationId: UpdateGroupAvatar
      parameters:
      - description: slug
        in: path
        name: group
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UpdateGroupAvatarReq'
        description: group avatar url to update
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 更新组织头像 URL 地址
      tags:
      - Organizations
      x-codegen-request-body-name: request
  /{group}/-/inherit-members:
    get:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:r"
      operationId: ListInheritMembersOfGroup
      parameters:
      - description: slug
        in: path
        name: group
        required: true
        schema:
          type: string
      - description: 过滤成员
        in: query
        name: search
        schema:
          type: string
      - description: 筛选角色
        in: query
        name: role
        schema:
          enum:
          - Guest
          - Reporter
          - Developer
          - Master
          - Owner
          type: string
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ListInheritMembers'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ListInheritMembers'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ListInheritMembers'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定组织或仓库内的继承成员
      tags:
      - Collaborators
  /{group}/-/logos:
    put:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:rw"
      operationId: PutLogos
      parameters:
      - description: group
        in: path
        name: group
        required: true
        schema:
          default: test-group/test-repo
          type: string
      - description: 获取 uploadurl 时返回的token
        in: query
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 确认上传的logo
      tags:
      - Assets
  /{group}/-/logos/{size}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-resource:r"
      operationId: GetLogos
      parameters:
      - description: group
        in: path
        name: group
        required: true
        schema:
          default: test-group
          type: string
      - description: size
        in: path
        name: size
        required: true
        schema:
          type: string
      responses:
        "302":
          content: {}
          description: Found
      security:
      - BearerAuth: []
      summary: 发起一个获取 logo 的请求，返回内容或者 302 到某个地址
      tags:
      - Assets
  /{group}/-/members:
    get:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:r"
      operationId: ListMembersOfGroup
      parameters:
      - description: slug
        in: path
        name: group
        required: true
        schema:
          type: string
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 筛选角色
        in: query
        name: role
        schema:
          enum:
          - Guest
          - Reporter
          - Developer
          - Master
          - Owner
          type: string
      - description: 过滤成员
        in: query
        name: search
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UsersWithAccessLevelInSlug'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UsersWithAccessLevelInSlug'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UsersWithAccessLevelInSlug'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定组织或仓库内的所有直接成员
      tags:
      - Collaborators
  /{group}/-/members/access-level:
    get:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:r"
      operationId: GetMemberAccessLevelOfGroup
      parameters:
      - description: slug
        in: path
        name: group
        required: true
        schema:
          type: string
      - description: 是否包含继承的权限
        in: query
        name: include_inherit
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.MemberAccessLevelInSlugUnion'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.MemberAccessLevelInSlugUnion'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.MemberAccessLevelInSlugUnion'
          description: OK
      security:
      - BearerAuth: []
      summary: "获取指定组织或仓库内, 访问成员在当前层级内的权限信息"
      tags:
      - Contributors
  /{group}/-/members/{username}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:rw"
      operationId: DeleteMembersOfGroup
      parameters:
      - description: slug
        in: path
        name: group
        required: true
        schema:
          type: string
      - description: username
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: "删除指定组织或仓库的直接成员, 包含两种场景: 1. 作为直接成员的用户自己退出 2. 由管理者移除指定的直接成员"
      tags:
      - Collaborators
    post:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:rw"
      operationId: AddMembersOfGroup
      parameters:
      - description: slug
        in: path
        name: group
        required: true
        schema:
          type: string
      - description: username
        in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UpdateMembersRequest'
        description: member information
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 添加成员
      tags:
      - Collaborators
      x-codegen-request-body-name: request
    put:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:rw"
      operationId: UpdateMembersOfGroup
      parameters:
      - description: slug
        in: path
        name: group
        required: true
        schema:
          type: string
      - description: username
        in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UpdateMembersRequest'
        description: member information
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 更新指定组织或仓库内的直接成员权限信息
      tags:
      - Collaborators
      x-codegen-request-body-name: request
  /{group}/-/members/{username}/access-level:
    get:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:r"
      operationId: ListMemberAccessLevelOfGroup
      parameters:
      - description: slug
        in: path
        name: group
        required: true
        schema:
          type: string
      - description: username
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.MemberAccessLevel'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.MemberAccessLevel'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.MemberAccessLevel'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: "获取指定组织或仓库内指定成员的权限信息, 结果按组织层级来展示, 包含上层组织的权限继承信息"
      tags:
      - Contributors
  /{group}/-/pinned-repos:
    get:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:r"
      operationId: GetPinnedRepoByGroup
      parameters:
      - description: slug
        in: path
        name: group
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4UserBase'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4UserBase'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4UserBase'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定组织的仓库墙列表
      tags:
      - Repositories
    put:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:rw"
      operationId: SetPinnedRepoByGroup
      parameters:
      - description: slug
        in: path
        name: group
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: repo path
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4UserBase'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4UserBase'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4UserBase'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 更新指定组织仓库墙
      tags:
      - Repositories
      x-codegen-request-body-name: request
  /{group}/-/repos:
    get:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-resource:r"
      operationId: GetGroupSubRepos
      parameters:
      - description: 组织 slug
        in: path
        name: group
        required: true
        schema:
          type: string
      - description: 页码
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页数量
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 仓库类型
        in: query
        name: filter_type
        schema:
          enum:
          - private
          - public
          - encrypted
          type: string
      - description: 排序类型，默认last_updated_at
        in: query
        name: order_by
        schema:
          enum:
          - created_at
          - last_updated_at
          - stars
          - slug_path
          type: string
      - description: 排序顺序
        in: query
        name: desc
        schema:
          default: false
          type: boolean
      - description: 查全部/查询直接属于当前组织的仓库/查询子组织的仓库
        in: query
        name: descendant
        schema:
          enum:
          - all
          - sub
          - grand
          type: string
      - description: 搜索关键字
        in: query
        name: search
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4UserBase'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Repos4UserBase'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 查询组织下访问用户有权限查看到仓库
      tags:
      - Repositories
    post:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-resource:rw"
      operationId: CreateRepo
      parameters:
      - description: Group slug
        in: path
        name: group
        required: true
        schema:
          default: hello
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.CreateRepoReq'
        description: repo information
        required: true
      responses:
        "201":
          content: {}
          description: Created
      security:
      - BearerAuth: []
      summary: 创建仓库
      tags:
      - Repositories
      x-codegen-request-body-name: request
  /{group}/-/settings:
    get:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:r"
      operationId: GetGroupSetting
      parameters:
      - description: group path
        in: path
        name: group
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.OrganizationSettingWithParent'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.OrganizationSettingWithParent'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.OrganizationSettingWithParent'
          description: OK
      summary: 获取指定组织的配置详情
      tags:
      - Organizations
    put:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:rw"
      operationId: UpdateGroupSetting
      parameters:
      - description: slug
        in: path
        name: group
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.GroupSettingReq'
        description: group information to update
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: "更新指定组织的配置, 可更新内容为: 是否对外隐藏组织成员"
      tags:
      - Organizations
      x-codegen-request-body-name: request
  /{group}/-/sub-groups:
    get:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-resource:r"
      operationId: ListSubgroups
      parameters:
      - description: Slug
        in: path
        name: group
        required: true
        schema:
          type: string
      - description: 过滤组织
        in: query
        name: search
        schema:
          type: string
      - description: page
        in: query
        name: page
        required: true
        schema:
          default: 1
          type: integer
      - description: page
        in: query
        name: page_size
        required: true
        schema:
          default: 10
          type: integer
      responses:
        "200":
          content:
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.OrganizationUnion'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.OrganizationUnion'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定组织下的子组织列表
      tags:
      - Organizations
  /{group}/-/upload/logos:
    post:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-manage:rw"
      operationId: UploadLogos
      parameters:
      - description: group
        in: path
        name: group
        required: true
        schema:
          default: test-group
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UploadRequestParams'
        description: UploadRequestParams
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.UploadAssetsResponse'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.UploadAssetsResponse'
          description: OK
      security:
      - BearerAuth: []
      summary: 发起一个上传 logo 的请求，返回上传 cos 的 url 和 form 内容
      tags:
      - Assets
      x-codegen-request-body-name: request
  /{mission}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nmission-delete:rw"
      operationId: DeleteMission
      parameters:
      - description: mission path
        in: path
        name: mission
        required: true
        schema:
          type: string
      - description: 微信用户需要确认身份，第一次调用不传接口会调用失败并返回一个x-cnb-identity-ticket，第二次调用再传返回的值
        in: header
        name: x-cnb-identity-ticket
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 删除指定任务集
      tags:
      - Missions
  /{mission}/-/members/{username}:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nmission-manage:rw"
      operationId: AddMembersOfMission
      parameters:
      - description: slug
        in: path
        name: mission
        required: true
        schema:
          type: string
      - description: username
        in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UpdateMembersRequest'
        description: member information
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 添加成员
      tags:
      - Collaborators
      x-codegen-request-body-name: request
  /{registry}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nregistry-delete:rw"
      operationId: DeleteRegistry
      parameters:
      - description: registry path
        in: path
        name: registry
        required: true
        schema:
          type: string
      - description: 微信用户需要确认身份，第一次调用不传接口会调用失败并返回一个x-cnb-identity-ticket，第二次调用再传返回的值
        in: header
        name: x-cnb-identity-ticket
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 删除制品仓库
      tags:
      - Artifactory
  /{registry}/-/members/{username}:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nregistry-manage:rw"
      operationId: AddMembersOfRegistry
      parameters:
      - description: slug
        in: path
        name: registry
        required: true
        schema:
          type: string
      - description: username
        in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UpdateMembersRequest'
        description: member information
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 添加成员
      tags:
      - Collaborators
      x-codegen-request-body-name: request
  /{repo}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-delete:rw"
      operationId: DeleteRepo
      parameters:
      - description: repo path
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: 微信用户需要确认身份，第一次调用不传接口会调用失败并返回一个x-cnb-identity-ticket，第二次调用再传返回的值
        in: header
        name: x-cnb-identity-ticket
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 删除指定仓库
      tags:
      - Repositories
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-basic-info:r"
      operationId: GetRepo
      parameters:
      - description: repo path
        in: path
        name: repo
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Repos4User'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.Repos4User'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.Repos4User'
          description: repo
      security:
      - BearerAuth: []
      summary: 获取指定仓库信息
      tags:
      - Repositories
    patch:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:rw"
      operationId: UpdateRepo
      parameters:
      - description: 仓库路径
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RepoPatch'
        description: 仓库信息
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: "更新仓库信息, 可更新的内容为: 仓库简介, 仓库站点, 仓库主题, 开源许可证"
      tags:
      - Repositories
      x-codegen-request-body-name: request
  /{repo}/-/build/logs:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-cnb-trigger:r"
      operationId: GetBuildLogs
      parameters:
      - description: 仓库路径
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: 开始时间，格式：YYYY-MM-DD，例如：2024-12-01
        in: query
        name: createTime
        schema:
          type: string
      - description: 结束时间，格式：YYYY-MM-DD，例如：2024-12-01
        in: query
        name: endTime
        schema:
          type: string
      - description: 事件名，例如：push
        in: query
        name: event
        schema:
          type: string
      - description: 页数，从 1 开始
        in: query
        name: page
        schema:
          type: integer
      - description: 每页数量，最大 100 条，默认 20 条
        in: query
        name: pagesize
        schema:
          type: integer
      - description: commit id，例如：2221d4535ec0c921bcd0858627c5025a871dd2b5
        in: query
        name: sha
        schema:
          type: string
      - description: 构建号，例如：cnb-1qa-1i3f5ecau
        in: query
        name: sn
        schema:
          type: string
      - description: 源分支名，例如：dev
        in: query
        name: sourceRef
        schema:
          type: string
      - description: "构建状态，pending: 构建中、success：成功、error: 失败、cancel: 取消"
        in: query
        name: status
        schema:
          type: string
      - description: 目标分支名，例如：main
        in: query
        name: targetRef
        schema:
          type: string
      - description: 用户 id
        in: query
        name: userId
        schema:
          type: string
      - description: 用户名
        in: query
        name: userName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.BuildLogsResult'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.BuildLogsResult'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.BuildLogsResult'
          description: OK
      security:
      - BearerAuth: []
      summary: 查询流水线构建列表
      tags:
      - Build
  /{repo}/-/build/start:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-cnb-trigger:rw"
      operationId: StartBuild
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.StartBuildReq'
        description: 构建参数
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.BuildResult'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.BuildResult'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.BuildResult'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 开始一个构建
      tags:
      - Build
      x-codegen-request-body-name: request
  /{repo}/-/build/status/{sn}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-cnb-trigger:r"
      operationId: GetBuildStatus
      parameters:
      - description: 仓库路径
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: 构建号
        in: path
        name: sn
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.BuildStatusResult'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.BuildStatusResult'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.BuildStatusResult'
          description: OK
      security:
      - BearerAuth: []
      summary: 查询流水线构建状态
      tags:
      - Build
  /{repo}/-/build/stop/{sn}:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-cnb-trigger:rw"
      operationId: StopBuild
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: 构建号
        in: path
        name: sn
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.BuildResult'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.BuildResult'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.BuildResult'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 停止一个构建
      tags:
      - Build
  /{repo}/-/commit-assets/download/{fileName}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:r"
      operationId: GetCommitAssets
      parameters:
      - description: Repo
        in: path
        name: repo
        required: true
        schema:
          default: test-group/test-repo
          type: string
      - description: 包含commitSha和文件名，例如 3bba1ce6a8c35ee1264c7449f4f0b512bd751eac/test.png
        in: path
        name: fileName
        required: true
        schema:
          type: string
      responses:
        "302":
          content: {}
          description: Found
      security:
      - BearerAuth: []
      summary: 发起一个获取 commits 附件的请求，返回内容或者 302 到某个地址
      tags:
      - Assets
  /{repo}/-/contributor/trend:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetRepoContributorTrend
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: "limit, 0~100"
        in: query
        name: limit
        schema:
          default: 14
          type: integer
      - description: "exclude_external_users, true|false"
        in: query
        name: exclude_external_users
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/web.RepoContribTrend'
          description: OK
        "404":
          content:
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询仓库贡献者前 100 名的详细趋势数据
      tags:
      - RepoContributor
  /{repo}/-/files/{userIdKey}/{randomUUID}/{fileName}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:r"
      operationId: GetFiles
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          default: test-group/test-repo
          type: string
      - description: user_id_key
        in: path
        name: userIdKey
        required: true
        schema:
          type: string
      - description: random_uuid
        in: path
        name: randomUUID
        required: true
        schema:
          type: string
      - description: file_name
        in: path
        name: fileName
        required: true
        schema:
          type: string
      responses:
        "302":
          content: {}
          description: Found
      security:
      - BearerAuth: []
      summary: 发起一个获取 files 的请求，返回内容或者 302 到某个地址
      tags:
      - Assets
    put:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:rw"
      operationId: PutFiles
      parameters:
      - description: Repo
        in: path
        name: repo
        required: true
        schema:
          default: test-group/test-repo
          type: string
      - description: user_id_key
        in: path
        name: userIdKey
        required: true
        schema:
          type: string
      - description: random_uuid
        in: path
        name: randomUUID
        required: true
        schema:
          type: string
      - description: file_name
        in: path
        name: fileName
        required: true
        schema:
          type: string
      - description: 获取 uploadurl 时返回的token
        in: query
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 发起一个确认 files 的请求，上传的图片要调用此接口才能生效
      tags:
      - Assets
  /{repo}/-/forks:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-base-info:r"
      operationId: ListForksRepos
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: page
        in: query
        name: page
        required: true
        schema:
          default: 1
          type: integer
      - description: page
        in: query
        name: page_size
        required: true
        schema:
          default: 10
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Forks'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Forks'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Forks'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定仓库的 fork 列表
      tags:
      - Repositories
    post:
      description: "访问令牌调用此接口需包含以下权限 \ngroup-resource:rw"
      operationId: CreateAFork
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.ForkReq'
        description: target
        required: true
      responses:
        "201":
          content: {}
          description: Created
      security:
      - BearerAuth: []
      summary: fork 仓库
      tags:
      - Repositories
      x-codegen-request-body-name: request
  /{repo}/-/git/archive-commit-changed-files/{sha1}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetArchiveCommitChangedFiles
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: commit sha
        in: path
        name: sha1
        required: true
        schema:
          type: string
      responses:
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 打包下载 commit 变更文件
      tags:
      - Git
  /{repo}/-/git/archive-compare-changed-files/{base_head}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetArchiveCompareChangedFiles
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: base...head
        in: path
        name: base_head
        required: true
        schema:
          type: string
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 打包下载两次 ref 之间的变更文件
      tags:
      - Git
  /{repo}/-/git/blobs:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: CreateBlob
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.PostBlobForm'
        description: PostBlobForm
        required: true
      responses:
        "201":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Blob'
          description: Created
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 创建一个 blob
      tags:
      - Git
      x-codegen-request-body-name: post_blob_form
  /{repo}/-/git/branches:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: ListBranches
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: pagination page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: pagination page size
        in: query
        name: page_size
        schema:
          default: 30
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Branch'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Branch'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询分支列表
      tags:
      - Git
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: CreateBranch
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/openapi.CreateBranchForm'
        description: Create BranchDetail Form
        required: true
      responses:
        "201":
          content: {}
          description: Created
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 创建新分支
      tags:
      - Git
      x-codegen-request-body-name: create_branch_form
  /{repo}/-/git/branches/{branch}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: DeleteBranch
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: branch name
        in: path
        name: branch
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 删除指定分支
      tags:
      - Git
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetBranch
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: branch name
        in: path
        name: branch
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.BranchDetail'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.BranchDetail'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询指定分支
      tags:
      - Git
  /{repo}/-/git/commit-annotations-in-batch:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetCommitAnnotationsInBatch
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/web.GetCommitAnnotationsInBatchForm'
        description: Get Commit Annotations In Batch Form
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/web.CommitAnnotationInBatch'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/web.CommitAnnotationInBatch'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询指定 commit 的元数据
      tags:
      - Git
      x-codegen-request-body-name: get_commit_annotations_form
  /{repo}/-/git/commit-annotations/{sha}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetCommitAnnotations
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: commit hash
        in: path
        name: sha
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/web.CommitAnnotation'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/web.CommitAnnotation'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询指定 commit 的元数据
      tags:
      - Git
    put:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: PutCommitAnnotations
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: commit hash
        in: path
        name: sha
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openapi.PutCommitAnnotationsForm'
        description: Put Commit Annotations Form
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 设定指定 commit 的元数据
      tags:
      - Git
      x-codegen-request-body-name: put_commit_annotations_form
  /{repo}/-/git/commit-annotations/{sha}/{key}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: DeleteCommitAnnotation
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: commit hash
        in: path
        name: sha
        required: true
        schema:
          type: string
      - description: commit annotation key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 删除指定 commit 的元数据
      tags:
      - Git
  /{repo}/-/git/commit-assets/{sha1}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetCommitAssetsBySha
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: sha
        in: path
        name: sha1
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.CommitAsset'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.CommitAsset'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询指定 commit 的附件
      tags:
      - Git
  /{repo}/-/git/commit-assets/{sha1}/asset-upload-confirmation/{token}/{asset_path}:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: PostCommitAssetUploadConfirmation
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: sha
        in: path
        name: sha1
        required: true
        schema:
          type: integer
      - description: upload token
        in: path
        name: token
        required: true
        schema:
          type: string
      - description: release asset path
        in: path
        name: asset_path
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 确认 Commit asset 上传完成
      tags:
      - Git
  /{repo}/-/git/commit-assets/{sha1}/asset-upload-url:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: PostCommitAssetUploadURL
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: sha
        in: path
        name: sha1
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openapi.PostCommitAssetUploadURLForm'
        description: Post Commit Asset Upload URL Form
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/openapi.CommitAssetUploadURL'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/openapi.CommitAssetUploadURL'
          description: Created
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 新增一个 Commit asset
      tags:
      - Git
      x-codegen-request-body-name: create_commit_asset_upload_url_form
  /{repo}/-/git/commit-assets/{sha1}/{asset_id}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: DeleteCommitAsset
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: sha
        in: path
        name: sha1
        required: true
        schema:
          type: string
      - description: asset id
        in: path
        name: asset_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 删除指定 commit 的附件
      tags:
      - Git
  /{repo}/-/git/commit-statuses/{commitish}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetCommitStatuses
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: commitish
        in: path
        name: commitish
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.CommitStatus'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.CommitStatus'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询指定 commit 的 check statuses
      tags:
      - Git
  /{repo}/-/git/commits:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: ListCommits
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: sha or branch
        in: query
        name: sha
        schema:
          type: string
      - description: commit author pattern
        in: query
        name: author
        schema:
          type: string
      - description: commit committer pattern
        in: query
        name: committer
        schema:
          type: string
      - description: commit since
        in: query
        name: since
        schema:
          type: string
      - description: commit until
        in: query
        name: until
        schema:
          type: string
      - description: pagination page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: pagination page size
        in: query
        name: page_size
        schema:
          default: 30
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Commit'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Commit'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询 commit 列表
      tags:
      - Git
  /{repo}/-/git/commits/{ref}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetCommit
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: ref
        in: path
        name: ref
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Commit'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Commit'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询指定 commit
      tags:
      - Git
  /{repo}/-/git/compare/{base_head}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetCompareCommits
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: base...head
        in: path
        name: base_head
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CompareResponse'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.CompareResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 对比 base...head
      tags:
      - Git
  /{repo}/-/git/contents/{file_path}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetContent
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: path
        in: path
        name: file_path
        required: true
        schema:
          type: string
      - description: ref
        in: query
        name: ref
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Content'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Content'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询仓库文件列表或文件
      tags:
      - Git
  /{repo}/-/git/head:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetHead
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/openapi.HeadRef'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/openapi.HeadRef'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 获取仓库默认分支
      tags:
      - Git
  /{repo}/-/git/tag-annotations/{tag_with_key}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:rw"
      operationId: DeleteTagAnnotation
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: tag with key
        in: path
        name: tag_with_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 删除指定 tag 的元数据
      tags:
      - Git
  /{repo}/-/git/tag-annotations/{tag}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:r"
      operationId: GetTagAnnotations
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: tag
        in: path
        name: tag
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/web.TagAnnotation'
                type: array
          description: OK
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询指定 tag 的元数据
      tags:
      - Git
    put:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:rw"
      operationId: PutTagAnnotations
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: tag
        in: path
        name: tag
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openapi.PutTagAnnotationsForm'
        description: Put Tag Annotations Form
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 设定指定 tag 的元数据
      tags:
      - Git
      x-codegen-request-body-name: put_tag_annotations_form
  /{repo}/-/git/tags:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:r"
      operationId: ListTags
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: pagination page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: pagination page size
        in: query
        name: page_size
        schema:
          default: 30
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Tag'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Tag'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询标签列表
      tags:
      - Git
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: CreateTag
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.PostTagFrom'
        description: PostTagFrom
        required: true
      responses:
        "201":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Tag'
          description: Created
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 创建一个 tag
      tags:
      - Git
      x-codegen-request-body-name: post_tag_form
  /{repo}/-/git/tags/{tag}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:rw"
      operationId: DeleteTag
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: tag name
        in: path
        name: tag
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 删除指定标签
      tags:
      - Git
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:r"
      operationId: GetTag
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: tag name
        in: path
        name: tag
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Tag'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Tag'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询指定 Tag
      tags:
      - Git
  /{repo}/-/imgs/{userIdKey}/{fileName}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:r"
      operationId: GetImgs
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          default: test-group/test-repo
          type: string
      - description: user_id_key
        in: path
        name: userIdKey
        required: true
        schema:
          type: string
      - description: file_name
        in: path
        name: fileName
        required: true
        schema:
          type: string
      responses:
        "302":
          content: {}
          description: Found
      security:
      - BearerAuth: []
      summary: 发起一个获取 imgs 的请求，返回内容或者 302 到某个地址
      tags:
      - Assets
    put:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:rw"
      operationId: PutImgs
      parameters:
      - description: Repo
        in: path
        name: repo
        required: true
        schema:
          default: test-group/test-repo
          type: string
      - description: user_id_key
        in: path
        name: userIdKey
        required: true
        schema:
          type: string
      - description: file_name
        in: path
        name: fileName
        required: true
        schema:
          type: string
      - description: 获取 uploadurl 时返回的token
        in: query
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 发起一个确认 imgs 的请求，上传的图片要调用此接口才能生效
      tags:
      - Assets
  /{repo}/-/inherit-members:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:r"
      operationId: ListInheritMembersOfRepo
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: 过滤成员
        in: query
        name: search
        schema:
          type: string
      - description: 筛选角色
        in: query
        name: role
        schema:
          enum:
          - Guest
          - Reporter
          - Developer
          - Master
          - Owner
          type: string
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ListInheritMembers'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ListInheritMembers'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ListInheritMembers'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定组织或仓库内的继承成员
      tags:
      - Collaborators
  /{repo}/-/issues:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:r"
      operationId: ListIssues
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: pagination page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: pagination page size
        in: query
        name: page_size
        schema:
          default: 30
          type: integer
      - description: issue state open or closed
        in: query
        name: state
        schema:
          type: string
      - description: issue search key
        in: query
        name: keyword
        schema:
          type: string
      - description: "issue priority example: p0,p1,p2,p3"
        in: query
        name: priority
        schema:
          type: string
      - description: "issue labels example: git,bug,feature"
        in: query
        name: labels
        schema:
          type: string
      - description: "issue authors name, example: 张三,李四"
        in: query
        name: authors
        schema:
          type: string
      - description: "issue assignees name, example: 张三,李四,-; - means assign to nobody"
        in: query
        name: assignees
        schema:
          type: string
      - description: "issue filter update time begin  example: 2022-01-31"
        in: query
        name: updated_time_begin
        schema:
          type: string
      - description: "issue filter update time end,  example: 2022-01-31"
        in: query
        name: updated_time_end
        schema:
          type: string
      - description: "issue order, example: created_at, -updated_at, reference_count。\
          ‘-’ prefix means descending order"
        in: query
        name: order_by
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Issue'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Issue'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询仓库的 Issues
      tags:
      - Issues
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: CreateIssue
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/api.PostIssueForm'
        description: Post Issue Form
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.IssueDetail'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.IssueDetail'
          description: Created
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 创建一个 Issue
      tags:
      - Issues
      x-codegen-request-body-name: post_issue_form
  /{repo}/-/issues/{number}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:r"
      operationId: GetIssue
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: issue number
        in: path
        name: number
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.IssueDetail'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.IssueDetail'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询指定的 Issues
      tags:
      - Issues
    patch:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: UpdateIssue
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: issue number
        in: path
        name: number
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/api.PatchIssueForm'
        description: Patch Issue Form
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.IssueDetail'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.IssueDetail'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 更新一个 Issue
      tags:
      - Issues
      x-codegen-request-body-name: patch_issue_form
  /{repo}/-/issues/{number}/comments:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:r"
      operationId: ListIssueComments
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: issue number
        in: path
        name: number
        required: true
        schema:
          type: integer
      - description: pagination page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: pagination page size
        in: query
        name: page_size
        schema:
          default: 30
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.IssueComment'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.IssueComment'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询仓库的 Issue 评论列表
      tags:
      - Issues
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: PostIssueComment
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/api.PostIssueCommentForm'
        description: Post Issue Comment Form
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.IssueComment'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.IssueComment'
          description: Created
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 创建一个 Issue Comment
      tags:
      - Issues
      x-codegen-request-body-name: post_issue_comment_form
  /{repo}/-/issues/{number}/comments/{comment_id}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:r"
      operationId: GetIssueComment
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      - description: comment_id
        in: path
        name: comment_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.IssueComment'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.IssueComment'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 获取一个 Issue Comment
      tags:
      - Issues
    patch:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: PatchIssueComment
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      - description: comment_id
        in: path
        name: comment_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/api.PatchIssueCommentForm'
        description: Patch Issue Comment Form
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.IssueComment'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.IssueComment'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 修改一个 Issue Comment
      tags:
      - Issues
      x-codegen-request-body-name: patch_issue_comment_form
  /{repo}/-/issues/{number}/labels:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: DeleteIssueLabels
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 清空 Issue 标签
      tags:
      - Issues
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:r"
      operationId: ListIssueLabels
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      - description: pagination page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: pagination page size
        in: query
        name: page_size
        schema:
          default: 30
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Label'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Label'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询 Issue 的标签(label) 列表
      tags:
      - Issues
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: PostIssueLabels
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.PostIssueLabelsForm'
        description: Post Issue Labels Form
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Label'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Label'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 新增 Issue 标签
      tags:
      - Issues
      x-codegen-request-body-name: post_issue_labels_form
    put:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: PutIssueLabels
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.PutIssueLabelsForm'
        description: Put Issue Labels Form
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Label'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Label'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 设置 Issue 标签
      tags:
      - Issues
      x-codegen-request-body-name: put_issue_labels_form
  /{repo}/-/issues/{number}/labels/{name}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: DeleteIssueLabel
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      - description: label name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Label'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Label'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 删除 Issue 标签
      tags:
      - Issues
  /{repo}/-/labels:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:r"
      operationId: ListLabels
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: pagination page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: pagination page size
        in: query
        name: page_size
        schema:
          default: 30
          type: integer
      - description: label search key
        in: query
        name: keyword
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Label'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Label'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询仓库的标签(label) 列表
      tags:
      - RepoLabels
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: PostLabel
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/api.PostLabelForm'
        description: Post Label Form
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Label'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Label'
          description: Created
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 创建一个 标签
      tags:
      - RepoLabels
      x-codegen-request-body-name: post_label_form
  /{repo}/-/labels/{name}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: DeleteLabel
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: label name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 删除指定的仓库标签 label
      tags:
      - RepoLabels
    patch:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: PatchLabel
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: label name
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/api.PatchLabelForm'
        description: Patch Label Form
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Label'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Label'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 更新标签信息
      tags:
      - RepoLabels
      x-codegen-request-body-name: patch_label_form
  /{repo}/-/list-members:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:r"
      operationId: ListAllMembers
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 筛选角色
        in: query
        name: role
        schema:
          enum:
          - Guest
          - Reporter
          - Developer
          - Master
          - Owner
          type: string
      - description: 过滤成员
        in: query
        name: search
        schema:
          type: string
      - description: "精准匹配用户名,多个用户名用逗号间隔"
        in: query
        name: names
        schema:
          type: string
      - description: 排序类型，默认created_at
        in: query
        name: order_by
        schema:
          enum:
          - created_at
          - stars
          - follower
          type: string
      - description: 排序顺序
        in: query
        name: desc
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UsersWithAccessLevelInSlug'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UsersWithAccessLevelInSlug'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UsersWithAccessLevelInSlug'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定仓库内的有效成员列表，包含继承成员
      tags:
      - Collaborators
  /{repo}/-/members:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:r"
      operationId: ListMembersOfRepo
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 筛选角色
        in: query
        name: role
        schema:
          enum:
          - Guest
          - Reporter
          - Developer
          - Master
          - Owner
          type: string
      - description: 过滤成员
        in: query
        name: search
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UsersWithAccessLevelInSlug'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UsersWithAccessLevelInSlug'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UsersWithAccessLevelInSlug'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定组织或仓库内的所有直接成员
      tags:
      - Collaborators
  /{repo}/-/members/access-level:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:r"
      operationId: GetMemberAccessLevelOfRepo
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: 是否包含继承的权限
        in: query
        name: include_inherit
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.MemberAccessLevelInSlugUnion'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.MemberAccessLevelInSlugUnion'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.MemberAccessLevelInSlugUnion'
          description: OK
      security:
      - BearerAuth: []
      summary: "获取指定组织或仓库内, 访问成员在当前层级内的权限信息"
      tags:
      - Contributors
  /{repo}/-/members/{username}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:rw"
      operationId: DeleteMembersOfRepo
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: username
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: "删除指定组织或仓库的直接成员, 包含两种场景: 1. 作为直接成员的用户自己退出 2. 由管理者移除指定的直接成员"
      tags:
      - Collaborators
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:rw"
      operationId: AddMembersOfRepo
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: username
        in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UpdateMembersRequest'
        description: member information
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 添加成员
      tags:
      - Collaborators
      x-codegen-request-body-name: request
    put:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:rw"
      operationId: UpdateMembersOfRepo
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: username
        in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UpdateMembersRequest'
        description: member information
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 更新指定组织或仓库内的直接成员权限信息
      tags:
      - Collaborators
      x-codegen-request-body-name: request
  /{repo}/-/members/{username}/access-level:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:r"
      operationId: ListMemberAccessLevelOfRepo
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: username
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.MemberAccessLevel'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.MemberAccessLevel'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.MemberAccessLevel'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: "获取指定组织或仓库内指定成员的权限信息, 结果按组织层级来展示, 包含上层组织的权限继承信息"
      tags:
      - Contributors
  /{repo}/-/outside-collaborators:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:r"
      operationId: ListOutsideCollaborators
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: 第几页，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 筛选角色
        in: query
        name: role
        schema:
          enum:
          - Guest
          - Reporter
          - Developer
          - Master
          type: string
      - description: 过滤成员
        in: query
        name: search
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.OutsideCollaboratorInRepo'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.OutsideCollaboratorInRepo'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.OutsideCollaboratorInRepo'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定仓库内的外部贡献者
      tags:
      - Collaborators
  /{repo}/-/outside-collaborators/{username}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:rw"
      operationId: DeleteOutsideCollaborators
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: username
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: "删除指定仓库的外部贡献者, 包含两种场景: 1. 作为外部贡献者的用户自己退出仓库 2. 由仓库管理者移除指定的外部贡献者"
      tags:
      - Collaborators
    put:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:rw"
      operationId: UpdateOutsideCollaborators
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: username
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: 用户权限
        in: query
        name: role
        required: true
        schema:
          enum:
          - Guest
          - Reporter
          - Developer
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: 更新指定仓库的外部贡献者权限信息
      tags:
      - Collaborators
  /{repo}/-/pull-in-batch:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-pr:r"
      operationId: ListPullsByNumbers
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: pull request numbers
        explode: false
        in: query
        name: "n"
        required: true
        schema:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.PullRequestInfo'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.PullRequestInfo'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 根据numbers查询 Pull 列表"
      tags:
      - Pulls
  /{repo}/-/pulls:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-pr:r"
      operationId: ListPulls
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: pagination page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: pagination page size
        in: query
        name: page_size
        schema:
          default: 30
          type: integer
      - description: "pull state `open`，`closed`, `all`"
        in: query
        name: state
        schema:
          default: open
          type: string
      - description: "pull authors name, example: 张三,李四"
        in: query
        name: authors
        schema:
          type: string
      - description: "pull reviewers name, example: 张三,李四; - means nobody to review"
        in: query
        name: reviewers
        schema:
          type: string
      - description: "pull assignees name, example: 张三,李四,-; - means assign to nobody"
        in: query
        name: assignees
        schema:
          type: string
      - description: "pull base ref,  example: refs/heads/master"
        in: query
        name: base_ref
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.PullRequest'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.PullRequest'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 查询 Pull 列表"
      tags:
      - Pulls
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-pr:rw"
      operationId: PostPull
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.PullCreationForm'
        description: Post Pull Request Form
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Pull'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Pull'
          description: Created
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 新增一个 Pull"
      tags:
      - Pulls
      x-codegen-request-body-name: post_pull_form
  /{repo}/-/pulls/{number}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-pr:r"
      operationId: GetPull
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: pull request number
        in: path
        name: number
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Pull'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Pull'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 查询指定 Pull"
      tags:
      - Pulls
    patch:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-pr:rw"
      operationId: PatchPull
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: Pull Request Number
        in: path
        name: number
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.PatchPullRequest'
        description: Update Pull Request Form
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Pull'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Pull'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 更新一个 Pull Request"
      tags:
      - Pulls
      x-codegen-request-body-name: update_pull_request_form
  /{repo}/-/pulls/{number}/comments:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:r"
      operationId: ListPullComments
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: string
      - description: pagination page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: pagination page size
        in: query
        name: page_size
        schema:
          default: 30
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.PullRequestComment'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.PullRequestComment'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 查询 Pull Comments 列表"
      tags:
      - Pulls
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: PostPullComment
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.PullCommentCreationForm'
        description: Post Pull Request Comment Form
        required: true
      responses:
        "201":
          content: {}
          description: Created
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 新增一个 Pull Comment"
      tags:
      - Pulls
      x-codegen-request-body-name: post_pull_comment_form
  /{repo}/-/pulls/{number}/labels:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: DeletePullLabels
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 清空 Pull 标签
      tags:
      - Pulls
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:r"
      operationId: ListPullLabels
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      - description: pagination page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: pagination page size
        in: query
        name: page_size
        schema:
          default: 30
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Label'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Label'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询 Pull 的标签(label) 列表
      tags:
      - Pulls
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: PostPullLabels
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.PostPullLabelsForm'
        description: Post Pull Labels Form
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Label'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Label'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 新增 Pull 标签
      tags:
      - Pulls
      x-codegen-request-body-name: post_pull_labels_form
    put:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: PutPullLabels
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.PutPullLabelsForm'
        description: Put Pull Labels Form
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Label'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Label'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 设置 Pull 标签
      tags:
      - Pulls
      x-codegen-request-body-name: put_pull_labels_form
  /{repo}/-/pulls/{number}/labels/{name}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: DeletePullLabel
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      - description: label name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Label'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Label'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 删除 Pull 标签
      tags:
      - Pulls
  /{repo}/-/pulls/{number}/merge:
    put:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-pr:rw"
      operationId: MergePull
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: Pull Request Number
        in: path
        name: number
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.MergePullRequest'
        description: Merge Pull Request Form
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.MergePullResponse'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.MergePullResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 合并一个 Pull Request"
      tags:
      - Pulls
      x-codegen-request-body-name: merge_pull_request_form
  /{repo}/-/pulls/{number}/reviews:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-notes:rw"
      operationId: PostPullReview
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: number
        in: path
        name: number
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.PullReviewCreationForm'
        description: Post Pull Review Form
        required: true
      responses:
        "201":
          content: {}
          description: Created
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 新增一次 pull request 评审
      tags:
      - Pulls
      x-codegen-request-body-name: post_pull_review_form
  /{repo}/-/releases:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: ListReleases
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: pagination page number
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: pagination page size
        in: query
        name: page_size
        schema:
          default: 30
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Release'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.Release'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 查询 release 列表"
      tags:
      - Releases
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: PostRelease
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openapi.PostReleaseForm'
        description: "Post Release Form, attachment is optional"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Release'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Release'
          description: Created
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 新增一个 Release"
      tags:
      - Releases
      x-codegen-request-body-name: create_release_form
  /{repo}/-/releases/download/{fileName}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:r"
      operationId: GetReleasesAsset
      parameters:
      - description: Repo
        in: path
        name: repo
        required: true
        schema:
          default: test-group/test-repo
          type: string
      - description: 包含tag名称和文件名，例如 v1.0/test.png
        in: path
        name: fileName
        required: true
        schema:
          type: string
      responses:
        "302":
          content: {}
          description: Found
      security:
      - BearerAuth: []
      summary: 发起一个获取 release 附件的请求，返回内容或者 302 到某个地址
      tags:
      - Assets
  /{repo}/-/releases/latest:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetLatestRelease
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Release'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Release'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询 latest release
      tags:
      - Releases
  /{repo}/-/releases/latest/download/{fileName}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:r"
      operationId: GetLatestReleasesAsset
      parameters:
      - description: Repo
        in: path
        name: repo
        required: true
        schema:
          default: test-group/test-repo
          type: string
      - description: 文件名，例如 test.png
        in: path
        name: fileName
        required: true
        schema:
          type: string
      responses:
        "302":
          content: {}
          description: Found
      security:
      - BearerAuth: []
      summary: 发起一个获取 latest release 附件的请求，返回内容或者 302 到某个地址
      tags:
      - Assets
  /{repo}/-/releases/tags/{tag}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetReleaseByTag
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: tag name
        in: path
        name: tag
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Release'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Release'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 通过 tag 查询指定 release"
      tags:
      - Releases
  /{repo}/-/releases/{release_id}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: DeleteRelease
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: release id
        in: path
        name: release_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 删除指定的 release"
      tags:
      - Releases
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetReleaseByID
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: release id
        in: path
        name: release_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Release'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.Release'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 根据 id\t查询指定 release"
      tags:
      - Releases
    patch:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: PatchRelease
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: release id
        in: path
        name: release_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openapi.PatchReleaseForm'
        description: patch release form
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 更新 release"
      tags:
      - Releases
      x-codegen-request-body-name: patch_release_form
  /{repo}/-/releases/{release_id}/asset-upload-confirmation/{token}/{asset_path}:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: PostReleaseAssetUploadConfirmation
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: release id
        in: path
        name: release_id
        required: true
        schema:
          type: integer
      - description: upload token
        in: path
        name: token
        required: true
        schema:
          type: string
      - description: release asset path
        in: path
        name: asset_path
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 确认 Release asset 上传完成"
      tags:
      - Releases
  /{repo}/-/releases/{release_id}/asset-upload-url:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: PostReleaseAssetUploadURL
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: release id
        in: path
        name: release_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/openapi.PostReleaseAssetUploadURLForm'
        description: Post Release Asset Upload URL Form
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/openapi.ReleaseAssetUploadURL'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/openapi.ReleaseAssetUploadURL'
          description: Created
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 新增一个 Release asset"
      tags:
      - Releases
      x-codegen-request-body-name: create_release_asset_upload_url_form
  /{repo}/-/releases/{release_id}/assets/{asset_id}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:rw"
      operationId: DeleteReleaseAsset
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: release id
        in: path
        name: release_id
        required: true
        schema:
          type: integer
      - description: asset id
        in: path
        name: asset_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 删除指定的 release asset"
      tags:
      - Releases
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-code:r"
      operationId: GetReleaseAsset
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: release id
        in: path
        name: release_id
        required: true
        schema:
          type: integer
      - description: asset id
        in: path
        name: asset_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api.ReleaseAsset'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: "[openapi] 查询指定的 release asset"
      tags:
      - Releases
  /{repo}/-/settings/branch-protections:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:r"
      operationId: ListBranchProtections
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.BranchProtection'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/api.BranchProtection'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询仓库保护分支规则列表(openapi)
      tags:
      - GitSettings
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:rw"
      operationId: PostBranchProtection
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.BranchProtection'
        description: Branch Protection Form
        required: true
      responses:
        "201":
          content: {}
          description: Created
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 新增仓库保护分支规则(openapi)
      tags:
      - GitSettings
      x-codegen-request-body-name: branch_protection_form
  /{repo}/-/settings/branch-protections/{id}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:rw"
      operationId: DeleteBranchProtection
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: Branch Protection id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 删除仓库保护分支规则(openapi)
      tags:
      - GitSettings
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:r"
      operationId: GetBranchProtection
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: branch protection id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.BranchProtection'
          description: OK
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询仓库保护分支规则(openapi)
      tags:
      - GitSettings
    patch:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:rw"
      operationId: PatchBranchProtection
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: Branch Protection id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.BranchProtection'
        description: Branch Protection Form
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 更新仓库保护分支规则(openapi)
      tags:
      - GitSettings
      x-codegen-request-body-name: branch_protection_form
  /{repo}/-/settings/cloud-native-build:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:r"
      operationId: GetPipelineSettings
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/api.PipelineSettings'
          description: OK
        "404":
          content:
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询仓库云原生构建设置(openapi)
      tags:
      - GitSettings
    put:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:rw"
      operationId: PutPipelineSettings
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/web.PipelineSettings'
        description: Cloud Native Build Form
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 更新仓库云原生构建设置(openapi)
      tags:
      - GitSettings
      x-codegen-request-body-name: pipeline_form
  /{repo}/-/settings/pull-request:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:r"
      operationId: GetPullRequestSettings
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.PullRequestSettings'
          description: OK
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询仓库合并请求设置(openapi)
      tags:
      - GitSettings
    put:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:rw"
      operationId: PutPullRequestSettings
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.PullRequestSettings'
        description: Pull Request Form
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 设置仓库推送设置(openapi)
      tags:
      - GitSettings
      x-codegen-request-body-name: pull_request_form
  /{repo}/-/settings/push-limit:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:r"
      operationId: GetPushLimitSettings
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/api.PushLimitSettings'
          description: OK
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 查询仓库推送设置(openapi)
      tags:
      - GitSettings
    put:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-manage:rw"
      operationId: PutPushLimitSettings
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.PushLimitSettings'
        description: Push Limit Form
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Not Found
        "500":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: 设置仓库推送设置(openapi)
      tags:
      - GitSettings
      x-codegen-request-body-name: push_limit_form
  /{repo}/-/stars:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-basic-info:r"
      operationId: ListStarUsers
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: 我关注的
        in: query
        name: filter_type
        required: true
        schema:
          enum:
          - all
          - followed
          type: string
      - description: page
        in: query
        name: page
        required: true
        schema:
          default: 1
          type: integer
      - description: page
        in: query
        name: page_size
        required: true
        schema:
          default: 10
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.RepoStarUsers'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.RepoStarUsers'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.RepoStarUsers'
          description: OK
      security:
      - BearerAuth: []
      summary: 获取指定仓库的star用户列表
      tags:
      - Starring
  /{repo}/-/top-activity-users:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-base-info:r"
      operationId: TopContributors
      parameters:
      - description: slug
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: top几，不要超过10
        in: query
        name: top
        schema:
          default: 5
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UsersResult'
                type: array
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UsersResult'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.UsersResult'
                type: array
          description: OK
      security:
      - BearerAuth: []
      summary: 获取 top 贡献用户
      tags:
      - Collaborators
  /{repo}/-/upload/files:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:rw"
      operationId: UploadFiles
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          default: test-group/test-repo
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UploadRequestParams'
        description: UploadRequestParams
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.UploadAssetsResponse'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.UploadAssetsResponse'
          description: OK
      security:
      - BearerAuth: []
      summary: 发起一个上传 files（issue，pr 及其评论中文档，压缩包等）的请求，返回上传 cos 的 url 和 form 内容
      tags:
      - Assets
      x-codegen-request-body-name: request
  /{repo}/-/upload/imgs:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:rw"
      operationId: UploadImgs
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          default: test-group/test-repo
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UploadRequestParams'
        description: UploadRequestParams
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.UploadAssetsResponse'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.UploadAssetsResponse'
          description: OK
      security:
      - BearerAuth: []
      summary: 发起一个上传 imgs 的请求，返回上传 cos 的 url 和 form 内容
      tags:
      - Assets
      x-codegen-request-body-name: request
  /{repo}/-/upload/releases/{tagName}:
    post:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-contents:rw"
      operationId: UploadReleases
      parameters:
      - description: repo
        in: path
        name: repo
        required: true
        schema:
          default: test-group/test-repo
          type: string
      - description: tag_name
        in: path
        name: tagName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.UploadRequestParams'
        description: UploadRequestParams
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.UploadAssetsResponse'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.UploadAssetsResponse'
          description: OK
      security:
      - BearerAuth: []
      summary: 发起一个上传 release 附件的请求，返回上传 cos 的 url 和 form 内容
      tags:
      - Assets
      x-codegen-request-body-name: request
  /{repo}/-/workspace/detail/{sn}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nrepo-cnb-detail:r"
      operationId: GetWorkspaceDetail
      parameters:
      - description: 仓库路径
        in: path
        name: repo
        required: true
        schema:
          type: string
      - description: 构建号
        in: path
        name: sn
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.WorkspaceDetailResult'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.WorkspaceDetailResult'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.WorkspaceDetailResult'
          description: OK
      security:
      - BearerAuth: []
      summary: 根据流水线sn查询云原生开发访问地址
      tags:
      - Workspace
  /{slug}/-/packages:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nregistry-package:r"
      operationId: ListPackages
      parameters:
      - description: 仓库 slug
        in: path
        name: slug
        required: true
        schema:
          type: string
      - description: 制品类型
        in: query
        name: type
        required: true
        schema:
          enum:
          - all
          - docker
          - helm
          - maven
          - npm
          - ohpm
          type: string
      - description: 页码，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页数量
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 排序类型
        in: query
        name: ordering
        schema:
          enum:
          - pull_count
          - last_push_at
          - name_ascend
          - name_descend
          type: string
      - description: 制品名搜索关键词
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Package'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Package'
                type: array
          description: OK
        "400":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Bad Request
      security:
      - BearerAuth: []
      summary: List all packages
      tags:
      - Artifactory
    head:
      description: "访问令牌调用此接口需包含以下权限 \nregistry-package:r"
      operationId: HeadPackages
      parameters:
      - description: 仓库 slug
        in: path
        name: slug
        required: true
        schema:
          type: string
      - description: 制品类型
        in: query
        name: type
        required: true
        schema:
          enum:
          - all
          - docker
          - helm
          type: string
      - description: 页码，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页数量
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 排序类型
        in: query
        name: ordering
        schema:
          enum:
          - pull_count
          - last_push_at
          - name_ascend
          - name_descend
          type: string
      - description: 制品名搜索关键词
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content: {}
          description: Bad Request
      security:
      - BearerAuth: []
      summary: Head all packages
      tags:
      - Artifactory
  /{slug}/-/packages/{type}/-/quota:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nregistry-package:r"
      operationId: GetQuotaByProjectName
      parameters:
      - description: 仓库 slug
        in: path
        name: slug
        required: true
        schema:
          type: string
      - description: 制品类型
        in: path
        name: type
        required: true
        schema:
          enum:
          - docker
          - helm
          - maven
          - npm
          - ohpm
          type: string
      responses:
        "200":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.QuotaRsp'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.QuotaRsp'
          description: OK
        "400":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Bad Request
      security:
      - BearerAuth: []
      summary: Get quota of specific registry
      tags:
      - Artifactory
  /{slug}/-/packages/{type}/-/quotas:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nregistry-package:r"
      operationId: GetQuotasByProjectName
      parameters:
      - description: 仓库 slug
        in: path
        name: slug
        required: true
        schema:
          type: string
      - description: 制品类型
        in: path
        name: type
        required: true
        schema:
          enum:
          - docker
          - helm
          - maven
          - npm
          - ohpm
          type: string
      - description: 页码，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页数量
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 排序类型
        in: query
        name: ordering
        schema:
          enum:
          - used_ascend
          - used_descend
          type: string
      responses:
        "200":
          content:
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.QuotaRsp'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.QuotaRsp'
                type: array
          description: OK
        "400":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Bad Request
      security:
      - BearerAuth: []
      summary: Get quotas of packages under one registry
      tags:
      - Artifactory
  /{slug}/-/packages/{type}/-/quotas/download:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nregistry-package:r"
      operationId: DownloadQuotasByProjectName
      parameters:
      - description: 仓库 slug
        in: path
        name: slug
        required: true
        schema:
          type: string
      - description: 制品类型
        in: path
        name: type
        required: true
        schema:
          enum:
          - docker
          - helm
          - maven
          - npm
          - ohpm
          type: string
      - description: 页码，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页数量
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 排序类型
        in: query
        name: ordering
        schema:
          enum:
          - used_ascend
          - used_descend
          type: string
      responses:
        "200":
          content:
            application/vnd.cnb.api+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.QuotaRsp'
                type: array
            application/vnd.cnb.web+json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.QuotaRsp'
                type: array
            application/octet-stream:
              schema:
                items:
                  $ref: '#/components/schemas/dto.QuotaRsp'
                type: array
          description: OK
        "400":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/die.WebError'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/die.WebError'
          description: Bad Request
      security:
      - BearerAuth: []
      summary: Download registry quota details
      tags:
      - Artifactory
  /{slug}/-/packages/{type}/{name}:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nregistry-package:r"
      operationId: GetPackage
      parameters:
      - description: 仓库 slug
        in: path
        name: slug
        required: true
        schema:
          type: string
      - description: 制品类型
        in: path
        name: type
        required: true
        schema:
          enum:
          - docker
          - helm
          - maven
          - npm
          - ohpm
          type: string
      - description: 制品名称
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.PackageDetail'
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.PackageDetail'
          description: OK
      security:
      - BearerAuth: []
      summary: Get the specific package
      tags:
      - Artifactory
  /{slug}/-/packages/{type}/{name}/-/tag/{tag}:
    delete:
      description: "访问令牌调用此接口需包含以下权限 \nregistry-package-delete:rw"
      operationId: DeletePackageTag
      parameters:
      - description: 仓库 slug
        in: path
        name: slug
        required: true
        schema:
          type: string
      - description: 制品类型
        in: path
        name: type
        required: true
        schema:
          enum:
          - docker
          - helm
          - maven
          - npm
          - ohpm
          type: string
      - description: 制品名称
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: 制品标签
        in: path
        name: tag
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - BearerAuth: []
      summary: Delete the specific tag under specific package
      tags:
      - Artifactory
    get:
      description: "访问令牌调用此接口需包含以下权限 \nregistry-package:r"
      operationId: GetPackageTagDetail
      parameters:
      - description: 仓库 slug
        in: path
        name: slug
        required: true
        schema:
          type: string
      - description: 制品类型
        in: path
        name: type
        required: true
        schema:
          enum:
          - docker
          - helm
          - maven
          - npm
          - ohpm
          type: string
      - description: 制品名称
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: 制品标签
        in: path
        name: tag
        required: true
        schema:
          type: string
      - description: 摘要，容器制品时必须
        in: query
        name: sha256
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.TagDetail'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.TagDetail'
          description: OK
      security:
      - BearerAuth: []
      summary: Get the specific tag under specific package
      tags:
      - Artifactory
  /{slug}/-/packages/{type}/{pkgname}/-/tags:
    get:
      description: "访问令牌调用此接口需包含以下权限 \nregistry-package:r"
      operationId: ListPackageTags
      parameters:
      - description: 仓库 slug
        in: path
        name: slug
        required: true
        schema:
          type: string
      - description: 制品类型
        in: path
        name: type
        required: true
        schema:
          enum:
          - docker
          - helm
          - maven
          - npm
          - ohpm
          type: string
      - description: 制品名称
        in: path
        name: pkgname
        required: true
        schema:
          type: string
      - description: 页码，从1开始
        in: query
        name: page
        schema:
          default: 1
          type: integer
      - description: 每页多少条数据
        in: query
        name: page_size
        schema:
          default: 10
          type: integer
      - description: 排序类型
        in: query
        name: ordering
        schema:
          enum:
          - pull_count
          - last_push_at
          type: string
      - description: 搜索关键字
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/vnd.cnb.api+json:
              schema:
                $ref: '#/components/schemas/dto.Tag'
            application/vnd.cnb.web+json:
              schema:
                $ref: '#/components/schemas/dto.Tag'
          description: OK
      security:
      - BearerAuth: []
      summary: List all tags under specific package
      tags:
      - Artifactory
components:
  schemas:
    api.Blob:
      properties:
        sha:
          type: string
      type: object
    api.Branch:
      example:
        protected: true
        commit:
          sha: sha
        name: name
      properties:
        commit:
          $ref: '#/components/schemas/api_Branch_commit'
        name:
          type: string
        protected:
          type: boolean
      type: object
    api.BranchDetail:
      example:
        protected: true
        commit:
          committer:
            freeze: true
            nickname: nickname
            username: username
          author:
            freeze: true
            nickname: nickname
            username: username
          commit:
            comment_count: 0
            committer:
              date: date
              name: name
              email: email
            author:
              date: date
              name: name
              email: email
            tree:
              sha: sha
            message: message
            verification:
              payload: payload
              signature: signature
              verified: true
              resone: resone
          sha: sha
          parents:
          - sha: sha
          - sha: sha
        name: name
      properties:
        commit:
          $ref: '#/components/schemas/api.Commit'
        name:
          type: string
        protected:
          type: boolean
      type: object
    api.BranchProtection:
      example:
        allow_creation: true
        required_pull_request_reviews: true
        required_must_push_via_pull_request: true
        required_status_checks: true
        allow_master_pushes: true
        required_linear_history: true
        required_master_approve: true
        rule: rule
        allow_pushes: true
        required_approved_review_count: 0
        required_approved_review_ratio: 6
        required_commit_signatures: true
        allow_force_pushes: true
        id: id
        allow_master_deletions: true
        required_must_auto_merge: true
        allow_deletions: true
        allow_master_creation: true
        allow_master_force_pushes: true
      properties:
        allow_creation:
          type: boolean
        allow_deletions:
          type: boolean
        allow_force_pushes:
          type: boolean
        allow_master_creation:
          type: boolean
        allow_master_deletions:
          type: boolean
        allow_master_force_pushes:
          type: boolean
        allow_master_pushes:
          type: boolean
        allow_pushes:
          type: boolean
        id:
          type: string
        required_approved_review_count:
          type: integer
        required_approved_review_ratio:
          type: integer
        required_commit_signatures:
          type: boolean
        required_linear_history:
          type: boolean
        required_master_approve:
          type: boolean
        required_must_auto_merge:
          type: boolean
        required_must_push_via_pull_request:
          type: boolean
        required_pull_request_reviews:
          type: boolean
        required_status_checks:
          type: boolean
        rule:
          type: string
      type: object
    api.Commit:
      example:
        committer:
          freeze: true
          nickname: nickname
          username: username
        author:
          freeze: true
          nickname: nickname
          username: username
        commit:
          comment_count: 0
          committer:
            date: date
            name: name
            email: email
          author:
            date: date
            name: name
            email: email
          tree:
            sha: sha
          message: message
          verification:
            payload: payload
            signature: signature
            verified: true
            resone: resone
        sha: sha
        parents:
        - sha: sha
        - sha: sha
      properties:
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_api.UserInfo'
        commit:
          $ref: '#/components/schemas/api.CommitObject'
        committer:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_api.UserInfo'
        parents:
          items:
            $ref: '#/components/schemas/api.CommitParent'
          type: array
        sha:
          type: string
      type: object
    api.CommitAsset:
      example:
        path: path
        size_in_byte: 0
        content_type: content_type
        updated_at: updated_at
        author:
          freeze: true
          nickname: nickname
          username: username
        name: name
        created_at: created_at
        id: id
      properties:
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_api.UserInfo'
        content_type:
          type: string
        created_at:
          type: string
        id:
          type: string
        name:
          type: string
        path:
          type: string
        size_in_byte:
          type: integer
        updated_at:
          type: string
      type: object
    api.CommitDiffFilePatch:
      example:
        patch: patch
        path: path
        additions: 0
        deletions: 6
        name: name
        status: status
      properties:
        additions:
          type: integer
        deletions:
          type: integer
        name:
          type: string
        patch:
          type: string
        path:
          type: string
        status:
          type: string
      type: object
    api.CommitObject:
      example:
        comment_count: 0
        committer:
          date: date
          name: name
          email: email
        author:
          date: date
          name: name
          email: email
        tree:
          sha: sha
        message: message
        verification:
          payload: payload
          signature: signature
          verified: true
          resone: resone
      properties:
        author:
          $ref: '#/components/schemas/api.Signature'
        comment_count:
          type: integer
        committer:
          $ref: '#/components/schemas/api.Signature'
        message:
          type: string
        tree:
          $ref: '#/components/schemas/api.CommitObjectTree'
        verification:
          $ref: '#/components/schemas/api.CommitObjectVerification'
      type: object
    api.CommitObjectTree:
      example:
        sha: sha
      properties:
        sha:
          type: string
      type: object
    api.CommitObjectVerification:
      example:
        payload: payload
        signature: signature
        verified: true
        resone: resone
      properties:
        payload:
          type: string
        resone:
          type: string
        signature:
          type: string
        verified:
          type: boolean
      type: object
    api.CommitParent:
      example:
        sha: sha
      properties:
        sha:
          type: string
      type: object
    api.CommitStatus:
      example:
        updated_at: updated_at
        target_url: target_url
        context: context
        created_at: created_at
        description: description
        state: state
      properties:
        context:
          type: string
        created_at:
          type: string
        description:
          type: string
        state:
          type: string
        target_url:
          type: string
        updated_at:
          type: string
      type: object
    api.CompareResponse:
      example:
        base_commit:
          committer:
            freeze: true
            nickname: nickname
            username: username
          author:
            freeze: true
            nickname: nickname
            username: username
          commit:
            comment_count: 0
            committer:
              date: date
              name: name
              email: email
            author:
              date: date
              name: name
              email: email
            tree:
              sha: sha
            message: message
            verification:
              payload: payload
              signature: signature
              verified: true
              resone: resone
          sha: sha
          parents:
          - sha: sha
          - sha: sha
        head_commit:
          committer:
            freeze: true
            nickname: nickname
            username: username
          author:
            freeze: true
            nickname: nickname
            username: username
          commit:
            comment_count: 0
            committer:
              date: date
              name: name
              email: email
            author:
              date: date
              name: name
              email: email
            tree:
              sha: sha
            message: message
            verification:
              payload: payload
              signature: signature
              verified: true
              resone: resone
          sha: sha
          parents:
          - sha: sha
          - sha: sha
        commits:
        - committer:
            freeze: true
            nickname: nickname
            username: username
          author:
            freeze: true
            nickname: nickname
            username: username
          commit:
            comment_count: 0
            committer:
              date: date
              name: name
              email: email
            author:
              date: date
              name: name
              email: email
            tree:
              sha: sha
            message: message
            verification:
              payload: payload
              signature: signature
              verified: true
              resone: resone
          sha: sha
          parents:
          - sha: sha
          - sha: sha
        - committer:
            freeze: true
            nickname: nickname
            username: username
          author:
            freeze: true
            nickname: nickname
            username: username
          commit:
            comment_count: 0
            committer:
              date: date
              name: name
              email: email
            author:
              date: date
              name: name
              email: email
            tree:
              sha: sha
            message: message
            verification:
              payload: payload
              signature: signature
              verified: true
              resone: resone
          sha: sha
          parents:
          - sha: sha
          - sha: sha
        files:
        - patch: patch
          path: path
          additions: 0
          deletions: 6
          name: name
          status: status
        - patch: patch
          path: path
          additions: 0
          deletions: 6
          name: name
          status: status
        merge_base_commit:
          committer:
            freeze: true
            nickname: nickname
            username: username
          author:
            freeze: true
            nickname: nickname
            username: username
          commit:
            comment_count: 0
            committer:
              date: date
              name: name
              email: email
            author:
              date: date
              name: name
              email: email
            tree:
              sha: sha
            message: message
            verification:
              payload: payload
              signature: signature
              verified: true
              resone: resone
          sha: sha
          parents:
          - sha: sha
          - sha: sha
        total_commits: 1
      properties:
        base_commit:
          $ref: '#/components/schemas/api.Commit'
        commits:
          items:
            $ref: '#/components/schemas/api.Commit'
          type: array
        files:
          items:
            $ref: '#/components/schemas/api.CommitDiffFilePatch'
          type: array
        head_commit:
          $ref: '#/components/schemas/api.Commit'
        merge_base_commit:
          $ref: '#/components/schemas/api.Commit'
        total_commits:
          type: integer
      type: object
    api.Content:
      example:
        path: path
        entries:
        - path: path
          name: name
          type: type
          sha: sha
        - path: path
          name: name
          type: type
          sha: sha
        size: 0
        name: name
        encoding: encoding
        type: type
        sha: sha
        content: content
      properties:
        content:
          type: string
        encoding:
          type: string
        entries:
          items:
            $ref: '#/components/schemas/api.TreeEntry'
          type: array
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        size:
          type: integer
        type:
          type: string
      type: object
    api.Issue:
      example:
        comment_count: 0
        last_acted_at: last_acted_at
        number: number
        state_reason: state_reason
        updated_at: updated_at
        author:
          nickname: nickname
          username: username
        assignees:
        - nickname: nickname
          username: username
        - nickname: nickname
          username: username
        created_at: created_at
        state: state
        priority: priority
        title: title
        labels:
        - color: color
          name: name
          description: description
          id: id
        - color: color
          name: name
          description: description
          id: id
      properties:
        assignees:
          items:
            $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_vcs_service_bff_api.UserInfo'
          type: array
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_vcs_service_bff_api.UserInfo'
        comment_count:
          type: integer
        created_at:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/api.Label'
          type: array
        last_acted_at:
          type: string
        number:
          type: string
        priority:
          type: string
        state:
          type: string
        state_reason:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    api.IssueComment:
      example:
        updated_at: updated_at
        author:
          nickname: nickname
          username: username
        created_at: created_at
        id: id
        body: body
      properties:
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_vcs_service_bff_api.UserInfo'
        body:
          type: string
        created_at:
          type: string
        id:
          type: string
        updated_at:
          type: string
      type: object
    api.IssueDetail:
      example:
        comment_count: 0
        last_acted_at: last_acted_at
        state_reason: state_reason
        author:
          nickname: nickname
          username: username
        assignees:
        - nickname: nickname
          username: username
        - nickname: nickname
          username: username
        created_at: created_at
        body: body
        priority: priority
        title: title
        labels:
        - color: color
          name: name
          description: description
          id: id
        - color: color
          name: name
          description: description
          id: id
        number: number
        updated_at: updated_at
        state: state
      properties:
        assignees:
          items:
            $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_vcs_service_bff_api.UserInfo'
          type: array
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_vcs_service_bff_api.UserInfo'
        body:
          type: string
        comment_count:
          type: integer
        created_at:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/api.Label'
          type: array
        last_acted_at:
          type: string
        number:
          type: string
        priority:
          type: string
        state:
          type: string
        state_reason:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    api.Label:
      example:
        color: color
        name: name
        description: description
        id: id
      properties:
        color:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    api.MergePullRequest:
      properties:
        commit_message:
          type: string
        commit_title:
          type: string
        merge_style:
          description: "The merge method to use. Can be one of: `merge`, `squash`,\
            \ `rebase`"
          type: string
      type: object
    api.MergePullResponse:
      example:
        merged: true
        message: message
        sha: sha
      properties:
        merged:
          type: boolean
        message:
          type: string
        sha:
          type: string
      type: object
    api.PatchIssueCommentForm:
      properties:
        body:
          type: string
      type: object
    api.PatchIssueForm:
      properties:
        body:
          type: string
        priority:
          description: "Priority of this issue. Can be one of: `p0`, `p1`, `p2`, `p3`,\
            \ `\"\"`."
          type: string
        state:
          description: State of this issue. Either `open` or `closed`.
          type: string
        state_reason:
          description: "StateReason can be one of: `completed`, `not_planned`, `reopened`"
          type: string
        title:
          type: string
      type: object
    api.PatchLabelForm:
      properties:
        color:
          description: "The hexadecimal color code for the label, without the leading\
            \ `#`."
          type: string
        description:
          type: string
        new_name:
          type: string
      type: object
    api.PatchPullRequest:
      properties:
        body:
          type: string
        state:
          description: State of this Pull Request. Either `open` or `closed`.
          type: string
        title:
          type: string
      type: object
    api.PipelineSettings:
      properties:
        auto_trigger:
          type: boolean
        forked_repo_auto_trigger:
          type: boolean
      type: object
    api.PostBlobForm:
      properties:
        content:
          type: string
        encoding:
          description: "当前编码只支持 `\"utf-8\"` and `\"base64\"` 。默认: `utf-8`"
          type: string
      type: object
    api.PostIssueCommentForm:
      properties:
        body:
          type: string
      type: object
    api.PostIssueForm:
      properties:
        assignees:
          items:
            type: string
          type: array
        body:
          type: string
        labels:
          items:
            type: string
          type: array
        priority:
          description: "Priority of this issue. Can be one of: `p0`, `p1`, `p2`, `p3`,\
            \ `\"\"`."
          type: string
        title:
          type: string
      type: object
    api.PostIssueLabelsForm:
      properties:
        labels:
          items:
            type: string
          type: array
      type: object
    api.PostLabelForm:
      properties:
        color:
          description: "The hexadecimal color code for the label, without the leading\
            \ `#`."
          type: string
        description:
          type: string
        name:
          type: string
      type: object
    api.PostPullLabelsForm:
      properties:
        labels:
          items:
            type: string
          type: array
      type: object
    api.PostTagFrom:
      properties:
        message:
          type: string
        name:
          type: string
        target:
          type: string
      type: object
    api.Pull:
      example:
        head:
          ref: ref
          repo:
            path: path
            web_url: web_url
            name: name
            id: id
          sha: sha
        number: number
        merged_by:
          freeze: true
          nickname: nickname
          username: username
        state: state
        body: body
        title: title
        base:
          ref: ref
          repo:
            path: path
            web_url: web_url
            name: name
            id: id
          sha: sha
      properties:
        base:
          $ref: '#/components/schemas/api.PullRef'
        body:
          type: string
        head:
          $ref: '#/components/schemas/api.PullRef'
        merged_by:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_api.UserInfo'
        number:
          type: string
        state:
          type: string
        title:
          type: string
      type: object
    api.PullCommentCreationForm:
      properties:
        body:
          type: string
      type: object
    api.PullCreationForm:
      properties:
        base:
          type: string
        body:
          type: string
        head:
          type: string
        head_repo:
          type: string
        title:
          type: string
      type: object
    api.PullRef:
      example:
        ref: ref
        repo:
          path: path
          web_url: web_url
          name: name
          id: id
        sha: sha
      properties:
        ref:
          type: string
        repo:
          $ref: '#/components/schemas/api.Repo'
        sha:
          type: string
      type: object
    api.PullRefInfo:
      example:
        ref: ref
        repo:
          path: path
          web_url: web_url
          name: name
          id: id
        sha: sha
      properties:
        ref:
          type: string
        repo:
          $ref: '#/components/schemas/api.RepoInfo'
        sha:
          type: string
      type: object
    api.PullRequest:
      example:
        comment_count: 0
        last_acted_at: last_acted_at
        author:
          freeze: true
          nickname: nickname
          username: username
        repo:
          path: path
          web_url: web_url
          name: name
          id: id
        assignees:
        - freeze: true
          nickname: nickname
          username: username
        - freeze: true
          nickname: nickname
          username: username
        created_at: created_at
        review_count: 6
        merged_by:
          freeze: true
          nickname: nickname
          username: username
        title: title
        blocked_on: blocked_on
        head:
          ref: ref
          repo:
            path: path
            web_url: web_url
            name: name
            id: id
          sha: sha
        number: number
        updated_at: updated_at
        state: state
        base:
          ref: ref
          repo:
            path: path
            web_url: web_url
            name: name
            id: id
          sha: sha
        mergeable_state: mergeable_state
      properties:
        assignees:
          items:
            $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_api.UserInfo'
          type: array
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_api.UserInfo'
        base:
          $ref: '#/components/schemas/api.PullRef'
        blocked_on:
          type: string
        comment_count:
          type: integer
        created_at:
          type: string
        head:
          $ref: '#/components/schemas/api.PullRef'
        last_acted_at:
          type: string
        mergeable_state:
          type: string
        merged_by:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_api.UserInfo'
        number:
          type: string
        repo:
          $ref: '#/components/schemas/api.Repo'
        review_count:
          type: integer
        state:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    api.PullRequestComment:
      example:
        updated_at: updated_at
        author:
          freeze: true
          nickname: nickname
          username: username
        created_at: created_at
        body: body
      properties:
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_api.UserInfo'
        body:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
      type: object
    api.PullRequestInfo:
      example:
        last_acted_at: last_acted_at
        author:
          nickname: nickname
          username: username
        repo:
          path: path
          web_url: web_url
          name: name
          id: id
        assignees:
        - nickname: nickname
          username: username
        - nickname: nickname
          username: username
        created_at: created_at
        merged_by:
          nickname: nickname
          username: username
        title: title
        reviewers:
        - nickname: nickname
          username: username
        - nickname: nickname
          username: username
        blocked_on: blocked_on
        head:
          ref: ref
          repo:
            path: path
            web_url: web_url
            name: name
            id: id
          sha: sha
        number: number
        updated_at: updated_at
        state: state
        base:
          ref: ref
          repo:
            path: path
            web_url: web_url
            name: name
            id: id
          sha: sha
        mergeable_state: mergeable_state
      properties:
        assignees:
          items:
            $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_vcs_service_bff_api.UserInfo'
          type: array
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_vcs_service_bff_api.UserInfo'
        base:
          $ref: '#/components/schemas/api.PullRefInfo'
        blocked_on:
          type: string
        created_at:
          type: string
        head:
          $ref: '#/components/schemas/api.PullRefInfo'
        last_acted_at:
          type: string
        mergeable_state:
          type: string
        merged_by:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_vcs_service_bff_api.UserInfo'
        number:
          type: string
        repo:
          $ref: '#/components/schemas/api.RepoInfo'
        reviewers:
          items:
            $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_vcs_service_bff_api.UserInfo'
          type: array
        state:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    api.PullRequestSettings:
      properties:
        allow_merge_commit_merge:
          type: boolean
        allow_rebase_merge:
          type: boolean
        allow_squash_merge:
          type: boolean
        master_auto_as_reviewer:
          type: boolean
        merge_commit_message_style:
          type: string
        squash_commit_message_style:
          type: string
      type: object
    api.PullReviewCommentCreationForm:
      properties:
        body:
          type: string
        end_line:
          type: integer
        end_side:
          type: string
        path:
          type: string
        start_line:
          type: integer
        start_side:
          type: string
        subject_type:
          description: "can be one of: line, file"
          type: string
      type: object
    api.PullReviewCreationForm:
      properties:
        body:
          type: string
        comments:
          items:
            $ref: '#/components/schemas/api.PullReviewCommentCreationForm'
          type: array
        event:
          type: string
      type: object
    api.PushLimitSettings:
      properties:
        allow_single_push_number:
          type: integer
        check_single_push_number:
          type: boolean
        only_master_can_push_tag:
          type: boolean
        push_commit_must_be:
          type: string
      type: object
    api.PutIssueLabelsForm:
      properties:
        labels:
          items:
            type: string
          type: array
      type: object
    api.PutPullLabelsForm:
      properties:
        labels:
          items:
            type: string
          type: array
      type: object
    api.Release:
      example:
        author:
          freeze: true
          nickname: nickname
          username: username
        tag_name: tag_name
        created_at: created_at
        body: body
        tag_commitish: tag_commitish
        assets:
        - path: path
          content_type: content_type
          size: 0
          updated_at: updated_at
          uploader:
            freeze: true
            nickname: nickname
            username: username
          name: name
          created_at: created_at
          id: id
        - path: path
          content_type: content_type
          size: 0
          updated_at: updated_at
          uploader:
            freeze: true
            nickname: nickname
            username: username
          name: name
          created_at: created_at
          id: id
        updated_at: updated_at
        prerelease: true
        draft: true
        name: name
        id: id
        published_at: published_at
        is_latest: true
      properties:
        assets:
          items:
            $ref: '#/components/schemas/api.ReleaseAsset'
          type: array
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_api.UserInfo'
        body:
          type: string
        created_at:
          type: string
        draft:
          type: boolean
        id:
          type: string
        is_latest:
          type: boolean
        name:
          type: string
        prerelease:
          type: boolean
        published_at:
          type: string
        tag_commitish:
          type: string
        tag_name:
          type: string
        updated_at:
          type: string
      type: object
    api.ReleaseAsset:
      example:
        path: path
        content_type: content_type
        size: 0
        updated_at: updated_at
        uploader:
          freeze: true
          nickname: nickname
          username: username
        name: name
        created_at: created_at
        id: id
      properties:
        content_type:
          type: string
        created_at:
          type: string
        id:
          type: string
        name:
          type: string
        path:
          type: string
        size:
          type: integer
        updated_at:
          type: string
        uploader:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_api.UserInfo'
      type: object
    api.Repo:
      example:
        path: path
        web_url: web_url
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        path:
          type: string
        web_url:
          type: string
      type: object
    api.RepoInfo:
      example:
        path: path
        web_url: web_url
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        path:
          type: string
        web_url:
          type: string
      type: object
    api.Signature:
      example:
        date: date
        name: name
        email: email
      properties:
        date:
          type: string
        email:
          type: string
        name:
          type: string
      type: object
    api.Tag:
      example:
        commit:
          committer:
            freeze: true
            nickname: nickname
            username: username
          author:
            freeze: true
            nickname: nickname
            username: username
          commit:
            comment_count: 0
            committer:
              date: date
              name: name
              email: email
            author:
              date: date
              name: name
              email: email
            tree:
              sha: sha
            message: message
            verification:
              payload: payload
              signature: signature
              verified: true
              resone: resone
          sha: sha
          parents:
          - sha: sha
          - sha: sha
        name: name
        target_type: target_type
        target: target
      properties:
        commit:
          $ref: '#/components/schemas/api.Commit'
        name:
          type: string
        target:
          type: string
        target_type:
          type: string
      type: object
    api.TreeEntry:
      example:
        path: path
        name: name
        type: type
        sha: sha
      properties:
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        type:
          type: string
      type: object
    chart.Dependency:
      properties:
        alias:
          description: Alias usable alias to be used for the chart
          type: string
        condition:
          description: "A yaml path that resolves to a boolean, used for enabling/disabling\
            \ charts (e.g. subchart1.enabled )"
          type: string
        enabled:
          description: Enabled bool determines if chart should be loaded
          type: boolean
        import-values:
          description: |-
            ImportValues holds the mapping of source values to parent key to be imported. Each item can be a
            string or pair of child/parent sublist items.
          items:
            type: object
          type: array
        name:
          description: |-
            Name is the name of the dependency.

            This must mach the name in the dependency's Chart.yaml.
          type: string
        repository:
          description: |-
            The URL to the repository.

            Appending `index.yaml` to this string should result in a URL that can be
            used to fetch the repository index.
          type: string
        tags:
          description: Tags can be used to group charts for enabling/disabling together
          items:
            type: string
          type: array
        version:
          description: |-
            Version is the version (range) of this chart.

            A lock file will always produce a single version, while a dependency
            may contain a semantic version range.
          type: string
      type: object
    chart.Maintainer:
      properties:
        email:
          description: Email is an optional email address to contact the named maintainer
          type: string
        name:
          description: Name is a user name or organization name
          type: string
        url:
          description: URL is an optional URL to an address for the named maintainer
          type: string
      type: object
    chart.Metadata:
      properties:
        annotations:
          additionalProperties:
            type: string
          description: |-
            Annotations are additional mappings uninterpreted by Helm,
            made available for inspection by other applications.
          type: object
        apiVersion:
          description: The API Version of this chart. Required.
          type: string
        appVersion:
          description: The version of the application enclosed inside of this chart.
          type: string
        condition:
          description: The condition to check to enable chart
          type: string
        dependencies:
          description: Dependencies are a list of dependencies for a chart.
          items:
            $ref: '#/components/schemas/chart.Dependency'
          type: array
        deprecated:
          description: Whether or not this chart is deprecated
          type: boolean
        description:
          description: A one-sentence description of the chart
          type: string
        home:
          description: "The URL to a relevant project page, git repo, or contact person"
          type: string
        icon:
          description: The URL to an icon file.
          type: string
        keywords:
          description: A list of string keywords
          items:
            type: string
          type: array
        kubeVersion:
          description: KubeVersion is a SemVer constraint specifying the version of
            Kubernetes required.
          type: string
        maintainers:
          description: A list of name and URL/email address combinations for the maintainer(s)
          items:
            $ref: '#/components/schemas/chart.Maintainer'
          type: array
        name:
          description: The name of the chart. Required.
          type: string
        sources:
          description: Source is the URL to the source code of this chart
          items:
            type: string
          type: array
        tags:
          description: The tags to check to enable chart
          type: string
        type:
          description: "Specifies the chart type: application or library"
          type: string
        version:
          description: A SemVer 2 conformant version string of the chart. Required.
          type: string
      type: object
    constant.AccessRole:
      enum:
      - 0
      - 10
      - 20
      - 30
      - 40
      - 50
      type: integer
      x-enum-varnames:
      - Anonymous
      - Guest
      - REPORTER
      - DEVELOPER
      - MASTER
      - OWNER
    constant.ActivityType:
      enum:
      - mine
      - fork
      - follow
      - star
      - join_group
      - create_repo
      - user_create_release
      - repo_create_release
      - user_deploy_success
      - repo_deploy_success
      type: string
      x-enum-varnames:
      - Mine
      - Fork
      - Follow
      - Star
      - JoinGroup
      - CreateRepo
      - UserCreateRelease
      - RepoCreateRelease
      - UserDeploySuccess
      - RepoDeploySuccess
    constant.BudgetSts:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      x-enum-varnames:
      - BudgetStsNormal
      - BudgetStsIsolate
      - BudgetStsDestroy
      - BudgetStsFreeze
    constant.ChargeResType:
      enum:
      - charge_type_git
      - charge_type_object
      - charge_type_ci
      - charge_type_dev
      type: string
      x-enum-varnames:
      - ChargeTypeGit
      - ChargeTypeObject
      - ChargeTypeCi
      - ChargeTypeDev
    constant.RepoDisplayModule:
      enum:
      - 1
      - 2
      - 4
      type: integer
      x-enum-varnames:
      - RepoHideRelease
      - RepoHideContributors
      - RepoHideActivity
    constant.RepoStatus:
      enum:
      - 0
      - 1
      - 2
      type: integer
      x-enum-varnames:
      - RepoStatusOK
      - RepoStatusArchived
      - RepoStatusForking
    constant.SearchResourceType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      x-enum-varnames:
      - All
      - Group
      - Repo
      - User
      - Release
      - PullRequest
    constant.SlugType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      type: integer
      x-enum-varnames:
      - SlugTypeGroup
      - SlugTypeRepo
      - SlugTypeMission
      - SlugTypeRegistry
      - SlugTypeUnknown
    constant.UserEditable:
      enum:
      - 1
      - 2
      - 4
      - 8
      - 16
      - 32
      type: integer
      x-enum-varnames:
      - UserEmailEditable
      - UserNickEditable
      - UserNameEditable
      - UserAvatarEditable
      - UserLogOffEditable
      - UserSyncNickAvatarEditable
    constant.UserType:
      enum:
      - 0
      - 1
      - 2
      - 3
      type: integer
      x-enum-varnames:
      - WeChatUser
      - OauthUser
      - TestUser
      - RobotUser
    constant.Visibility:
      enum:
      - 0
      - 10
      - 20
      type: integer
      x-enum-varnames:
      - VisibilityPrivate
      - VisibilityPublic
      - VisibilitySecret
    convert.NullTime:
      properties:
        time:
          type: string
        valid:
          description: Valid is true if Time is not NULL
          type: boolean
      type: object
    die.WebErr:
      properties:
        errcode:
          type: integer
        errmsg:
          type: string
        errparam:
          additionalProperties:
            type: object
          type: object
      type: object
    die.WebError:
      example:
        errcode: 0
        errparam:
          key: "{}"
        errmsg: errmsg
      properties:
        errcode:
          type: integer
        errmsg:
          type: string
        errparam:
          additionalProperties:
            type: object
          type: object
      type: object
    dto.AccessTokenItem:
      properties:
        created_at:
          type: string
        description:
          type: string
        expired_at:
          type: string
        last_activity_at:
          type: string
        resource_type:
          $ref: '#/components/schemas/constant.SlugType'
        scope:
          type: string
        slug:
          type: string
        title:
          type: string
        token_fragment:
          type: string
        token_id:
          description: id 的 string 格式，用于兼容前端 int64 支持
          type: string
      type: object
    dto.AccessTokenPayload:
      properties:
        description:
          type: string
        expired_at:
          $ref: '#/components/schemas/convert.NullTime'
        scope:
          type: string
        slug:
          type: string
        token:
          type: string
      type: object
    dto.ActivityCalendar:
      additionalProperties:
        $ref: '#/components/schemas/dto.ActivityCalendarDate'
      type: object
    dto.ActivityCalendarDate:
      properties:
        commit_count:
          type: integer
        issues_count:
          type: integer
        pr_count:
          type: integer
        score:
          type: number
        valid_cr_count:
          description: 有效cr数，代码评审通过且对应的pr被合入
          type: integer
        valid_pr_count:
          description: 有效pr数，已被合入，且pr具有至少一个已通过的代码评审
          type: integer
      type: object
    dto.ActivityCreateRepoDetail:
      properties:
        create_at:
          type: string
        detail:
          allOf:
          - $ref: '#/components/schemas/dto.Repos4UserBase'
          description: 公仓转私仓或仓库被删除后为 null
          type: object
        exposed_repo_path:
          description: activity 发生时仓库的 path，这时的 path 是可以公开的
          type: string
        freeze:
          description: 仓库是否封禁
          type: boolean
        repo_unaccessible:
          description: 仓库是否不可访问（公仓转私仓或仓库被删除后不可访问）
          type: boolean
        visibility_level:
          allOf:
          - $ref: '#/components/schemas/constant.Visibility'
          description: 仓库可见性
          type: object
      type: object
    dto.ActivityDate:
      properties:
        code_review_count:
          type: integer
        code_reviews:
          items:
            $ref: '#/components/schemas/dto.ActivityRepoDetail'
          type: array
        commit_count:
          type: integer
        commits:
          items:
            $ref: '#/components/schemas/dto.ActivityRepoDetail'
          type: array
        group_count:
          type: integer
        groups:
          items:
            $ref: '#/components/schemas/dto.ActivityJoinGroupDetail'
          type: array
        issues:
          items:
            $ref: '#/components/schemas/dto.ActivityRepoDetail'
          type: array
        issues_count:
          type: integer
        private_score:
          type: integer
        pull_request_count:
          type: integer
        pull_requests:
          items:
            $ref: '#/components/schemas/dto.ActivityRepoDetail'
          type: array
        repo_count:
          type: integer
        repos:
          items:
            $ref: '#/components/schemas/dto.ActivityCreateRepoDetail'
          type: array
      type: object
    dto.ActivityJoinGroupDetail:
      properties:
        create_at:
          type: string
        detail:
          allOf:
          - $ref: '#/components/schemas/dto.OrganizationUnion'
          description: 组织详情，组织被删后为 null
          type: object
        remark:
          description: 组织别名，组织被删除后才有值
          type: string
      type: object
    dto.ActivityMineData:
      properties:
        activity_type:
          $ref: '#/components/schemas/constant.ActivityType'
        created_at:
          $ref: '#/components/schemas/convert.NullTime'
        repo:
          $ref: '#/components/schemas/dto.ActivityRepos'
        user:
          $ref: '#/components/schemas/dto.ActivityUsers'
      type: object
    dto.ActivityRelease:
      properties:
        commit_hash:
          type: string
        tag:
          type: string
        title:
          type: string
      type: object
    dto.ActivityRepoDetail:
      properties:
        detail:
          allOf:
          - $ref: '#/components/schemas/dto.ActivitySlugDetail'
          description: 公仓转私仓或仓库被删除后为 null
          type: object
        exposed_repo_path:
          description: activity 发生时仓库的 path，这时的 path 是可以公开的
          type: string
        freeze:
          description: 仓库是否封禁
          type: boolean
        repo_unaccessible:
          description: 仓库是否不可访问（公仓转私仓或仓库被删除后不可访问）
          type: boolean
        time:
          type: number
        visibility_level:
          allOf:
          - $ref: '#/components/schemas/constant.Visibility'
          description: 仓库可见性
          type: object
      type: object
    dto.ActivityRepos:
      properties:
        created_at:
          type: string
        description:
          type: string
        display_module:
          $ref: '#/components/schemas/constant.RepoDisplayModule'
        fork_count:
          type: integer
        fork_target:
          type: string
        forked_from:
          type: string
        freeze:
          readOnly: true
          type: boolean
        id:
          type: integer
        is_star:
          type: boolean
        language:
          description: 仓库程序语言，预留
          type: string
        last_updated_at:
          allOf:
          - $ref: '#/components/schemas/convert.NullTime'
          description: 最新代码更新时间
          type: object
        license:
          type: string
        mark_count:
          type: integer
        name:
          type: string
        path:
          type: string
        site:
          type: string
        star_count:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/constant.RepoStatus'
          type: object
        topics:
          type: string
        updated_at:
          type: string
        visibility_level:
          $ref: '#/components/schemas/constant.Visibility'
      type: object
    dto.ActivitySlugDetail:
      properties:
        path:
          description: 完整仓库路径
          type: string
      type: object
    dto.ActivityTotal:
      properties:
        activity_type:
          $ref: '#/components/schemas/constant.ActivityType'
        unread:
          type: boolean
        users:
          items:
            type: string
          type: array
      type: object
    dto.ActivityUsers:
      properties:
        address:
          type: string
        appreciate_status:
          description: 用户赞赏码状态，0-无赞赏码，1-有
          type: integer
        avatar:
          type: string
        bio:
          type: string
        company:
          type: string
        created_at:
          type: string
        email:
          type: string
        follow_count:
          type: integer
        follow_mission_count:
          type: integer
        follow_repo_count:
          type: integer
        follower_count:
          type: integer
        freeze:
          type: boolean
        gender:
          type: integer
        group_count:
          type: integer
        id:
          type: string
        is_follow:
          type: boolean
        location:
          type: string
        mission_count:
          type: integer
        nickname:
          type: string
        registry_count:
          type: integer
        repo_count:
          type: integer
        reward_amount:
          type: integer
        reward_count:
          type: integer
        site:
          type: string
        stars_count:
          type: integer
        type:
          $ref: '#/components/schemas/constant.UserType'
        username:
          type: string
        verified:
          description: 认证类型
          type: integer
        verified_expire_in:
          description: 认证过期时间
          type: string
        wechat_mp:
          type: string
        wechat_mp_qrcode:
          type: string
      type: object
    dto.ActivityWorkflowData:
      properties:
        activity_type:
          $ref: '#/components/schemas/constant.ActivityType'
        created_at:
          $ref: '#/components/schemas/convert.NullTime'
        group:
          $ref: '#/components/schemas/dto.OrganizationUnion'
        release:
          $ref: '#/components/schemas/dto.ActivityRelease'
        repo:
          $ref: '#/components/schemas/dto.ActivityRepos'
        user:
          $ref: '#/components/schemas/dto.ActivityUsers'
      type: object
    dto.Announcement:
      properties:
        announcement_msg:
          type: string
        created_at:
          type: string
        expired_at:
          type: string
        id:
          type: string
        pinned:
          type: integer
        title:
          type: string
        updated_at:
          type: string
      type: object
    dto.ArtifactStatus:
      properties:
        status:
          type: string
      type: object
    dto.AssetRecords:
      properties:
        id:
          type: string
        origin_path:
          description: 来源地址，例如 release 附件的来源地址是对应的 release 页面。issue和pr文件没有。
          type: string
        path:
          type: string
        referer:
          type: string
        size_in_byte:
          type: integer
      type: object
    dto.AssetSize:
      properties:
        used_in_byte:
          type: string
      type: object
    dto.Assets:
      example:
        path: "/{slug}/-/assets/xxx/xxx/xxxx-xxx.png"
        content_type: content_type
        size: 0
        name: name
      properties:
        content_type:
          type: string
        name:
          type: string
        path:
          example: "/{slug}/-/assets/xxx/xxx/xxxx-xxx.png"
          type: string
        size:
          type: integer
      type: object
    dto.BindResources:
      properties:
        app_id:
          type: string
        created_at:
          type: string
        metadata:
          type: string
        openid:
          type: string
        updated_at:
          type: string
      type: object
    dto.BindUsers:
      properties:
        app_id:
          type: string
        created_at:
          type: string
        metadata:
          type: string
        openid:
          type: string
        updated_at:
          type: string
      type: object
    dto.BoolResponse:
      properties:
        message:
          type: string
        result:
          type: boolean
      type: object
    dto.BoolResponseWithData-map_constant_SlugType_int64:
      properties:
        data:
          additionalProperties:
            type: integer
          type: object
        message:
          type: string
        result:
          type: boolean
      type: object
    dto.Budget:
      properties:
        charge_type_ci:
          description: 单位：核时
          type: integer
        charge_type_ci_policy:
          type: number
        charge_type_ci_price:
          description: ci价格，单位：分
          type: number
        charge_type_dev:
          type: integer
        charge_type_dev_policy:
          type: number
        charge_type_dev_price:
          description: 开发价格，单位：分
          type: number
        charge_type_git:
          description: 单位：Gib
          type: integer
        charge_type_git_policy:
          description: 折扣，没折扣是100
          type: number
        charge_type_git_price:
          description: git存储价格，单位：分
          type: number
        charge_type_object:
          type: integer
        charge_type_object_policy:
          type: number
        charge_type_object_price:
          description: 对象存储价格，单位：分
          type: number
        name:
          description: 预算单名称
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/constant.BudgetSts'
          description: 预算单状态，1-正常，2-隔离，3-销毁
          type: object
        uin:
          description: 云账号id
          type: string
      type: object
    dto.BudgetPrice:
      properties:
        charge_type_ci_price:
          description: ci价格，单位：分
          type: number
        charge_type_dev_price:
          description: 开发价格，单位：分
          type: number
        charge_type_git_price:
          description: git存储价格，单位：分
          type: number
        charge_type_object_price:
          description: 对象存储价格，单位：分
          type: number
      type: object
    dto.BuildLogsResult:
      example:
        init: true
        total: 2
        data:
        - buildLogUrl: buildLogUrl
          pipelineSuccessCount: 1
          targetRef: targetRef
          pipelineFailCount: 6
          eventUrl: eventUrl
          nickName: nickName
          sourceSlug: sourceSlug
          title: title
          userName: userName
          sha: sha
          labels: labels
          duration: 0
          groupName: groupName
          freeze: true
          pipelineTotalCount: 5
          createTime: createTime
          sn: sn
          event: event
          sourceRef: sourceRef
          slug: slug
          commitTitle: commitTitle
          status: status
        - buildLogUrl: buildLogUrl
          pipelineSuccessCount: 1
          targetRef: targetRef
          pipelineFailCount: 6
          eventUrl: eventUrl
          nickName: nickName
          sourceSlug: sourceSlug
          title: title
          userName: userName
          sha: sha
          labels: labels
          duration: 0
          groupName: groupName
          freeze: true
          pipelineTotalCount: 5
          createTime: createTime
          sn: sn
          event: event
          sourceRef: sourceRef
          slug: slug
          commitTitle: commitTitle
          status: status
        timestamp: 5
      properties:
        data:
          description: 构建数据列表
          items:
            $ref: '#/components/schemas/dto.LogInfo'
          type: array
        init:
          description: 当前仓库是否已经有构建记录，1 表示有构建记录，0 表示没有构建记录
          type: boolean
        timestamp:
          description: 当前时间戳
          type: integer
        total:
          description: 总数
          type: integer
      type: object
    dto.BuildResult:
      example:
        buildLogUrl: buildLogUrl
        sn: sn
        message: message
      properties:
        buildLogUrl:
          description: 构建链接
          type: string
        message:
          description: message
          type: string
        sn:
          description: 构建号
          type: string
      type: object
    dto.BuildStatusResult:
      example:
        pipelinesStatus:
          key:
            duration: 0
            stages:
            - duration: 6
              status: status
            - duration: 6
              status: status
            status: status
        status: status
      properties:
        pipelinesStatus:
          additionalProperties:
            $ref: '#/components/schemas/dto.PipelineStatus'
          description: 流水线的状态
          type: object
        status:
          description: 构建状态
          type: string
      type: object
    dto.CNBRegistry:
      properties:
        artifact_policy:
          default: all
          enum:
          - all
          - snapshot
          - release
          type: string
        created_at:
          type: string
        description:
          type: string
        freeze:
          readOnly: true
          type: boolean
        id:
          type: string
        kind:
          type: string
        last_push_time:
          type: string
        last_push_user:
          $ref: '#/components/schemas/dto.Users'
        name:
          type: string
        overwrite_policy:
          default: forbid
          enum:
          - forbid
          - allow
          type: string
        pkg_count:
          readOnly: true
          type: integer
        updated_at:
          type: string
        used_size:
          readOnly: true
          type: integer
        visibility_level:
          $ref: '#/components/schemas/constant.Visibility'
      type: object
    dto.ChartPackageDetail:
      properties:
        address:
          type: string
        desc:
          type: string
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        package:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        slug:
          type: string
        tag_total:
          type: integer
        tags:
          items:
            $ref: '#/components/schemas/dto.ChartTag'
          type: array
      type: object
    dto.ChartTag:
      properties:
        address:
          type: string
        digest:
          type: string
        is_deprecated:
          type: boolean
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        metadata:
          $ref: '#/components/schemas/chart.Metadata'
        name:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        size:
          type: integer
      type: object
    dto.ChartTagDetail:
      properties:
        address:
          type: string
        is_deprecated:
          type: boolean
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        metadata:
          $ref: '#/components/schemas/chart.Metadata'
        package:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        size:
          type: integer
        slug:
          type: string
        tag:
          type: string
      type: object
    dto.CheckFollowingResponse:
      properties:
        is_following:
          type: boolean
      type: object
    dto.CheckStarResponse:
      properties:
        is_star:
          type: boolean
      type: object
    dto.CleanPolicy:
      enum:
      - pull_time
      - push_time
      type: string
      x-enum-varnames:
      - CleanPolicyPullTime
      - CleanPolicyPushTime
    dto.CleanPolicyStatus:
      enum:
      - enabled
      - disabled
      type: string
      x-enum-varnames:
      - CleanPolicyEnabled
      - CleanPolicyDisabled
    dto.ContainerAnnotation:
      properties:
        revision:
          type: string
        version:
          type: string
      type: object
    dto.ContainerImage:
      properties:
        arch:
          type: string
        digest:
          type: string
        layers:
          items:
            $ref: '#/components/schemas/dto.ContainerImageLayer'
          type: array
        os:
          type: string
        size:
          type: integer
      type: object
    dto.ContainerImageLayer:
      properties:
        instruction:
          type: string
        size:
          type: integer
      type: object
    dto.ContainerPackageDetail:
      properties:
        address:
          type: string
        desc:
          type: string
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        package:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        slug:
          type: string
        tag_total:
          type: integer
        tags:
          items:
            $ref: '#/components/schemas/dto.ContainerTag'
          type: array
      type: object
    dto.ContainerTag:
      properties:
        address:
          type: string
        annotations:
          $ref: '#/components/schemas/dto.ContainerAnnotation'
        images:
          items:
            $ref: '#/components/schemas/dto.ContainerImage'
          type: array
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        name:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
      type: object
    dto.ContainerTagDetail:
      properties:
        address:
          type: string
        annotations:
          $ref: '#/components/schemas/dto.ContainerAnnotation'
        image:
          $ref: '#/components/schemas/dto.ContainerImage'
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        options:
          items:
            $ref: '#/components/schemas/dto.ContainerImage'
          type: array
        package:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        slug:
          type: string
        tag:
          type: string
      type: object
    dto.CopyReq:
      properties:
        description:
          type: string
        group:
          type: string
        name:
          type: string
        visibility:
          default: public
          enum:
          - public
          - private
          type: string
      type: object
    dto.CountResponse:
      properties:
        group:
          type: integer
        repo:
          type: integer
        user:
          type: integer
      type: object
    dto.CreateGroupReq:
      properties:
        bind_domain:
          description: BindDomain 根组织绑定的域名
          type: string
        description:
          type: string
        path:
          type: string
        remark:
          type: string
      type: object
    dto.CreateInvitationRequest:
      properties:
        is_outside_collaborator:
          type: boolean
        member_number:
          type: integer
        member_role:
          $ref: '#/components/schemas/constant.AccessRole'
        validity_hour:
          type: integer
      type: object
    dto.CreateInvitationResponse:
      properties:
        link_token:
          type: string
        resource_name:
          type: string
        resource_type:
          $ref: '#/components/schemas/constant.SlugType'
        username:
          type: string
      type: object
    dto.CreateMissionReq:
      properties:
        description:
          type: string
        name:
          type: string
        repos:
          items:
            type: string
          type: array
        visibility:
          default: public
          enum:
          - public
          - private
          type: string
      type: object
    dto.CreateRegistryReq:
      properties:
        artifact_policy:
          default: all
          enum:
          - all
          - snapshot
          - release
          type: string
        description:
          type: string
        kind:
          type: string
        name:
          type: string
        overwrite_policy:
          default: forbid
          enum:
          - forbid
          - allow
          type: string
        visibility:
          default: public
          enum:
          - public
          - private
          type: string
      type: object
    dto.CreateRepoReq:
      properties:
        description:
          type: string
        license:
          type: string
        name:
          type: string
        visibility:
          default: public
          enum:
          - public
          - private
          - secret
          type: string
      type: object
    dto.Creator:
      properties:
        freeze:
          type: boolean
        name:
          type: string
        nick:
          type: string
      type: object
    dto.Dependency:
      properties:
        artifact:
          type: string
        name:
          type: string
      type: object
    dto.File:
      properties:
        name:
          type: string
        size:
          type: integer
      type: object
    dto.ForkReq:
      properties:
        branch:
          type: string
        description:
          type: string
        group:
          type: string
        name:
          type: string
      type: object
    dto.Forks:
      example:
        fork_count: 0
        path: path
        freeze: true
        user_freeze: true
        nickname: nickname
        created_at: created_at
        username: username
      properties:
        created_at:
          type: string
        fork_count:
          type: integer
        freeze:
          type: boolean
        nickname:
          type: string
        path:
          type: string
        user_freeze:
          type: boolean
        username:
          type: string
      type: object
    dto.GetActivityMineDetailRsp:
      properties:
        activity_mine_datas:
          items:
            $ref: '#/components/schemas/dto.ActivityMineData'
          type: array
        next_offset:
          type: string
      type: object
    dto.GetActivityWorkflowDetailRsp:
      properties:
        activity_workflow_datas:
          items:
            $ref: '#/components/schemas/dto.ActivityWorkflowData'
          type: array
        next_offset:
          type: string
      type: object
    dto.GetMineCreateDetailRsp:
      properties:
        issue_datas:
          items:
            $ref: '#/components/schemas/dto.IssueData'
          type: array
        mine_type:
          type: string
        pull_request_datas:
          items:
            $ref: '#/components/schemas/dto.PullRequestData'
          type: array
      type: object
    dto.GetTodoDetailRsp:
      properties:
        issue_datas:
          items:
            $ref: '#/components/schemas/dto.IssueData'
          type: array
        pull_request_datas:
          items:
            $ref: '#/components/schemas/dto.PullRequestData'
          type: array
        todo_type:
          type: string
      type: object
    dto.GroupSettingReq:
      properties:
        email_verification:
          description: 组织限制指定邮箱认证才能加入
          type: string
        group_protection:
          description: 组织保护开关，0 - 关闭，1 - 打开
          type: integer
        hide_members:
          description: "是否对外隐藏组织成员，0 - 否, 1 - 是"
          type: integer
        hide_sub_groups:
          description: "是否对外隐藏子组织，0 - 否, 1 - 是"
          type: integer
        show_private_repo_watermark:
          description: "是否对外显示私有仓库水印，0 - 否, 1 - 是"
          type: integer
        values:
          description: "SettingValue 组织设置值，多个选项，用逗号拼接。可选值来自 SettingNamesArray 的值，\
            e.g. disable_organization_readme,cloud_native_dev_only"
          type: string
      type: object
    dto.HarborRepository:
      properties:
        description:
          description: The description of the repository
          type: string
        labels:
          description: The repository labels
          items:
            type: string
          type: array
        push_time:
          description: |-
            The push time of the artifact inside the repository
            Format: date-time
          type: string
        pusher_id:
          description: The ID of the pusher who push the artifact.
          type: integer
        recent_pull_count:
          description: The count that the artifact inside the repository recent pulled
          type: integer
      type: object
    dto.InheritMembersUser:
      example:
        email_verification: email_verification
        verified_expire_in: verified_expire_in
        verified: 5
        created_at: created_at
        avatar: avatar
        type: null
        join_time: join_time
        access_level: 6
        self_member: true
        freeze: true
        nickname: nickname
        inviter:
          freeze: true
          verified_expire_in: verified_expire_in
          nickname: nickname
          verified: 5
          created_at: created_at
          avatar: avatar
          id: id
          type: 1
          email: email
          username: username
        id: id
        email: email
        username: username
      properties:
        access_level:
          $ref: '#/components/schemas/constant.AccessRole'
        avatar:
          type: string
        created_at:
          type: string
        email:
          type: string
        email_verification:
          type: string
        freeze:
          type: boolean
        id:
          type: string
        inviter:
          $ref: '#/components/schemas/dto.Users'
        join_time:
          type: string
        nickname:
          type: string
        self_member:
          type: boolean
        type:
          $ref: '#/components/schemas/constant.UserType'
        username:
          type: string
        verified:
          description: 认证类型
          type: integer
        verified_expire_in:
          description: 认证过期时间
          type: string
      type: object
    dto.InteractionType:
      enum:
      - radio
      - checkbox
      - time_selector
      type: string
      x-enum-varnames:
      - InteractionTypeRadio
      - InteractionTypeCheckbox
      - InteractionTypeTimeSelector
    dto.InvitationWithEmail:
      properties:
        count:
          type: integer
        creator:
          type: string
        email:
          type: string
        email_match:
          type: boolean
        expire:
          type: integer
        is_outside_collaborator:
          type: boolean
        resource:
          $ref: '#/components/schemas/dto.Resources'
        role:
          $ref: '#/components/schemas/constant.AccessRole'
        status:
          type: string
      type: object
    dto.IssueData:
      properties:
        associated_pull_request_counts:
          type: integer
        comment_counts:
          type: integer
        created_time:
          type: string
        creator:
          $ref: '#/components/schemas/dto.Creator'
        label:
          items:
            $ref: '#/components/schemas/dto.Label'
          type: array
        number:
          type: integer
        pinned:
          type: boolean
        priority:
          type: string
        slug:
          type: string
        slug_freeze:
          type: boolean
        state:
          type: string
        title:
          type: string
        todo_id:
          type: string
        updated_time:
          type: string
      type: object
    dto.Label:
      properties:
        color:
          type: string
        description:
          type: string
        name:
          type: string
      type: object
    dto.LastPusher:
      properties:
        is_frozen:
          type: boolean
        name:
          type: string
        nickname:
          type: string
        push_at:
          type: string
      type: object
    dto.ListInheritMembers:
      example:
        total: 0
        inherit_path: inherit_path
        users:
        - email_verification: email_verification
          verified_expire_in: verified_expire_in
          verified: 5
          created_at: created_at
          avatar: avatar
          type: null
          join_time: join_time
          access_level: 6
          self_member: true
          freeze: true
          nickname: nickname
          inviter:
            freeze: true
            verified_expire_in: verified_expire_in
            nickname: nickname
            verified: 5
            created_at: created_at
            avatar: avatar
            id: id
            type: 1
            email: email
            username: username
          id: id
          email: email
          username: username
        - email_verification: email_verification
          verified_expire_in: verified_expire_in
          verified: 5
          created_at: created_at
          avatar: avatar
          type: null
          join_time: join_time
          access_level: 6
          self_member: true
          freeze: true
          nickname: nickname
          inviter:
            freeze: true
            verified_expire_in: verified_expire_in
            nickname: nickname
            verified: 5
            created_at: created_at
            avatar: avatar
            id: id
            type: 1
            email: email
            username: username
          id: id
          email: email
          username: username
      properties:
        inherit_path:
          type: string
        total:
          type: integer
        users:
          items:
            $ref: '#/components/schemas/dto.InheritMembersUser'
          type: array
      type: object
    dto.LogInfo:
      example:
        buildLogUrl: buildLogUrl
        pipelineSuccessCount: 1
        targetRef: targetRef
        pipelineFailCount: 6
        eventUrl: eventUrl
        nickName: nickName
        sourceSlug: sourceSlug
        title: title
        userName: userName
        sha: sha
        labels: labels
        duration: 0
        groupName: groupName
        freeze: true
        pipelineTotalCount: 5
        createTime: createTime
        sn: sn
        event: event
        sourceRef: sourceRef
        slug: slug
        commitTitle: commitTitle
        status: status
      properties:
        buildLogUrl:
          description: 构建日志 url
          type: string
        commitTitle:
          description: 提交日志 title
          type: string
        createTime:
          description: 构建开始时间
          type: string
        duration:
          description: 构建耗时，单位：ms
          type: integer
        event:
          description: 事件名
          type: string
        eventUrl:
          description: 事件 url
          type: string
        freeze:
          description: 构建用户是否被冻结
          type: boolean
        groupName:
          description: 组织名
          type: string
        labels:
          description: 流水线标签
          type: string
        nickName:
          description: 构建用户昵称
          type: string
        pipelineFailCount:
          description: 失败的子流水线个数
          type: integer
        pipelineSuccessCount:
          description: 成功的子流水线个数
          type: integer
        pipelineTotalCount:
          description: 子流水线个数
          type: integer
        sha:
          description: commitid
          type: string
        slug:
          description: 仓库路径
          type: string
        sn:
          description: 构建号
          type: string
        sourceRef:
          description: 源分支名
          type: string
        sourceSlug:
          description: 源仓库路径
          type: string
        status:
          description: 构建状态
          type: string
        targetRef:
          description: 目标分支名
          type: string
        title:
          description: 构建 title
          type: string
        userName:
          description: 用户名
          type: string
      type: object
    dto.Manifest:
      properties:
        metadata:
          $ref: '#/components/schemas/dto.ManifestMetadata'
        type:
          description: Type manifest/manifest_list
          type: string
      type: object
    dto.ManifestMetadata:
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Annotations contains arbitrary metadata for the image manifest.
          type: object
        artifactType:
          description: ArtifactType specifies the IANA media type of artifact when
            the manifest is used for an artifact.
          type: string
        config:
          allOf:
          - $ref: '#/components/schemas/v1.Descriptor'
          description: |-
            Config references a configuration object for a container, by digest.
            The referenced configuration object is a JSON blob that the runtime uses to set up the container.
          type: object
        layers:
          description: Layers is an indexed list of layers referenced by the manifest.
          items:
            $ref: '#/components/schemas/v1.Descriptor'
          type: array
        manifests:
          description: Manifests references platform specific manifests.
          items:
            $ref: '#/components/schemas/v1.Descriptor'
          type: array
        mediaType:
          description: MediaType specifies the type of this document data structure
            e.g. `application/vnd.oci.image.manifest.v1+json`
          type: string
        schemaVersion:
          description: SchemaVersion is the image manifest schema that this image
            follows
          type: integer
        subject:
          allOf:
          - $ref: '#/components/schemas/v1.Descriptor'
          description: Subject is an optional link from the image manifest to another
            manifest forming an association between the image manifest and the other
            manifest.
          type: object
      type: object
    dto.MavenPackageDetail:
      properties:
        address:
          type: string
        desc:
          type: string
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        package:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        slug:
          type: string
        tag_total:
          type: integer
        tags:
          items:
            $ref: '#/components/schemas/dto.MavenTag'
          type: array
      type: object
    dto.MavenTag:
      properties:
        desc:
          type: string
        digest:
          type: string
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        name:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        size:
          type: integer
        status:
          type: string
      type: object
    dto.MavenTagDetail:
      properties:
        address:
          type: string
        desc:
          type: string
        files:
          items:
            $ref: '#/components/schemas/dto.File'
          type: array
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        package:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        size:
          type: integer
        slug:
          type: string
        status:
          type: string
        tag:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/dto.MavenTag'
          type: array
      type: object
    dto.MemberAccessLevel:
      example:
        access_level: 0
        path: path
      properties:
        access_level:
          $ref: '#/components/schemas/constant.AccessRole'
        path:
          type: string
      type: object
    dto.MemberAccessLevelInSlugUnion:
      example:
        access_level: 0
        write_privilege: true
        inherit: true
        read_privilege: true
      properties:
        access_level:
          $ref: '#/components/schemas/constant.AccessRole'
        inherit:
          type: boolean
        read_privilege:
          type: boolean
        write_privilege:
          type: boolean
      type: object
    dto.MineCreateTotal:
      properties:
        issue_count:
          type: integer
        pull_request_count:
          type: integer
        total:
          type: integer
      type: object
    dto.MissionPatch:
      properties:
        description:
          type: string
        ref_repos:
          items:
            type: string
          type: array
      type: object
    dto.MissionWithPath:
      properties:
        created_at:
          type: string
        description:
          type: string
        freeze:
          readOnly: true
          type: boolean
        id:
          type: integer
        name:
          type: string
        path:
          type: string
        updated_at:
          type: string
        visibility_level:
          $ref: '#/components/schemas/constant.Visibility'
      type: object
    dto.MissionWithRepos:
      properties:
        created_at:
          type: string
        description:
          type: string
        freeze:
          readOnly: true
          type: boolean
        id:
          type: integer
        name:
          type: string
        repos:
          items:
            $ref: '#/components/schemas/dto.Repos4User'
          type: array
        stared:
          type: boolean
        updated_at:
          type: string
        visibility_level:
          $ref: '#/components/schemas/constant.Visibility'
      type: object
    dto.Missions4User:
      properties:
        access:
          allOf:
          - $ref: '#/components/schemas/constant.AccessRole'
          type: object
        created_at:
          type: string
        description:
          type: string
        freeze:
          readOnly: true
          type: boolean
        id:
          type: integer
        name:
          type: string
        path:
          type: string
        star_time:
          type: string
        stared:
          type: boolean
        updated_at:
          type: string
        visibility_level:
          $ref: '#/components/schemas/constant.Visibility'
      type: object
    dto.NpmPackageDetail:
      properties:
        address:
          type: string
        desc:
          type: string
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        package:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        slug:
          type: string
        tag_total:
          type: integer
        tags:
          items:
            $ref: '#/components/schemas/dto.NpmTag'
          type: array
      type: object
    dto.NpmTag:
      properties:
        desc:
          type: string
        digest:
          type: string
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        name:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        size:
          type: integer
        status:
          type: string
      type: object
    dto.NpmTagDetail:
      properties:
        address:
          type: string
        dependencies:
          items:
            $ref: '#/components/schemas/dto.Dependency'
          type: array
        desc:
          type: string
        files:
          items:
            $ref: '#/components/schemas/dto.File'
          type: array
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        package:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        size:
          type: integer
        slug:
          type: string
        status:
          type: string
        tag:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/dto.NpmTag'
          type: array
      type: object
    dto.OhpmPackageDetail:
      properties:
        address:
          type: string
        desc:
          type: string
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        package:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        slug:
          type: string
        tag_total:
          type: integer
        tags:
          items:
            $ref: '#/components/schemas/dto.OhpmTag'
          type: array
      type: object
    dto.OhpmTag:
      properties:
        desc:
          type: string
        digest:
          type: string
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        name:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        size:
          type: integer
        status:
          type: string
      type: object
    dto.OhpmTagDetail:
      properties:
        address:
          type: string
        dependencies:
          items:
            $ref: '#/components/schemas/dto.Dependency'
          type: array
        desc:
          type: string
        files:
          items:
            $ref: '#/components/schemas/dto.File'
          type: array
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        package:
          type: string
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
        size:
          type: integer
        slug:
          type: string
        status:
          type: string
        tag:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/dto.OhpmTag'
          type: array
      type: object
    dto.OrganizationAccess:
      example:
        all_sub_group_count: 6
        access_role: "{}"
        created_at: created_at
        description: description
        remark: remark
        path: path
        freeze: true
        sub_repo_count: 7
        updated_at: updated_at
        has_sub_group: true
        sub_mission_count: 2
        id: 7
        member_count: 9
        email: email
        sub_group_count: 3
        all_sub_repo_count: 5
        wechat_mp: wechat_mp
        sub_registry_count: 4
        all_sub_registry_count: 5
        site: site
        all_member_count: 0
        all_sub_mission_count: 1
        follow_count: 2
        domain: domain
        name: name
      properties:
        access_role:
          allOf:
          - $ref: '#/components/schemas/constant.AccessRole'
          description: AccessRole 用户在当前资源的最大权限
          type: object
        all_member_count:
          type: integer
        all_sub_group_count:
          description: 下面所有层级子组织
          type: integer
        all_sub_mission_count:
          description: 下面所有层级子任务
          type: integer
        all_sub_registry_count:
          type: integer
        all_sub_repo_count:
          description: 下面所有层级子仓库
          type: integer
        created_at:
          type: string
        description:
          type: string
        domain:
          type: string
        email:
          type: string
        follow_count:
          type: integer
        freeze:
          readOnly: true
          type: boolean
        has_sub_group:
          type: boolean
        id:
          type: integer
        member_count:
          type: integer
        name:
          type: string
        path:
          type: string
        remark:
          type: string
        site:
          type: string
        sub_group_count:
          description: 下一级子组织数量
          type: integer
        sub_mission_count:
          type: integer
        sub_registry_count:
          type: integer
        sub_repo_count:
          description: 下一级子仓库
          type: integer
        updated_at:
          type: string
        wechat_mp:
          type: string
      type: object
    dto.OrganizationSettingWithParent:
      example:
        can_show_members: true
        group_protection: 0
        show_private_repo_watermark: 5
        hide_sub_groups: 1
        root_email_verification: root_email_verification
        email_verification: email_verification
        root_values: 5
        values: null
        can_show_watermark: true
        hide_members: 6
        can_show_sub_groups: true
        root_group_protection: true
      properties:
        can_show_members:
          description: 上级group设置了hide_members为1，则下级都不能显示
          type: boolean
        can_show_sub_groups:
          description: 上级group设置了hide_sub_groups为1，则下级都不能显示
          type: boolean
        can_show_watermark:
          type: boolean
        email_verification:
          type: string
        group_protection:
          type: integer
        hide_members:
          description: "是否对外隐藏组织成员，0 - 否, 1 - 是"
          type: integer
        hide_sub_groups:
          description: "是否对外隐藏子组织，0 - 否, 1 - 是"
          type: integer
        root_email_verification:
          type: string
        root_group_protection:
          type: boolean
        root_values:
          $ref: '#/components/schemas/organization.SettingValue'
        show_private_repo_watermark:
          type: integer
        values:
          $ref: '#/components/schemas/organization.SettingValue'
      type: object
    dto.OrganizationUnion:
      example:
        all_sub_group_count: 6
        all_sub_repo_count: 5
        wechat_mp: wechat_mp
        created_at: created_at
        description: description
        remark: remark
        sub_registry_count: 4
        all_sub_registry_count: 5
        path: path
        site: site
        freeze: true
        sub_repo_count: 7
        all_member_count: 0
        all_sub_mission_count: 1
        updated_at: updated_at
        has_sub_group: true
        follow_count: 2
        sub_mission_count: 2
        domain: domain
        name: name
        id: 7
        member_count: 9
        email: email
        sub_group_count: 3
      properties:
        all_member_count:
          type: integer
        all_sub_group_count:
          description: 下面所有层级子组织
          type: integer
        all_sub_mission_count:
          description: 下面所有层级子任务
          type: integer
        all_sub_registry_count:
          type: integer
        all_sub_repo_count:
          description: 下面所有层级子仓库
          type: integer
        created_at:
          type: string
        description:
          type: string
        domain:
          type: string
        email:
          type: string
        follow_count:
          type: integer
        freeze:
          readOnly: true
          type: boolean
        has_sub_group:
          type: boolean
        id:
          type: integer
        member_count:
          type: integer
        name:
          type: string
        path:
          type: string
        remark:
          type: string
        site:
          type: string
        sub_group_count:
          description: 下一级子组织数量
          type: integer
        sub_mission_count:
          type: integer
        sub_registry_count:
          type: integer
        sub_repo_count:
          description: 下一级子仓库
          type: integer
        updated_at:
          type: string
        wechat_mp:
          type: string
      type: object
    dto.OutsideCollaboratorInRepo:
      example:
        access_level: 0
        freeze: true
        verified_expire_in: verified_expire_in
        nickname: nickname
        verified: 1
        created_at: created_at
        avatar: avatar
        id: id
        type: 6
        email: email
        join_time: join_time
        username: username
      properties:
        access_level:
          $ref: '#/components/schemas/constant.AccessRole'
        avatar:
          type: string
        created_at:
          type: string
        email:
          type: string
        freeze:
          type: boolean
        id:
          type: string
        join_time:
          type: string
        nickname:
          type: string
        type:
          $ref: '#/components/schemas/constant.UserType'
        username:
          type: string
        verified:
          description: 认证类型
          type: integer
        verified_expire_in:
          description: 认证过期时间
          type: string
      type: object
    dto.OverwritePolicy:
      enum:
      - forbid
      - allow
      type: string
      x-enum-varnames:
      - OverwritePolicyForbid
      - OverwritePolicyAllow
    dto.Pack:
      properties:
        expire_at:
          type: string
        name:
          type: string
        res_type:
          $ref: '#/components/schemas/constant.ChargeResType'
        size:
          description: "单位: GiB/核时"
          type: integer
        type:
          $ref: '#/components/schemas/dto.PackType'
      type: object
    dto.PackType:
      enum:
      - -1
      - 0
      - 1
      - 10
      - 20
      - 255
      type: integer
      x-enum-varnames:
      - PackTypeUnknown
      - PackTypeFree
      - PackTypeSpecial
      - PackTypeOpenSource
      - PackTypeMigration
      - PackTypeBudget
    dto.Package:
      properties:
        count:
          type: integer
        description:
          type: string
        labels:
          items:
            type: string
          type: array
        last_artifact_name:
          type: string
        last_pusher:
          $ref: '#/components/schemas/dto.LastPusher'
        name:
          type: string
        package:
          type: string
        package_type:
          $ref: '#/components/schemas/dto.PackageType'
        pull_count:
          type: integer
        recent_pull_count:
          type: integer
      type: object
    dto.PackageDetail:
      properties:
        docker:
          $ref: '#/components/schemas/dto.ContainerPackageDetail'
        helm:
          $ref: '#/components/schemas/dto.ChartPackageDetail'
        maven:
          $ref: '#/components/schemas/dto.MavenPackageDetail'
        npm:
          $ref: '#/components/schemas/dto.NpmPackageDetail'
        ohpm:
          $ref: '#/components/schemas/dto.OhpmPackageDetail'
      type: object
    dto.PackageType:
      enum:
      - all
      - docker
      - helm
      - npm
      - maven
      - ohpm
      type: string
      x-enum-varnames:
      - PackageTypeAll
      - PackageTypeDocker
      - PackageTypeHelm
      - PackageTypeNpm
      - PackageTypeMaven
      - PackageTypeOhpm
    dto.PipelineStatus:
      example:
        duration: 0
        stages:
        - duration: 6
          status: status
        - duration: 6
          status: status
        status: status
      properties:
        duration:
          description: 流水线耗时
          type: integer
        stages:
          description: 流水线各 stage 的状态
          items:
            $ref: '#/components/schemas/dto.Stage'
          type: array
        status:
          description: 流水线状态
          type: string
      type: object
    dto.PullRequestData:
      properties:
        associated_issue_counts:
          type: integer
        build_status:
          type: string
        comment_counts:
          type: integer
        created_time:
          type: string
        label:
          items:
            $ref: '#/components/schemas/dto.Label'
          type: array
        mergeable_state:
          type: string
        number:
          type: integer
        pinned:
          type: boolean
        slug:
          type: string
        slug_freeze:
          type: boolean
        src_ref:
          type: string
        state:
          type: string
        target_ref:
          type: string
        title:
          type: string
        todo_id:
          type: string
        updated_time:
          type: string
      type: object
    dto.Quota:
      properties:
        hard:
          allOf:
          - $ref: '#/components/schemas/dto.storage'
          description: "The hard limits of the quota,example: { \"hard\": { \"storage\"\
            : -1}}"
          type: object
      type: object
    dto.QuotaRsp:
      properties:
        hard:
          allOf:
          - $ref: '#/components/schemas/dto.storage'
          description: "The hard limits of the quota,example: { \"hard\": { \"storage\"\
            : -1}}"
          type: object
        repository_name:
          description: The repository name of the quota
          type: string
        storage_per_project:
          description: The cnb default quota value
          type: string
        used:
          allOf:
          - $ref: '#/components/schemas/dto.storage'
          description: "The used limits of the quota,example: { \"used\": { \"storage\"\
            : 0}}"
          type: object
      type: object
    dto.RankDetail:
      properties:
        created_at:
          type: string
        description:
          type: string
        display_module:
          $ref: '#/components/schemas/constant.RepoDisplayModule'
        fork_count:
          type: integer
        forked_from_repo:
          allOf:
          - $ref: '#/components/schemas/dto.Slugs'
          description: 预留
          type: object
        freeze:
          readOnly: true
          type: boolean
        id:
          type: integer
        language:
          description: 仓库程序语言，预留
          type: string
        languages:
          description: 仓库语言
          items:
            $ref: '#/components/schemas/dto.RepoLanguage'
          type: array
        last_update_nickname:
          description: 最新代码更新人姓名
          type: string
        last_update_username:
          description: 最新代码更新人账户名
          type: string
        last_updated_at:
          allOf:
          - $ref: '#/components/schemas/convert.NullTime'
          description: 最新代码更新时间
          type: object
        license:
          type: string
        mark_count:
          type: integer
        name:
          type: string
        open_issue_count:
          description: 开启的issue数
          type: integer
        open_pull_request_count:
          description: 开启的pull request数
          type: integer
        path:
          description: 完整仓库路径
          type: string
        rank_value:
          type: integer
        site:
          type: string
        star_count:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/constant.RepoStatus'
          type: object
        tags:
          items:
            $ref: '#/components/schemas/dto_RankDetail_tags_inner'
          type: array
        topics:
          type: string
        updated_at:
          type: string
        visibility_level:
          $ref: '#/components/schemas/constant.Visibility'
        web_url:
          type: string
      type: object
    dto.Registry4User:
      properties:
        access:
          allOf:
          - $ref: '#/components/schemas/constant.AccessRole'
          type: object
        artifact_policy:
          default: all
          enum:
          - all
          - snapshot
          - release
          type: string
        created_at:
          type: string
        description:
          type: string
        freeze:
          readOnly: true
          type: boolean
        id:
          type: string
        kind:
          type: string
        last_push_time:
          type: string
        last_push_user:
          $ref: '#/components/schemas/dto.Users'
        name:
          type: string
        overwrite_policy:
          default: forbid
          enum:
          - forbid
          - allow
          type: string
        path:
          type: string
        pkg_count:
          readOnly: true
          type: integer
        star_time:
          type: string
        stared:
          type: boolean
        updated_at:
          type: string
        used_size:
          readOnly: true
          type: integer
        visibility_level:
          $ref: '#/components/schemas/constant.Visibility'
      type: object
    dto.RegistryCleanDetail:
      properties:
        artifact_num:
          type: integer
        clean_policy:
          $ref: '#/components/schemas/dto.CleanPolicy'
        status:
          $ref: '#/components/schemas/dto.CleanPolicyStatus'
      type: object
    dto.RegistryPatch:
      properties:
        description:
          type: string
      type: object
    dto.RegistryPolicy:
      properties:
        clean_policy_detail:
          $ref: '#/components/schemas/dto.RegistryCleanDetail'
        overwrite_policy:
          $ref: '#/components/schemas/dto.OverwritePolicy'
        version_policy:
          $ref: '#/components/schemas/dto.VersionPolicy'
      type: object
    dto.RepoCoreHour:
      properties:
        ci_used_core_Sec:
          type: string
        ci_used_core_hour:
          type: string
        code_used_core_Sec:
          type: string
        code_used_core_hour:
          type: string
      type: object
    dto.RepoLanguage:
      example:
        language: language
        ratio: ratio
      properties:
        language:
          type: string
        ratio:
          type: string
      type: object
    dto.RepoPatch:
      properties:
        description:
          type: string
        license:
          type: string
        site:
          type: string
        topics:
          items:
            type: string
          type: array
      type: object
    dto.RepoRank:
      properties:
        rank_type:
          type: string
        repo_detail:
          items:
            $ref: '#/components/schemas/dto.RankDetail'
          type: array
        top_n:
          type: integer
      type: object
    dto.RepoStarUsers:
      example:
        total: 6
        my_follow_count: 0
        users:
        - freeze: true
          is_follow: true
          verified_expire_in: verified_expire_in
          nickname: nickname
          stared_at: stared_at
          verified: 5
          created_at: created_at
          avatar: avatar
          id: id
          type: 1
          email: email
          username: username
        - freeze: true
          is_follow: true
          verified_expire_in: verified_expire_in
          nickname: nickname
          stared_at: stared_at
          verified: 5
          created_at: created_at
          avatar: avatar
          id: id
          type: 1
          email: email
          username: username
      properties:
        my_follow_count:
          type: integer
        total:
          type: integer
        users:
          items:
            $ref: '#/components/schemas/dto.StarUser'
          type: array
      type: object
    dto.RepoVolume:
      properties:
        is_deleted:
          type: boolean
        resource_id:
          type: string
        resource_type:
          $ref: '#/components/schemas/constant.SlugType'
        slug:
          type: string
        volume:
          type: string
      type: object
    dto.Repos4User:
      example:
        access: "{}"
        display_module: 0
        last_update_nickname: last_update_nickname
        created_at: created_at
        description: description
        language: language
        last_update_username: last_update_username
        forked_from_repo: "{}"
        path: path
        freeze: true
        open_pull_request_count: 2
        updated_at: updated_at
        visibility_level: 9
        id: 1
        fork_count: 6
        languages:
        - language: language
          ratio: ratio
        - language: language
          ratio: ratio
        star_time: star_time
        topics: topics
        mark_count: 5
        tags:
        - name: name
        - name: name
        license: license
        site: site
        web_url: web_url
        last_updated_at: "{}"
        open_issue_count: 5
        name: name
        stared: true
        star_count: 7
        status: "{}"
      properties:
        access:
          allOf:
          - $ref: '#/components/schemas/constant.AccessRole'
          type: object
        created_at:
          type: string
        description:
          type: string
        display_module:
          $ref: '#/components/schemas/constant.RepoDisplayModule'
        fork_count:
          type: integer
        forked_from_repo:
          allOf:
          - $ref: '#/components/schemas/dto.Slugs'
          description: 预留
          type: object
        freeze:
          readOnly: true
          type: boolean
        id:
          type: integer
        language:
          description: 仓库程序语言，预留
          type: string
        languages:
          description: 仓库语言
          items:
            $ref: '#/components/schemas/dto.RepoLanguage'
          type: array
        last_update_nickname:
          description: 最新代码更新人姓名
          type: string
        last_update_username:
          description: 最新代码更新人账户名
          type: string
        last_updated_at:
          allOf:
          - $ref: '#/components/schemas/convert.NullTime'
          description: 最新代码更新时间
          type: object
        license:
          type: string
        mark_count:
          type: integer
        name:
          type: string
        open_issue_count:
          description: 开启的issue数
          type: integer
        open_pull_request_count:
          description: 开启的pull request数
          type: integer
        path:
          description: 完整仓库路径
          type: string
        site:
          type: string
        star_count:
          type: integer
        star_time:
          type: string
        stared:
          type: boolean
        status:
          allOf:
          - $ref: '#/components/schemas/constant.RepoStatus'
          type: object
        tags:
          items:
            $ref: '#/components/schemas/dto_RankDetail_tags_inner'
          type: array
        topics:
          type: string
        updated_at:
          type: string
        visibility_level:
          $ref: '#/components/schemas/constant.Visibility'
        web_url:
          type: string
      type: object
    dto.Repos4UserBase:
      example:
        display_module: 0
        last_update_nickname: last_update_nickname
        created_at: created_at
        description: description
        language: language
        last_update_username: last_update_username
        forked_from_repo: "{}"
        path: path
        freeze: true
        open_pull_request_count: 2
        updated_at: updated_at
        visibility_level: 9
        id: 1
        fork_count: 6
        languages:
        - language: language
          ratio: ratio
        - language: language
          ratio: ratio
        topics: topics
        mark_count: 5
        tags:
        - name: name
        - name: name
        license: license
        site: site
        web_url: web_url
        last_updated_at: "{}"
        open_issue_count: 5
        name: name
        star_count: 7
        status: "{}"
      properties:
        created_at:
          type: string
        description:
          type: string
        display_module:
          $ref: '#/components/schemas/constant.RepoDisplayModule'
        fork_count:
          type: integer
        forked_from_repo:
          allOf:
          - $ref: '#/components/schemas/dto.Slugs'
          description: 预留
          type: object
        freeze:
          readOnly: true
          type: boolean
        id:
          type: integer
        language:
          description: 仓库程序语言，预留
          type: string
        languages:
          description: 仓库语言
          items:
            $ref: '#/components/schemas/dto.RepoLanguage'
          type: array
        last_update_nickname:
          description: 最新代码更新人姓名
          type: string
        last_update_username:
          description: 最新代码更新人账户名
          type: string
        last_updated_at:
          allOf:
          - $ref: '#/components/schemas/convert.NullTime'
          description: 最新代码更新时间
          type: object
        license:
          type: string
        mark_count:
          type: integer
        name:
          type: string
        open_issue_count:
          description: 开启的issue数
          type: integer
        open_pull_request_count:
          description: 开启的pull request数
          type: integer
        path:
          description: 完整仓库路径
          type: string
        site:
          type: string
        star_count:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/constant.RepoStatus'
          type: object
        tags:
          items:
            $ref: '#/components/schemas/dto_RankDetail_tags_inner'
          type: array
        topics:
          type: string
        updated_at:
          type: string
        visibility_level:
          $ref: '#/components/schemas/constant.Visibility'
        web_url:
          type: string
      type: object
    dto.ResourceBindInfo:
      properties:
        code:
          type: string
        expire_at:
          type: string
        name:
          type: string
        nick:
          type: string
        slug:
          type: string
        url:
          type: string
      type: object
    dto.ResourceGroup:
      properties:
        created_at:
          type: string
        description:
          type: string
        domain:
          type: string
        email:
          type: string
        freeze:
          readOnly: true
          type: boolean
        id:
          type: integer
        name:
          type: string
        path:
          type: string
        remark:
          type: string
        site:
          type: string
        updated_at:
          type: string
        wechat_mp:
          type: string
      type: object
    dto.ResourceMission:
      properties:
        created_at:
          type: string
        description:
          type: string
        freeze:
          readOnly: true
          type: boolean
        id:
          type: integer
        name:
          type: string
        path:
          type: string
        updated_at:
          type: string
        visibility_level:
          $ref: '#/components/schemas/constant.Visibility'
      type: object
    dto.ResourceRegistry:
      properties:
        artifact_policy:
          default: all
          enum:
          - all
          - snapshot
          - release
          type: string
        created_at:
          type: string
        description:
          type: string
        freeze:
          readOnly: true
          type: boolean
        id:
          type: string
        kind:
          type: string
        last_push_time:
          type: string
        last_push_user:
          $ref: '#/components/schemas/dto.Users'
        name:
          type: string
        overwrite_policy:
          default: forbid
          enum:
          - forbid
          - allow
          type: string
        path:
          type: string
        pkg_count:
          readOnly: true
          type: integer
        updated_at:
          type: string
        used_size:
          readOnly: true
          type: integer
        visibility_level:
          $ref: '#/components/schemas/constant.Visibility'
      type: object
    dto.ResourceRepo:
      properties:
        created_at:
          type: string
        freeze:
          readOnly: true
          type: boolean
        id:
          type: integer
        name:
          type: string
        path:
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/constant.RepoStatus'
          type: object
        updated_at:
          type: string
        visibility_level:
          $ref: '#/components/schemas/constant.Visibility'
      type: object
    dto.Resources:
      properties:
        group:
          $ref: '#/components/schemas/dto.ResourceGroup'
        mission:
          $ref: '#/components/schemas/dto.ResourceMission'
        registry:
          $ref: '#/components/schemas/dto.ResourceRegistry'
        repo:
          $ref: '#/components/schemas/dto.ResourceRepo'
        type:
          $ref: '#/components/schemas/constant.SlugType'
      type: object
    dto.SearchResponse-any:
      properties:
        resource_type:
          $ref: '#/components/schemas/constant.SearchResourceType'
        results:
          type: object
      type: object
    dto.SlugMemberCount:
      properties:
        inherited_member_count:
          description: 继承成员总数
          type: integer
        member_count:
          description: 直接成员总数
          type: integer
        outside_collaborator_count:
          description: 外部协作者总数
          type: integer
      type: object
    dto.Slugs:
      properties:
        created_at:
          type: string
        freeze:
          type: boolean
        path:
          type: string
        resource_id:
          type: integer
        resource_type:
          $ref: '#/components/schemas/constant.SlugType'
        root_freeze:
          type: boolean
        root_id:
          type: integer
        updated_at:
          type: string
      type: object
    dto.SpecialAmount:
      properties:
        compute_build_corehour:
          type: integer
        compute_build_desc:
          type: string
        compute_build_expire:
          type: string
        compute_develop_corehour:
          type: integer
        compute_develop_desc:
          type: string
        compute_develop_expire:
          type: string
        storage_git_desc:
          type: string
        storage_git_expire:
          type: string
        storage_git_gib:
          type: integer
        storage_object_desc:
          type: string
        storage_object_expire:
          type: string
        storage_object_gib:
          type: integer
      type: object
    dto.Stage:
      example:
        duration: 6
        status: status
      properties:
        duration:
          description: stage 耗时
          type: integer
        status:
          description: stage 状态
          type: string
      type: object
    dto.StarUser:
      example:
        freeze: true
        is_follow: true
        verified_expire_in: verified_expire_in
        nickname: nickname
        stared_at: stared_at
        verified: 5
        created_at: created_at
        avatar: avatar
        id: id
        type: 1
        email: email
        username: username
      properties:
        avatar:
          type: string
        created_at:
          type: string
        email:
          type: string
        freeze:
          type: boolean
        id:
          type: string
        is_follow:
          type: boolean
        nickname:
          type: string
        stared_at:
          type: string
        type:
          $ref: '#/components/schemas/constant.UserType'
        username:
          type: string
        verified:
          description: 认证类型
          type: integer
        verified_expire_in:
          description: 认证过期时间
          type: string
      type: object
    dto.StartBuildReq:
      properties:
        branch:
          description: 触发分支，默认为主分支
          type: string
        config:
          description: 指定配置文件内容，yaml 格式
          type: string
        env:
          additionalProperties:
            type: string
          description: 环境变量，对象格式
          type: object
        event:
          description: 事件名，必须是 api_trigger 或以 api_trigger_ 开头，默认为 `api_trigger`
          type: string
        sha:
          description: commit id ，优先级比 tag 高，默认为分支最新提交记录
          type: string
        sync:
          description: 是否等待构建正式触发，为false时会立刻返回 sn 和 buildLogUrl
          type: string
        tag:
          description: 触发 tag，优先级比 branch 高
          type: string
      type: object
    dto.Status:
      properties:
        budget_status:
          allOf:
          - $ref: '#/components/schemas/constant.BudgetSts'
          description: 预算单状态，0-没有预算单，1-正常，2-欠费被隔离，3-被销毁
          type: object
        overruns:
          additionalProperties:
            type: boolean
          description: 对应资源类型是否超限
          type: object
        used_percent:
          additionalProperties:
            type: integer
          description: 对应资源类型目前的使用率，比如50就是50%
          type: object
      type: object
    dto.SystemAcceleration:
      properties:
        priority:
          type: integer
        url:
          type: string
        user_name:
          type: string
      type: object
    dto.Tag:
      properties:
        docker:
          items:
            $ref: '#/components/schemas/dto.ContainerTag'
          type: array
        helm:
          items:
            $ref: '#/components/schemas/dto.ChartTag'
          type: array
        maven:
          items:
            $ref: '#/components/schemas/dto.MavenTag'
          type: array
        npm:
          items:
            $ref: '#/components/schemas/dto.NpmTag'
          type: array
        ohpm:
          items:
            $ref: '#/components/schemas/dto.OhpmTag'
          type: array
        package:
          type: string
      type: object
    dto.TagDetail:
      properties:
        docker:
          $ref: '#/components/schemas/dto.ContainerTagDetail'
        helm:
          $ref: '#/components/schemas/dto.ChartTagDetail'
        maven:
          $ref: '#/components/schemas/dto.MavenTagDetail'
        npm:
          $ref: '#/components/schemas/dto.NpmTagDetail'
        ohpm:
          $ref: '#/components/schemas/dto.OhpmTagDetail'
      type: object
    dto.TimeVolume:
      properties:
        time_rfc3339:
          type: string
        volume:
          type: string
      type: object
    dto.TodoTotal:
      properties:
        issue_complete_count:
          type: integer
        issue_pending_count:
          type: integer
        pull_request_complete_count:
          type: integer
        pull_request_pending_count:
          type: integer
        total:
          type: integer
      type: object
    dto.TransferSlugReq:
      properties:
        source:
          type: string
        target:
          type: string
      type: object
    dto.UpdateGroupAvatarReq:
      properties:
        url:
          description: 新头像 url
          type: string
      type: object
    dto.UpdateGroupReq:
      properties:
        description:
          type: string
        domain:
          type: string
        email:
          type: string
        remark:
          type: string
        site:
          type: string
        wechat_mp:
          type: string
      type: object
    dto.UpdateMembersRequest:
      properties:
        access_level:
          type: string
        is_outside_collaborator:
          type: boolean
      type: object
    dto.UploadAssetsResponse:
      example:
        assets:
          path: "/{slug}/-/assets/xxx/xxx/xxxx-xxx.png"
          content_type: content_type
          size: 0
          name: name
        form:
          key: form
        upload_url: upload_url
        token: token
      properties:
        assets:
          $ref: '#/components/schemas/dto.Assets'
        form:
          additionalProperties:
            type: string
          type: object
        token:
          description: 后续调用 confirm 接口用的
          type: string
        upload_url:
          type: string
      type: object
    dto.UploadRequestParams:
      properties:
        name:
          type: string
        size:
          type: integer
      type: object
    dto.UserBindInfo:
      properties:
        code:
          type: string
        expire_at:
          type: string
        name:
          type: string
        nick:
          type: string
        url:
          type: string
        user:
          type: string
      type: object
    dto.UserEmailPayload:
      properties:
        email:
          type: string
      type: object
    dto.UserEmailType:
      enum:
      - git
      - contact
      type: string
      x-enum-varnames:
      - UserEmailForGit
      - UserEmailForContact
    dto.UserEmailWithCodePayload:
      properties:
        code:
          type: string
        email:
          type: string
      type: object
    dto.UserEmailWithTypePayload:
      properties:
        email:
          type: string
        type:
          $ref: '#/components/schemas/dto.UserEmailType'
      type: object
    dto.UserEmails:
      properties:
        contact_email:
          description: ContactEmail 用户通知邮箱
          type: string
        email:
          description: Email 用户git提交邮箱，是 emails 里面的某一个
          type: string
        emails:
          description: Emails 邮箱列表
          items:
            type: string
          type: array
        system_email:
          description: 系统默认邮箱
          type: string
        system_email_contact:
          description: 系统默认邮箱是否可以通知
          type: boolean
      type: object
    dto.UserFollowResult:
      example:
        freeze: true
        nickname: nickname
        is_following: true
        username: username
      properties:
        freeze:
          type: boolean
        is_following:
          description: 查询人是否follow了此用户
          type: boolean
        nickname:
          type: string
        username:
          type: string
      type: object
    dto.Users:
      example:
        freeze: true
        verified_expire_in: verified_expire_in
        nickname: nickname
        verified: 5
        created_at: created_at
        avatar: avatar
        id: id
        type: 1
        email: email
        username: username
      properties:
        avatar:
          type: string
        created_at:
          type: string
        email:
          type: string
        freeze:
          type: boolean
        id:
          type: string
        nickname:
          type: string
        type:
          $ref: '#/components/schemas/constant.UserType'
        username:
          type: string
        verified:
          description: 认证类型
          type: integer
        verified_expire_in:
          description: 认证过期时间
          type: string
      type: object
    dto.UsersIdentity:
      properties:
        phone:
          type: string
      type: object
    dto.UsersLangPayload:
      properties:
        language:
          type: string
      type: object
    dto.UsersResult:
      example:
        reward_amount: 4
        gender: 2
        group_count: 7
        bio: bio
        created_at: created_at
        type: 1
        follower_count: 5
        repo_count: 2
        freeze: true
        registry_count: 3
        stars_count: 1
        nickname: nickname
        mission_count: 9
        company: company
        id: id
        email: email
        reward_count: 7
        address: address
        verified_expire_in: verified_expire_in
        verified: 1
        wechat_mp: wechat_mp
        avatar: avatar
        follow_mission_count: 1
        follow_repo_count: 5
        site: site
        appreciate_status: 0
        follow_count: 6
        location: location
        is_following: true
        wechat_mp_qrcode: wechat_mp_qrcode
        username: username
      properties:
        address:
          type: string
        appreciate_status:
          description: 用户赞赏码状态，0-无赞赏码，1-有
          type: integer
        avatar:
          type: string
        bio:
          type: string
        company:
          type: string
        created_at:
          type: string
        email:
          type: string
        follow_count:
          type: integer
        follow_mission_count:
          type: integer
        follow_repo_count:
          type: integer
        follower_count:
          type: integer
        freeze:
          type: boolean
        gender:
          type: integer
        group_count:
          type: integer
        id:
          type: string
        is_following:
          description: 查询人是否follow了此用户
          type: boolean
        location:
          type: string
        mission_count:
          type: integer
        nickname:
          type: string
        registry_count:
          type: integer
        repo_count:
          type: integer
        reward_amount:
          type: integer
        reward_count:
          type: integer
        site:
          type: string
        stars_count:
          type: integer
        type:
          $ref: '#/components/schemas/constant.UserType'
        username:
          type: string
        verified:
          description: 认证类型
          type: integer
        verified_expire_in:
          description: 认证过期时间
          type: string
        wechat_mp:
          type: string
        wechat_mp_qrcode:
          type: string
      type: object
    dto.UsersResultForSelf:
      example:
        last_login_at: last_login_at
        next_updated_name_at: next_updated_name_at
        reward_amount: 7
        gender: 7
        group_count: 9
        bio: bio
        created_at: created_at
        language: language
        type: 1
        follower_count: 2
        repo_count: 4
        freeze: true
        registry_count: 2
        last_login_ip: last_login_ip
        stars_count: 1
        nickname: nickname
        mission_count: 3
        company: company
        id: id
        email: email
        reward_count: 1
        address: address
        editable: 6
        verified_expire_in: verified_expire_in
        verified: 6
        wechat_mp: wechat_mp
        avatar: avatar
        follow_mission_count: 5
        follow_repo_count: 5
        site: site
        appreciate_status: 0
        updated_name_at: updated_name_at
        follow_count: 1
        updated_nick_at: updated_nick_at
        location: location
        wechat_mp_qrcode: wechat_mp_qrcode
        username: username
      properties:
        address:
          type: string
        appreciate_status:
          description: 用户赞赏码状态，0-无赞赏码，1-有
          type: integer
        avatar:
          type: string
        bio:
          type: string
        company:
          type: string
        created_at:
          type: string
        editable:
          $ref: '#/components/schemas/constant.UserEditable'
        email:
          type: string
        follow_count:
          type: integer
        follow_mission_count:
          type: integer
        follow_repo_count:
          type: integer
        follower_count:
          type: integer
        freeze:
          type: boolean
        gender:
          type: integer
        group_count:
          type: integer
        id:
          type: string
        language:
          type: string
        last_login_at:
          type: string
        last_login_ip:
          type: string
        location:
          type: string
        mission_count:
          type: integer
        next_updated_name_at:
          type: string
        nickname:
          type: string
        registry_count:
          type: integer
        repo_count:
          type: integer
        reward_amount:
          type: integer
        reward_count:
          type: integer
        site:
          type: string
        stars_count:
          type: integer
        type:
          $ref: '#/components/schemas/constant.UserType'
        updated_name_at:
          type: string
        updated_nick_at:
          type: string
        username:
          type: string
        verified:
          description: 认证类型
          type: integer
        verified_expire_in:
          description: 认证过期时间
          type: string
        wechat_mp:
          type: string
        wechat_mp_qrcode:
          type: string
      type: object
    dto.UsersWithAccessLevelInSlug:
      example:
        email_verification: email_verification
        verified_expire_in: verified_expire_in
        verified: 1
        created_at: created_at
        avatar: avatar
        type: 6
        join_time: join_time
        access_level: 0
        freeze: true
        nickname: nickname
        inviter:
          freeze: true
          verified_expire_in: verified_expire_in
          nickname: nickname
          verified: 5
          created_at: created_at
          avatar: avatar
          id: id
          type: 1
          email: email
          username: username
        id: id
        email: email
        username: username
      properties:
        access_level:
          $ref: '#/components/schemas/constant.AccessRole'
        avatar:
          type: string
        created_at:
          type: string
        email:
          type: string
        email_verification:
          type: string
        freeze:
          type: boolean
        id:
          type: string
        inviter:
          $ref: '#/components/schemas/dto.Users'
        join_time:
          type: string
        nickname:
          type: string
        type:
          $ref: '#/components/schemas/constant.UserType'
        username:
          type: string
        verified:
          description: 认证类型
          type: integer
        verified_expire_in:
          description: 认证过期时间
          type: string
      type: object
    dto.VersionPolicy:
      enum:
      - all
      - snapshot
      - release
      type: string
      x-enum-varnames:
      - VersionPolicyAll
      - VersionPolicySnapshot
      - VersionPolicyRelease
    dto.VolumeUsed:
      additionalProperties:
        type: integer
      type: object
    dto.WorkspaceDeleteReq:
      properties:
        pipelineId:
          description: 创建环境的流水线 id
          type: string
      type: object
    dto.WorkspaceDeleteResult:
      example:
        code: 0
        message: message
      properties:
        code:
          description: 返回码，0 表示成功，1 表示失败
          type: integer
        message:
          description: 描述
          type: string
      type: object
    dto.WorkspaceDetailResult:
      example:
        cursor: cursor
        vscode: vscode
        webide: webide
      properties:
        cursor:
          description: Cursor 客户端 remote-ssh 访问 schema 地址
          type: string
        vscode:
          description: VSCode 客户端 remote-ssh 访问 schema 地址
          type: string
        webide:
          description: WebIDE 访问 url
          type: string
      type: object
    dto.WorkspaceInfo:
      example:
        file_count: 1
        latest_sha: latest_sha
        repo_url: repo_url
        restore_id: restore_id
        workspace: workspace
        create_time: create_time
        file_list: file_list
        ssh: true
        branch: branch
        duration: 6
        commit_count: 0
        remote_stash_count: 5
        pipeline_id: pipeline_id
        sn: sn
        slug: slug
        status: status
      properties:
        branch:
          description: 分支名，例如：main
          type: string
        commit_count:
          description: 备份的 commit 数
          type: integer
        create_time:
          description: 开发环境创建时间，例如：2024-12-02T03:20:22.000Z
          type: string
        duration:
          description: 开发环境持续时间，单位：ms（非实时更新）
          type: integer
        file_count:
          description: 备份的文件数
          type: integer
        file_list:
          description: 备份的文件列表，仅前五个备份文件相对路径
          type: string
        latest_sha:
          description: 环境销毁时远程最新的 commit short hash
          type: string
        pipeline_id:
          description: 创建环境的子流水线 id
          type: string
        remote_stash_count:
          description: 备份的 stash 数
          type: integer
        repo_url:
          description: 仓库地址
          type: string
        restore_id:
          description: 恢复备份代码的流水线 id，如果有值表示备份代码已被恢复（重建环境时会恢复备份代码）
          type: string
        slug:
          description: 仓库路径，例如：groupname/reponame
          type: string
        sn:
          description: 创建开发环境的流水线 sn
          type: string
        ssh:
          description: 开发环境是否支持 ssh 链接
          type: boolean
        status:
          description: "工作区状态，running: 开发环境已启动，closed：开发环境已关闭"
          type: string
        workspace:
          description: 开发环境默认工作区路径
          type: string
      type: object
    dto.WorkspaceListResult:
      example:
        total: 5
        hasMore: true
        pageInfo: "{}"
        list:
        - file_count: 1
          latest_sha: latest_sha
          repo_url: repo_url
          restore_id: restore_id
          workspace: workspace
          create_time: create_time
          file_list: file_list
          ssh: true
          branch: branch
          duration: 6
          commit_count: 0
          remote_stash_count: 5
          pipeline_id: pipeline_id
          sn: sn
          slug: slug
          status: status
        - file_count: 1
          latest_sha: latest_sha
          repo_url: repo_url
          restore_id: restore_id
          workspace: workspace
          create_time: create_time
          file_list: file_list
          ssh: true
          branch: branch
          duration: 6
          commit_count: 0
          remote_stash_count: 5
          pipeline_id: pipeline_id
          sn: sn
          slug: slug
          status: status
      properties:
        hasMore:
          description: "开发环境状态，running: 开发环境已启动，closed：开发环境已关闭"
          type: boolean
        list:
          description: 查询开始时间，格式：YYYY-MM-DD HH:mm:ssZZ，例如：2024-12-01 00:00:00+0800
          items:
            $ref: '#/components/schemas/dto.WorkspaceInfo'
          type: array
        pageInfo:
          allOf:
          - $ref: '#/components/schemas/dto.WorkspacePageInfo'
          description: 查询结束时间，格式：YYYY-MM-DD HH:mm:ssZZ，例如：2024-12-01 00:00:00+0800
          type: object
        total:
          description: 分支名，例如：main
          type: integer
      type: object
    dto.WorkspacePageInfo:
      properties:
        page:
          type: integer
        pageSize:
          type: integer
      type: object
    dto.WxJsSdkSign:
      properties:
        appid:
          type: string
        noncestr:
          type: string
        sign:
          description: 签名结果
          type: string
        timestamp:
          type: integer
      type: object
    dto.storage:
      properties:
        storage:
          description: "example: { \"hard\": { \"storage\": -1}},移除 omitempty ，Storage\
            \ = 0，会生成 {\"hard\":{\"storage\":0}}"
          type: integer
      type: object
    git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_api.UserInfo:
      example:
        freeze: true
        nickname: nickname
        username: username
      properties:
        freeze:
          type: boolean
        nickname:
          type: string
        username:
          type: string
      type: object
    git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.UserInfo:
      properties:
        freeze:
          type: boolean
        nickname:
          type: string
        username:
          type: string
      type: object
    git_woa_com_cnb_monorepo_git_internal_app_vcs_service_bff_api.UserInfo:
      example:
        nickname: nickname
        username: username
      properties:
        nickname:
          type: string
        username:
          type: string
      type: object
    git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo:
      properties:
        freeze:
          type: boolean
        nickname:
          type: string
        username:
          type: string
      type: object
    git_woa_com_cnb_monorepo_mission_mission-resource_dto_web.UserInfo:
      properties:
        nickname:
          type: string
        username:
          type: string
      type: object
    handler.CreateIssueCommentForm:
      properties:
        body:
          type: string
      type: object
    handler.CreateIssueForm:
      properties:
        assignees:
          items:
            type: string
          type: array
        body:
          type: string
        labels:
          items:
            type: string
          type: array
        priority:
          description: "p0, p1, p2, p3, \"\"。 single choice。"
          type: string
        title:
          type: string
      type: object
    handler.CreateLabelForm:
      properties:
        color:
          type: string
        description:
          type: string
        name:
          type: string
      type: object
    handler.GitIgnoreTemplate:
      properties:
        name:
          type: string
        source:
          type: string
      type: object
    handler.IssueNumber:
      properties:
        number:
          type: string
      type: object
    handler.LabelID:
      properties:
        id:
          type: string
      type: object
    handler.License:
      properties:
        body:
          type: string
        conditions:
          items:
            type: string
          type: array
        description:
          type: string
        key:
          type: string
        limitations:
          items:
            type: string
          type: array
        name:
          type: string
        permissions:
          items:
            type: string
          type: array
        spdx_id:
          type: string
      type: object
    handler.LicenseListItem:
      properties:
        key:
          type: string
        name:
          type: string
        spdx_id:
          type: string
      type: object
    handler.LogoutRes:
      properties:
        url:
          type: string
      type: object
    handler.MissionFilter:
      properties:
        field:
          description: 属性名
          type: string
        operator:
          description: 筛选符
          type: string
        value:
          description: 属性值
          items:
            type: string
          type: array
      type: object
    handler.MissionFilterFrom:
      properties:
        selectors:
          items:
            $ref: '#/components/schemas/handler.MissionFilter'
          type: array
      type: object
    handler.UpdateIssueForm:
      properties:
        body:
          type: string
        end_date:
          type: string
        priority:
          description: "p0, p1, p2, p3, \"\"。 single choice。"
          type: string
        start_date:
          type: string
        state:
          description: open or closed
          type: string
        state_reason:
          description: "completed, not_planned, reopened"
          type: string
        title:
          type: string
      type: object
    handler.UpdateItemField:
      properties:
        id:
          type: string
        value:
          items:
            type: string
          type: array
      type: object
    handler.UpdateItemFieldInBatchForm:
      properties:
        field:
          type: string
        type:
          type: string
        updated_item_fields:
          items:
            $ref: '#/components/schemas/handler.UpdateItemField'
          type: array
      type: object
    handler.UpdateLabelForm:
      properties:
        color:
          type: string
        description:
          type: string
        new_name:
          type: string
      type: object
    http.UpdateUserInfoPayload:
      properties:
        address:
          type: string
        bio:
          type: string
        company:
          type: string
        location:
          type: string
        name:
          type: string
        nickname:
          type: string
        site:
          type: string
        wechat_mp:
          type: string
        wechat_mp_qrcode:
          type: string
      type: object
    identity.MpPhoneReq:
      properties:
        code:
          type: string
      type: object
    identity.State:
      properties:
        nickName:
          type: string
        ok:
          type: boolean
      type: object
    identity.Ticket:
      properties:
        state:
          type: string
      type: object
    label.Option:
      properties:
        color:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    map_constant.SlugType_int64:
      additionalProperties:
        type: integer
      type: object
    openapi.CommitAssetUploadURL:
      example:
        expires_in_sec: 0
        upload_url: upload_url
        verify_url: verify_url
      properties:
        expires_in_sec:
          type: integer
        upload_url:
          type: string
        verify_url:
          type: string
      type: object
    openapi.CreateBranchForm:
      properties:
        name:
          type: string
        start_point:
          type: string
      type: object
    openapi.HeadRef:
      example:
        protected: true
        name: name
      properties:
        name:
          type: string
        protected:
          type: boolean
      type: object
    openapi.PatchReleaseForm:
      properties:
        body:
          type: string
        draft:
          type: boolean
        make_latest:
          type: string
        name:
          type: string
        prerelease:
          type: boolean
      type: object
    openapi.PostCommitAssetUploadURLForm:
      properties:
        asset_name:
          type: string
      type: object
    openapi.PostReleaseAssetUploadURLForm:
      properties:
        asset_name:
          type: string
        overwrite:
          type: boolean
      type: object
    openapi.PostReleaseForm:
      properties:
        body:
          type: string
        draft:
          type: boolean
        make_latest:
          type: string
        name:
          type: string
        prerelease:
          type: boolean
        tag_name:
          type: string
        target_commitish:
          type: string
      type: object
    openapi.PutCommitAnnotation:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    openapi.PutCommitAnnotationsForm:
      properties:
        annotations:
          items:
            $ref: '#/components/schemas/openapi.PutCommitAnnotation'
          type: array
      type: object
    openapi.PutTagAnnotation:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    openapi.PutTagAnnotationsForm:
      properties:
        annotations:
          items:
            $ref: '#/components/schemas/openapi.PutTagAnnotation'
          type: array
      type: object
    openapi.ReleaseAssetUploadURL:
      example:
        expires_in_sec: 0
        upload_url: upload_url
        verify_url: verify_url
      properties:
        expires_in_sec:
          type: integer
        upload_url:
          type: string
        verify_url:
          type: string
      type: object
    organization.SettingValue:
      enum:
      - 1
      - 2
      - 4
      - 8
      - 16
      type: integer
      x-enum-varnames:
      - DisableOrganizationReadme
      - CloudNativeDevOnly
      - UseRootGroupBranchProtectionOnly
      - ForbidRedefineBranchProtection
      - EnableTAPDAccess
    organizations.DomainsVerificationResponse:
      properties:
        domains:
          items:
            type: string
          type: array
        domains_by:
          items:
            type: string
          type: array
        message:
          type: string
        result:
          type: boolean
        txt_match:
          type: boolean
        txt_value:
          type: string
        valid:
          type: boolean
      type: object
    scope.AccessTokenConfig:
      properties:
        config:
          items:
            $ref: '#/components/schemas/scope.GroupItem'
          type: array
        scene:
          items:
            $ref: '#/components/schemas/scope.Scene'
          type: array
      type: object
    scope.GroupItem:
      properties:
        codes:
          items:
            $ref: '#/components/schemas/scope.RawItem'
          type: array
        group:
          type: string
      type: object
    scope.RawItem:
      properties:
        code:
          type: string
        text:
          type: string
        values:
          items:
            type: string
          type: array
      type: object
    scope.Scene:
      properties:
        description:
          type: string
        id:
          type: string
        title:
          type: string
        values:
          items:
            type: string
          type: array
      type: object
    v1.Descriptor:
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Annotations contains arbitrary metadata relating to the targeted
            content.
          type: object
        artifactType:
          description: ArtifactType is the IANA media type of this artifact.
          type: string
        data:
          description: |-
            Data is an embedding of the targeted content. This is encoded as a base64
            string when marshalled to JSON (automatically, by encoding/json). If
            present, Data can be used directly to avoid fetching the targeted content.
          items:
            type: integer
          type: array
        digest:
          description: Digest is the digest of the targeted content.
          type: string
        mediaType:
          description: MediaType is the media type of the object this schema refers
            to.
          type: string
        platform:
          allOf:
          - $ref: '#/components/schemas/v1.Platform'
          description: |-
            Platform describes the platform which the image in the manifest runs on.

            This should only be used when referring to a manifest.
          type: object
        size:
          description: Size specifies the size in bytes of the blob.
          type: integer
        urls:
          description: URLs specifies a list of URLs from which this object MAY be
            downloaded
          items:
            type: string
          type: array
      type: object
    v1.Platform:
      properties:
        architecture:
          description: |-
            Architecture field specifies the CPU architecture, for example
            `amd64` or `ppc64le`.
          type: string
        os:
          description: "OS specifies the operating system, for example `linux` or\
            \ `windows`."
          type: string
        os.features:
          description: |-
            OSFeatures is an optional field specifying an array of strings,
            each listing a required OS feature (for example on Windows `win32k`).
          items:
            type: string
          type: array
        os.version:
          description: |-
            OSVersion is an optional field specifying the operating system
            version, for example on Windows `10.0.14393.1066`.
          type: string
        variant:
          description: |-
            Variant is an optional field specifying a variant of the CPU, for
            example `v7` to specify ARMv7 when architecture is `arm`.
          type: string
      type: object
    web.AddGPGKeyForm:
      properties:
        armoredPublicKey:
          description: A GPG public key in ASCII-armored format.
          type: string
        name:
          description: A descriptive name for the new key.
          type: string
      type: object
    web.Author:
      properties:
        email:
          type: string
        user_name:
          type: string
      type: object
    web.BlameRange:
      properties:
        age:
          type: integer
        commit:
          $ref: '#/components/schemas/web.Commit'
        ending_line:
          type: integer
        starting_line:
          type: integer
      type: object
    web.Blames:
      properties:
        file_size:
          type: integer
        file_size_exceeded:
          type: boolean
        file_size_limit:
          type: integer
        ranges:
          items:
            $ref: '#/components/schemas/web.BlameRange'
          type: array
      type: object
    web.Branch:
      properties:
        commit:
          $ref: '#/components/schemas/web.Commit'
        is_protected:
          type: boolean
        name:
          type: string
      type: object
    web.BranchListItem:
      properties:
        ahead:
          type: integer
        associated_pull_request:
          $ref: '#/components/schemas/web.BranchPullRequest'
        behind:
          type: integer
        commit:
          $ref: '#/components/schemas/web.Commit'
        dev_meta:
          items:
            type: integer
          type: array
        is_head:
          type: boolean
        is_protected:
          type: boolean
        name:
          type: string
      type: object
    web.BranchProtection:
      properties:
        allow_creation:
          type: boolean
        allow_deletions:
          type: boolean
        allow_force_pushes:
          type: boolean
        allow_master_creation:
          type: boolean
        allow_master_deletions:
          type: boolean
        allow_master_force_pushes:
          type: boolean
        allow_master_pushes:
          type: boolean
        allow_pushes:
          type: boolean
        id:
          type: string
        match_count:
          type: integer
        required_approved_review_count:
          type: integer
        required_approved_review_ratio:
          type: integer
        required_commit_signatures:
          type: boolean
        required_linear_history:
          type: boolean
        required_master_approve:
          type: boolean
        required_must_auto_merge:
          type: boolean
        required_must_push_via_pull_request:
          type: boolean
        required_pull_request_reviews:
          type: boolean
        required_status_checks:
          type: boolean
        rule:
          type: string
      type: object
    web.BranchPullRequest:
      properties:
        is_merged:
          type: boolean
        mergeable_state:
          type: string
        number:
          type: string
        state:
          type: string
      type: object
    web.CSDetail:
      properties:
        display_name:
          type: string
        field:
          type: string
        value:
          type: string
      type: object
    web.CodeSensitiveDetail:
      properties:
        created_at:
          description: 问题创建时间
          type: string
        file_name:
          description: 包含问题的文件名
          type: string
        file_path:
          description: 包含问题的文件路径
          type: string
        handler:
          allOf:
          - $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
          description: 忽略人(平台信息)
          type: object
        id:
          description: 问题id
          type: string
        ignore_reason:
          description: 忽略原因
          type: string
        ignored_at:
          description: 忽略时间
          type: string
        issue_detail:
          description: 问题详情
          items:
            $ref: '#/components/schemas/web.CSDetail'
          type: array
        issue_sub_type:
          description: 问题子类型
          type: string
        issue_type:
          description: 问题类型
          type: string
        line_no:
          description: 问题行号
          items:
            type: integer
          type: array
        occur_version:
          description: 问题发生版本
          type: string
        owner:
          allOf:
          - $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
          description: 问题责任人(平台信息)
          type: object
        raw_author:
          allOf:
          - $ref: '#/components/schemas/web.RawAuthor'
          description: 问题责任人原生git信息
          type: object
        reopen_at:
          description: 重新开启时间
          type: string
        reopen_handler:
          allOf:
          - $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
          description: 重新开启人
          type: object
        revision:
          description: 问题所在版本
          type: string
        risk_level:
          description: 问题等级
          type: string
        state:
          description: 问题状态 开启/忽略
          type: string
        tool:
          description: 扫描工具
          type: string
      type: object
    web.CodeSensitiveInfo:
      properties:
        created_at:
          description: 问题创建时间
          type: string
        file_name:
          description: 包含问题的文件名
          type: string
        file_path:
          description: 包含问题的文件路径
          type: string
        id:
          description: 问题id
          type: string
        issue_type:
          description: 问题类型
          type: string
        occur_version:
          description: 问题发生版本
          type: string
        owner:
          allOf:
          - $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
          description: 问题责任人(平台信息)
          type: object
        raw_author:
          allOf:
          - $ref: '#/components/schemas/web.RawAuthor'
          description: 问题责任人原生git信息
          type: object
        repo_id:
          description: 仓库id
          type: string
        revision:
          description: 问题所在版本
          type: string
        risk_level:
          description: 问题等级
          type: string
        state:
          description: 问题状态 开启/忽略
          type: string
        tool:
          description: 扫描工具
          type: string
      type: object
    web.CodeSensitiveSummary:
      properties:
        ignored:
          description: 忽略问题数量
          type: integer
        open:
          description: 开启中问题数量
          type: integer
      type: object
    web.Commit:
      properties:
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.UserInfo'
        commit:
          $ref: '#/components/schemas/web.CommitObject'
        commit_statuses:
          $ref: '#/components/schemas/web.CommitStatuses'
        committer:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.UserInfo'
        files:
          $ref: '#/components/schemas/web.CommitFiles'
        parents:
          items:
            $ref: '#/components/schemas/web.CommitParent'
          type: array
        sha:
          type: string
      type: object
    web.CommitAnnotation:
      example:
        meta:
          key: "{}"
        value: value
        key: key
      properties:
        key:
          type: string
        meta:
          additionalProperties:
            type: object
          type: object
        value:
          type: string
      type: object
    web.CommitAnnotationInBatch:
      example:
        annotations:
        - meta:
            key: "{}"
          value: value
          key: key
        - meta:
            key: "{}"
          value: value
          key: key
        commit_hash: commit_hash
      properties:
        annotations:
          items:
            $ref: '#/components/schemas/web.CommitAnnotation'
          type: array
        commit_hash:
          type: string
      type: object
    web.CommitAsset:
      properties:
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
        content_type:
          type: string
        created_at:
          type: string
        id:
          type: string
        name:
          type: string
        path:
          type: string
        size_in_byte:
          type: integer
        updated_at:
          type: string
      type: object
    web.CommitFiles:
      properties:
        base_commit:
          type: string
        diff:
          $ref: '#/components/schemas/web.Diff'
        head_commit:
          type: string
        straight:
          type: boolean
      type: object
    web.CommitObject:
      properties:
        author:
          $ref: '#/components/schemas/web.Signature'
        comment_count:
          type: integer
        committer:
          $ref: '#/components/schemas/web.Signature'
        message:
          type: string
        tree:
          $ref: '#/components/schemas/web.CommitObjectTree'
        verification:
          $ref: '#/components/schemas/web.CommitObjectVerification'
      type: object
    web.CommitObjectTree:
      properties:
        sha:
          type: string
      type: object
    web.CommitObjectVerification:
      properties:
        payload:
          type: string
        reason:
          type: string
        signature:
          type: string
        verified:
          type: boolean
      type: object
    web.CommitParent:
      properties:
        sha:
          type: string
      type: object
    web.CommitStatus:
      properties:
        context:
          type: string
        created_at:
          type: string
        description:
          type: string
        state:
          type: string
        target_url:
          type: string
        updated_at:
          type: string
      type: object
    web.CommitStatuses:
      properties:
        sha:
          type: string
        state:
          type: string
        statuses:
          items:
            $ref: '#/components/schemas/web.CommitStatus'
          type: array
      type: object
    web.ComparedCommits:
      properties:
        base_commit:
          type: string
        commit_count:
          type: integer
        commits:
          items:
            $ref: '#/components/schemas/web.Commit'
          type: array
        head_commit:
          type: string
        merge_base_commit:
          type: string
        straight:
          type: boolean
      type: object
    web.ComparedFiles:
      properties:
        base_commit:
          type: string
        diff:
          $ref: '#/components/schemas/web.Diff'
        head_commit:
          type: string
        merge_base_commit:
          type: string
        straight:
          type: boolean
      type: object
    web.ComparedOverview:
      properties:
        base_commit:
          type: string
        commit_count:
          type: integer
        file_count:
          type: integer
        head_commit:
          type: string
        merge_base_commit:
          type: string
        straight:
          type: boolean
      type: object
    web.ComparedRawDiff:
      properties:
        base_commit:
          type: string
        diff:
          type: string
        head_commit:
          type: string
        merge_base_commit:
          type: string
        straight:
          type: boolean
      type: object
    web.ContributorTrend:
      properties:
        author:
          allOf:
          - $ref: '#/components/schemas/web.Author'
          description: 贡献者信息
          type: object
        commit_count:
          description: 贡献者的总提交数
          type: integer
        weeks:
          description: 贡献者以周为单位的提交趋势数据
          items:
            $ref: '#/components/schemas/web.Week'
          type: array
      type: object
    web.CustomerField:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      type: object
    web.Diff:
      properties:
        base_commit:
          type: string
        file_exceeded:
          type: boolean
        file_limit:
          type: integer
        files:
          items:
            $ref: '#/components/schemas/web.DiffFile'
          type: array
        head_commit:
          type: string
        stat:
          $ref: '#/components/schemas/web.DiffStat'
      type: object
    web.DiffEntry:
      properties:
        change_type:
          type: string
        deletions:
          type: integer
        file_index:
          type: integer
        insertions:
          type: integer
        is_bin:
          type: boolean
        old_path:
          type: string
        path:
          type: string
      type: object
    web.DiffFile:
      properties:
        change_type:
          type: string
        deletions:
          type: integer
        file_index:
          type: integer
        insertions:
          type: integer
        is_bin:
          type: boolean
        old_path:
          type: string
        path:
          type: string
        sections:
          items:
            $ref: '#/components/schemas/web.DiffSection'
          type: array
      type: object
    web.DiffLine:
      properties:
        content:
          type: string
        left_line_number:
          type: integer
        prefix:
          type: string
        right_line_number:
          type: integer
        type:
          type: string
      type: object
    web.DiffSection:
      properties:
        lines:
          items:
            $ref: '#/components/schemas/web.DiffLine'
          type: array
      type: object
    web.DiffStat:
      properties:
        deletions:
          type: integer
        entry_exceeded:
          type: boolean
        entry_limit:
          type: integer
        insertions:
          type: integer
        paths:
          items:
            $ref: '#/components/schemas/web.DiffEntry'
          type: array
      type: object
    web.Entry:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/web.SubEntry'
          type: array
        name:
          type: string
        path:
          type: string
        type:
          type: string
      type: object
    web.ExpandBlob:
      properties:
        lines:
          items:
            type: string
          type: array
      type: object
    web.FieldInfo:
      properties:
        priority:
          $ref: '#/components/schemas/web.FieldInfoPriority'
        status:
          $ref: '#/components/schemas/web.FieldInfoStatus'
      type: object
    web.FieldInfoPriority:
      properties:
        color_options:
          items:
            $ref: '#/components/schemas/web.FieldInfoPriorityColorOption'
          type: array
        html_type:
          type: string
        label:
          type: string
        name:
          type: string
      type: object
    web.FieldInfoPriorityColorOption:
      properties:
        color:
          type: string
        label:
          type: string
        value:
          type: string
      type: object
    web.FieldInfoStatus:
      properties:
        html_type:
          type: string
        label:
          type: string
        name:
          type: string
        options:
          additionalProperties:
            type: string
          type: object
      type: object
    web.FieldInfos:
      properties:
        bug:
          $ref: '#/components/schemas/web.FieldInfo'
        stories:
          $ref: '#/components/schemas/web.FieldInfo'
        task:
          $ref: '#/components/schemas/web.FieldInfo'
      type: object
    web.FileContent:
      properties:
        branch_count:
          type: integer
        cnb_settings:
          $ref: '#/components/schemas/web.PreloadFile'
        commit_count:
          type: integer
        commit_count_exceeded:
          type: boolean
        content:
          type: string
        encoding:
          type: string
        file_size_exceeded:
          type: boolean
        file_size_limit:
          type: integer
        file_stat:
          $ref: '#/components/schemas/web.FileStat'
        initialized:
          type: boolean
        is_lfs:
          type: boolean
        is_protected:
          description: 如果当前访问的是分支，那么表示是否是保护分支
          type: boolean
        last_commit:
          $ref: '#/components/schemas/web.Commit'
        lfs_hash_algorithm:
          type: string
        lfs_oid:
          type: string
        lfs_size_in_byte:
          type: string
        name:
          type: string
        path:
          type: string
        repository:
          $ref: '#/components/schemas/web.Repository'
        size:
          type: integer
        tag_count:
          type: integer
        type:
          type: string
      type: object
    web.FileStat:
      properties:
        mime_type:
          $ref: '#/components/schemas/web.MIMEType'
      type: object
    web.ForkSyncStatus:
      properties:
        ahead:
          type: integer
        behind:
          type: integer
        upstream_ref:
          type: string
        upstream_slug:
          type: string
      type: object
    web.GPGEmail:
      properties:
        email:
          description: 邮箱
          type: string
        verified:
          description: 是否已验证
          type: boolean
      type: object
    web.GPGPublicKey:
      properties:
        created_at:
          type: string
        emails:
          items:
            $ref: '#/components/schemas/web.GPGEmail'
          type: array
        expired_at:
          description: 过期时间
          type: string
        fingerprint:
          description: 公钥指纹
          type: string
        id:
          type: string
        key_creation_time:
          description: 密钥创建时间
          type: string
        key_id:
          description: 公钥 ID
          type: string
        name:
          description: 标题
          type: string
        public_key:
          type: string
        subkeys:
          description: 子密钥指纹，当为 primary key 时与 primary_fingerprint 相同
          items:
            $ref: '#/components/schemas/web.GPGSubkey'
          type: array
        user_id:
          type: string
      type: object
    web.GPGSubkey:
      properties:
        created_at:
          description: 子密钥系统创建时间（添加到系统时间）
          type: string
        expired_at:
          description: 子密钥过期时间
          type: string
        fingerprint:
          description: 子密钥指纹
          type: string
        id:
          type: string
        key_creation_time:
          description: 子密钥创建时间
          type: string
        key_id:
          description: 子密钥 KeyID
          type: string
        primary_key_id:
          description: 主密钥 KeyID
          type: string
      type: object
    web.GetCommitAnnotationsInBatchForm:
      properties:
        commit_hashes:
          items:
            type: string
          type: array
        keys:
          items:
            type: string
          type: array
      type: object
    web.GitHead:
      properties:
        branch:
          type: string
      type: object
    web.GitSize:
      properties:
        lfs_limit_in_kib:
          type: string
        lfs_used_in_kib:
          type: string
        limit_in_kib:
          type: string
        logical_lfs_used_in_kib:
          type: string
        physical_lfs_used_in_kib:
          type: string
        used_in_kib:
          type: string
      type: object
    web.Issue:
      properties:
        assignees:
          items:
            $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
          type: array
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
        comment_count:
          type: integer
        created_at:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/label.Option'
          type: array
        last_acted_at:
          type: string
        number:
          type: string
        priority:
          type: string
        state:
          type: string
        state_reason:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    web.IssueActivity:
      properties:
        actor:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
        actor_access_role:
          type: string
        actor_meta:
          items:
            type: integer
          type: array
        created_at:
          type: string
        payload:
          type: object
        type:
          type: string
      type: object
    web.IssueAssignee:
      properties:
        user:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
      type: object
    web.IssueComment:
      properties:
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
        author_meta:
          items:
            type: integer
          type: array
        body:
          type: string
        comment_id:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
      type: object
    web.IssueDetail:
      properties:
        assignees:
          items:
            $ref: '#/components/schemas/web.IssueAssignee'
          type: array
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
        body:
          type: string
        comment_count:
          type: integer
        created_at:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/label.Option'
          type: array
        last_acted_at:
          type: string
        number:
          type: string
        participants:
          items:
            $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
          type: array
        priority:
          type: string
        state:
          type: string
        state_reason:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    web.IssueResource:
      properties:
        assignees:
          items:
            $ref: '#/components/schemas/git_woa_com_cnb_monorepo_mission_mission-resource_dto_web.UserInfo'
          type: array
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_mission_mission-resource_dto_web.UserInfo'
        comment_count:
          type: integer
        created_at:
          type: string
        customer_fields:
          items:
            $ref: '#/components/schemas/web.CustomerField'
          type: array
        ended_at:
          type: string
        id:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/web.LabelOption'
          type: array
        number:
          type: string
        priority:
          type: string
        repo_slug:
          type: string
        started_at:
          type: string
        state:
          type: string
        state_reason:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    web.IssueSummary:
      properties:
        closed_issue_number:
          type: integer
        closed_pull_request_number:
          type: integer
        open_issue_number:
          type: integer
        open_pull_request_number:
          type: integer
      type: object
    web.IssueTemplate:
      properties:
        content:
          type: string
        encoding:
          type: string
        name:
          type: string
        path:
          type: string
      type: object
    web.IssueTemplates:
      properties:
        templates:
          items:
            $ref: '#/components/schemas/web.IssueTemplate'
          type: array
      type: object
    web.LFSFile:
      properties:
        sha:
          type: string
        size:
          type: string
      type: object
    web.LabelOption:
      properties:
        color:
          type: string
        created_at:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        repo_id:
          type: integer
        slug:
          type: string
        updated_at:
          type: string
      type: object
    web.LabelWithCount:
      properties:
        color:
          type: string
        created_at:
          type: string
        description:
          type: string
        id:
          type: string
        issue_count:
          type: integer
        name:
          type: string
        pull_request_count:
          type: integer
        updated_at:
          type: string
      type: object
    web.LastPushBranch:
      properties:
        date_time:
          type: string
        is_head:
          type: boolean
        pull_number:
          type: integer
        ref:
          type: string
      type: object
    web.MIMEType:
      properties:
        content_type:
          type: string
        externsion:
          type: string
        is_audio:
          type: boolean
        is_browsable_binary_type:
          type: boolean
        is_image:
          type: boolean
        is_pdf:
          type: boolean
        is_representable_as_text:
          type: boolean
        is_svg_image:
          type: boolean
        is_text:
          type: boolean
        is_video:
          type: boolean
      type: object
    web.MergeState:
      properties:
        conflicts:
          items:
            type: string
          type: array
        state:
          type: string
      type: object
    web.Meta:
      properties:
        gen_branch:
          type: string
        gen_hash:
          type: string
        updated_at:
          type: string
      type: object
    web.MissionField:
      properties:
        interaction_type:
          $ref: '#/components/schemas/dto.InteractionType'
        name:
          type: string
        value:
          items:
            type: object
          type: array
      type: object
    web.MissionResources:
      properties:
        issues:
          items:
            $ref: '#/components/schemas/web.IssueResource'
          type: array
        pull_requests:
          items:
            $ref: '#/components/schemas/web.PullRequestResource'
          type: array
      type: object
    web.OverviewBranches:
      properties:
        active_branches:
          items:
            $ref: '#/components/schemas/web.BranchListItem'
          type: array
        default_branch:
          $ref: '#/components/schemas/web.BranchListItem'
        has_more_active_branch:
          type: boolean
        has_more_stale_branch:
          type: boolean
        has_more_yours_branch:
          type: boolean
        initialized:
          type: boolean
        stale_branches:
          items:
            $ref: '#/components/schemas/web.BranchListItem'
          type: array
        yours_branches:
          items:
            $ref: '#/components/schemas/web.BranchListItem'
          type: array
      type: object
    web.Permission:
      properties:
        allow_push_git_tag:
          type: boolean
      type: object
    web.PipelineSettings:
      properties:
        auto_trigger:
          type: boolean
        forked_repo_auto_trigger:
          type: boolean
      type: object
    web.PostCommitAssetForm:
      properties:
        content_type:
          type: string
        name:
          type: string
        path:
          type: string
        size_in_byte:
          type: integer
        token:
          type: string
      type: object
    web.PreloadFile:
      properties:
        content:
          type: string
        encoding:
          type: string
        file_stat:
          $ref: '#/components/schemas/web.FileStat'
        name:
          type: string
      type: object
    web.PullRawDiff:
      properties:
        base_commit:
          type: string
        diff:
          type: string
        head_commit:
          type: string
        merge_base_commit:
          type: string
      type: object
    web.PullRequest:
      properties:
        assignees:
          items:
            $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
          type: array
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
        base_repo_ref:
          type: string
        blocked_on:
          type: string
        comment_count:
          type: integer
        commit_count:
          type: integer
        commit_statuses:
          $ref: '#/components/schemas/web.CommitStatuses'
        created_at:
          type: string
        file_count:
          type: integer
        head_repo_ref:
          type: string
        head_repo_slug:
          type: string
        is_merged:
          type: boolean
        is_ready_for_merge:
          type: boolean
        labels:
          items:
            $ref: '#/components/schemas/label.Option'
          type: array
        last_acted_at:
          type: string
        merge_style:
          type: string
        mergeable_state:
          type: string
        number:
          type: string
        review_comment_count:
          type: integer
        review_count:
          type: integer
        reviewers:
          items:
            $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
          type: array
        state:
          type: string
        status_check_commit_sha:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    web.PullRequestActivity:
      properties:
        actor:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
        actor_access_role:
          type: string
        actor_meta:
          items:
            type: integer
          type: array
        created_at:
          type: string
        payload:
          type: object
        type:
          type: string
      type: object
    web.PullRequestAssignee:
      properties:
        user:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
      type: object
    web.PullRequestBranchProtection:
      properties:
        allow_deletions:
          type: boolean
        allow_force_pushes:
          type: boolean
        allow_master_deletions:
          type: boolean
        allow_master_force_pushes:
          type: boolean
        dismiss_stale_review:
          type: boolean
        required_approved_review_count:
          type: integer
        required_approved_review_ratio:
          type: integer
        required_commit_signatures:
          type: boolean
        required_conversation_resolution:
          type: boolean
        required_linear_history:
          type: boolean
        required_master_approve:
          type: boolean
        required_must_auto_merge:
          type: boolean
        required_must_push_via_pull_request:
          type: boolean
        required_pull_request_reviews:
          type: boolean
        required_status_checks:
          type: boolean
        rule:
          type: string
      type: object
    web.PullRequestDetail:
      properties:
        allow_merge_styles:
          items:
            type: string
          type: array
        assignees:
          items:
            $ref: '#/components/schemas/web.PullRequestAssignee'
          type: array
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
        base:
          $ref: '#/components/schemas/web.PullRequestRepository'
        base_repo_ref:
          type: string
        blocked_on:
          type: string
        body:
          type: string
        can_do_merge:
          type: boolean
        comment_count:
          type: integer
        commit_count:
          type: integer
        commit_statuses:
          $ref: '#/components/schemas/web.CommitStatuses'
        conflict_file_count:
          type: integer
        conflict_files:
          items:
            type: string
          type: array
        created_at:
          type: string
        file_count:
          type: integer
        head:
          $ref: '#/components/schemas/web.PullRequestRepository'
        head_repo_ref:
          type: string
        head_repo_slug:
          type: string
        is_merged:
          type: boolean
        is_ready_for_merge:
          type: boolean
        labels:
          items:
            $ref: '#/components/schemas/label.Option'
          type: array
        last_acted_at:
          type: string
        merge_style:
          type: string
        mergeable_state:
          type: string
        number:
          type: string
        participants:
          items:
            $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
          type: array
        review_comment_count:
          type: integer
        review_count:
          type: integer
        reviewers:
          items:
            $ref: '#/components/schemas/web.PullRequestReviewer'
          type: array
        reviews:
          $ref: '#/components/schemas/web.PullRequestReviews'
        settings:
          $ref: '#/components/schemas/web.PullRequestSetting'
        state:
          type: string
        status_check_commit_sha:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    web.PullRequestFileComments:
      properties:
        comments:
          items:
            $ref: '#/components/schemas/web.PullRequestReviewComment'
          type: array
        path:
          type: string
        total_comment:
          type: integer
      type: object
    web.PullRequestFiles:
      properties:
        base_commit:
          type: string
        diff:
          $ref: '#/components/schemas/web.Diff'
        file_comments:
          items:
            $ref: '#/components/schemas/web.PullRequestFileComments'
          type: array
        head_commit:
          type: string
        merge_base_commit:
          type: string
      type: object
    web.PullRequestRepository:
      properties:
        access_role:
          type: integer
        ref:
          type: string
        slug:
          type: string
        usage:
          $ref: '#/components/schemas/web.RepositoryUsage'
      type: object
    web.PullRequestResource:
      properties:
        assignees:
          items:
            $ref: '#/components/schemas/git_woa_com_cnb_monorepo_mission_mission-resource_dto_web.UserInfo'
          type: array
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_mission_mission-resource_dto_web.UserInfo'
        base_repo_ref:
          type: string
        blocked_on:
          type: string
        comment_count:
          type: integer
        commit_count:
          type: integer
        created_at:
          type: string
        customer_fields:
          items:
            $ref: '#/components/schemas/web.CustomerField'
          type: array
        file_count:
          type: integer
        head_repo_ref:
          type: string
        id:
          type: string
        is_merged:
          type: boolean
        is_ready_for_merge:
          type: boolean
        labels:
          items:
            $ref: '#/components/schemas/web.LabelOption'
          type: array
        last_acted_at:
          type: string
        merge_style:
          type: string
        mergeable_state:
          type: string
        number:
          type: string
        repo_slug:
          type: string
        reviewers:
          items:
            $ref: '#/components/schemas/web.PullRequestResourceReviewer'
          type: array
        state:
          type: string
        status_check_commit_sha:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    web.PullRequestResourceReviewer:
      properties:
        nickname:
          type: string
        review_state:
          type: string
        username:
          type: string
      type: object
    web.PullRequestReviewComment:
      properties:
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
        author_meta:
          items:
            type: integer
          type: array
        body:
          type: string
        comment_id:
          type: string
        commit_hash:
          type: string
        created_at:
          type: string
        diff_hunk:
          items:
            $ref: '#/components/schemas/web.DiffLine'
          type: array
        end_line:
          type: integer
        end_side:
          type: string
        path:
          type: string
        replies:
          items:
            $ref: '#/components/schemas/web.PullRequestReviewCommentReply'
          type: array
        reply_to_comment_id:
          type: string
        review_id:
          type: string
        start_line:
          type: integer
        start_side:
          type: string
        subject_type:
          type: string
        updated_at:
          type: string
      type: object
    web.PullRequestReviewCommentReply:
      properties:
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
        body:
          type: string
        comment_id:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
      type: object
    web.PullRequestReviewer:
      properties:
        review_state:
          type: string
        user:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
      type: object
    web.PullRequestReviews:
      properties:
        approved_ratio:
          type: integer
        master_reviewers:
          items:
            $ref: '#/components/schemas/web.PullRequestReviewer'
          type: array
        reviewers:
          items:
            $ref: '#/components/schemas/web.PullRequestReviewer'
          type: array
        state:
          type: string
      type: object
    web.PullRequestSetting:
      properties:
        allow_merge_styles:
          items:
            type: string
          type: array
        base_branch_protection:
          $ref: '#/components/schemas/web.PullRequestBranchProtection'
        merge_commit_message_style:
          type: string
        squash_commit_message_style:
          type: string
      type: object
    web.PullRequestSettings:
      properties:
        allow_merge_commit_merge:
          type: boolean
        allow_rebase_merge:
          type: boolean
        allow_squash_merge:
          type: boolean
        master_auto_as_reviewer:
          type: boolean
        merge_commit_message_style:
          type: string
        squash_commit_message_style:
          type: string
      type: object
    web.PullRequestState:
      properties:
        commit_statuses:
          $ref: '#/components/schemas/web.CommitStatuses'
        merge_style:
          type: string
        mergeable_state:
          type: string
        number:
          type: string
        reviews:
          $ref: '#/components/schemas/web.PullRequestReviews'
        settings:
          $ref: '#/components/schemas/web.PullRequestSetting'
        state:
          type: string
        status_check_commit_sha:
          type: string
      type: object
    web.PullViewedFile:
      properties:
        head_commit_sha:
          type: string
        is_viewed:
          type: boolean
        path:
          type: string
      type: object
    web.PushLimitSettings:
      properties:
        allow_single_push_number:
          type: integer
        check_single_push_number:
          type: boolean
        only_master_can_push_tag:
          type: boolean
        push_committer_must_be:
          type: string
      type: object
    web.RawAuthor:
      properties:
        author_email:
          type: string
        author_name:
          type: string
      type: object
    web.RecommendBranchNameResponse:
      properties:
        name:
          type: string
      type: object
    web.RecommendReviewer:
      properties:
        user:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
      type: object
    web.Ref:
      properties:
        is_head:
          type: boolean
        is_protected:
          type: boolean
        ref:
          type: string
        target_date:
          type: string
        target_hash:
          type: string
        target_type:
          type: string
      type: object
    web.RefWithPath:
      properties:
        initialized:
          type: boolean
        path:
          type: string
        ref:
          type: string
        ref_simple_name:
          type: string
        ref_type:
          type: string
      type: object
    web.ReferTapd:
      properties:
        created:
          type: string
        due:
          type: string
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        priority:
          type: string
        status:
          type: string
        type:
          type: string
        view_link:
          type: string
        workspace_id:
          type: string
      type: object
    web.Release:
      properties:
        assets:
          items:
            $ref: '#/components/schemas/web.ReleaseAsset'
          type: array
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
        body:
          type: string
        created_at:
          type: string
        id:
          type: string
        is_draft:
          type: boolean
        is_latest:
          type: boolean
        is_prerelease:
          type: boolean
        last_updated_by:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
        published_at:
          type: string
        tag_ref:
          type: string
        target_commit_hash:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    web.ReleaseAsset:
      properties:
        author:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'
        content_type:
          type: string
        created_at:
          type: string
        id:
          type: string
        name:
          type: string
        path:
          type: string
        size_in_byte:
          type: integer
        updated_at:
          type: string
      type: object
    web.ReleaseList:
      properties:
        release_count:
          type: integer
        releases:
          items:
            $ref: '#/components/schemas/web.Release'
          type: array
        tag_count:
          type: integer
      type: object
    web.ReleaseTag:
      properties:
        release:
          $ref: '#/components/schemas/web.Release'
        tag:
          $ref: '#/components/schemas/web.Tag'
      type: object
    web.RepoContribSimply:
      properties:
        meta:
          $ref: '#/components/schemas/web.Meta'
        top_100_contrib:
          items:
            $ref: '#/components/schemas/web.UserContributorSimply'
          type: array
        total:
          type: integer
      type: object
    web.RepoContribTrend:
      properties:
        meta:
          $ref: '#/components/schemas/web.Meta'
        repo_data:
          items:
            $ref: '#/components/schemas/web.Week'
          type: array
        user_total:
          type: integer
        users_data:
          items:
            $ref: '#/components/schemas/web.ContributorTrend'
          type: array
        week_total:
          type: integer
        with_line_counts:
          description: "是否统计增删的行数, 默认总提交超过 10000 的仓库不统计"
          type: boolean
      type: object
    web.RepoLanguage:
      properties:
        name:
          type: string
        ratio:
          type: string
      type: object
    web.RepoLicense:
      properties:
        file_name:
          type: string
        license:
          type: string
      type: object
    web.Repository:
      properties:
        head_ref:
          type: string
        http_clone_url:
          type: string
        slug:
          type: string
        ssh_clone_url:
          type: string
        usage:
          $ref: '#/components/schemas/web.RepositoryUsage'
      type: object
    web.RepositoryUsage:
      properties:
        git_size_in_kib:
          type: string
        lfs_size_in_kib:
          type: string
      type: object
    web.Resource:
      properties:
        type:
          type: string
      type: object
    web.Signature:
      properties:
        date:
          type: string
        email:
          type: string
        name:
          type: string
      type: object
    web.SubEntry:
      properties:
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        type:
          type: string
      type: object
    web.Submodule:
      properties:
        link_url:
          type: string
      type: object
    web.Tag:
      properties:
        commit:
          $ref: '#/components/schemas/web.Commit'
        has_release:
          type: boolean
        message:
          type: string
        tag:
          type: string
        tag_object:
          $ref: '#/components/schemas/web.TagObject'
        tagger:
          $ref: '#/components/schemas/git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.UserInfo'
      type: object
    web.TagAnnotation:
      properties:
        key:
          type: string
        meta:
          additionalProperties:
            type: object
          type: object
        value:
          type: string
      type: object
    web.TagList:
      properties:
        release_count:
          type: integer
        tag_count:
          type: integer
        tags:
          items:
            $ref: '#/components/schemas/web.Tag'
          type: array
      type: object
    web.TagObject:
      properties:
        message:
          type: string
        tag:
          type: string
        tagger:
          $ref: '#/components/schemas/web.Signature'
      type: object
    web.TreeContent:
      properties:
        branch_count:
          type: integer
        cnb_settings:
          $ref: '#/components/schemas/web.PreloadFile'
        commit_count:
          type: integer
        commit_count_exceeded:
          type: boolean
        entries:
          items:
            $ref: '#/components/schemas/web.TreeEntry'
          type: array
        file_list_exceeded:
          type: boolean
        file_list_limit:
          type: integer
        has_web_trigger:
          type: boolean
        initialized:
          type: boolean
        is_protected:
          description: 如果当前访问的是分支，那么表示是否是保护分支
          type: boolean
        last_commit:
          $ref: '#/components/schemas/web.Commit'
        name:
          type: string
        path:
          type: string
        read_me:
          $ref: '#/components/schemas/web.PreloadFile'
        repository:
          $ref: '#/components/schemas/web.Repository'
        tag_count:
          type: integer
        type:
          type: string
      type: object
    web.TreeEntry:
      properties:
        is_lfs:
          type: boolean
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        submodule:
          $ref: '#/components/schemas/web.Submodule'
        type:
          type: string
      type: object
    web.TreeInfo:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/web.TreeInfoEntry'
          type: array
        path:
          type: string
      type: object
    web.TreeInfoEntry:
      properties:
        last_commit:
          $ref: '#/components/schemas/web.Commit'
        name:
          type: string
        path:
          type: string
      type: object
    web.UpdateGitQuotaForm:
      properties:
        quota_in_kib:
          type: integer
      type: object
    web.UpdateLfsQuotaForm:
      properties:
        quota_in_kib:
          type: integer
      type: object
    web.UpdatePullViewedFileForm:
      properties:
        path:
          type: string
      type: object
    web.UserContributorSimply:
      properties:
        commit_count:
          type: integer
        email:
          type: string
        user_name:
          type: string
      type: object
    web.Week:
      properties:
        a:
          description: 每周增加的行数
          type: integer
        c:
          description: 每周的提交数量
          type: integer
        d:
          description: 每周删除的行数
          type: integer
        w:
          description: 周的时间戳
          type: integer
      type: object
    webapi.CommitAssetID:
      properties:
        asset_id:
          type: string
      type: object
    webapi.CreateBranchForm:
      properties:
        new_branch_name:
          type: string
        start_point:
          type: string
      type: object
    webapi.CreateIssueCommentForm:
      properties:
        body:
          type: string
      type: object
    webapi.CreatePullRequestCommentForm:
      properties:
        body:
          type: string
      type: object
    webapi.CreatePullRequestForm:
      properties:
        assignees:
          items:
            type: string
          type: array
        base_branch:
          type: string
        body:
          type: string
        head_branch:
          type: string
        head_repo_slug:
          type: string
        labels:
          items:
            type: string
          type: array
        reviewers:
          items:
            type: string
          type: array
        title:
          type: string
      type: object
    webapi.CreateTagForm:
      properties:
        message:
          type: string
        name:
          type: string
        target:
          type: string
      type: object
    webapi.HeadRef:
      properties:
        ref:
          type: string
      type: object
    webapi.InitRepositoryForm:
      properties:
        gitignore_template:
          type: string
        is_auto_readme:
          type: boolean
        license_template:
          type: string
      type: object
    webapi.MergePullRequestForm:
      properties:
        commit_message:
          type: string
        merge_style:
          type: string
      type: object
    webapi.PatchIssueAssigneesForm:
      properties:
        assignees:
          items:
            type: string
          type: array
      type: object
    webapi.PatchPullRequestAssigneesForm:
      properties:
        assignees:
          items:
            type: string
          type: array
      type: object
    webapi.PatchPullRequestReviewCommentForm:
      properties:
        body:
          type: string
      type: object
    webapi.PatchPullRequestReviewForm:
      properties:
        body:
          type: string
      type: object
    webapi.PatchPullRequestReviewersForm:
      properties:
        reviewers:
          items:
            type: string
          type: array
      type: object
    webapi.PatchReleaseForm:
      properties:
        body:
          type: string
        is_draft:
          type: boolean
        is_prerelease:
          type: boolean
        make_latest:
          type: string
        title:
          type: string
      type: object
    webapi.PostCommitFile:
      properties:
        content:
          type: string
        encoding:
          type: string
        is_deleted:
          type: boolean
        is_executable:
          type: boolean
        path:
          type: string
      type: object
    webapi.PostCommitForm:
      properties:
        base_branch:
          type: string
        files:
          items:
            $ref: '#/components/schemas/webapi.PostCommitFile'
          type: array
        message:
          type: string
        new_branch:
          type: string
        parent_commit_sha:
          type: string
      type: object
    webapi.PostPendingPullRequestReviewEventForm:
      properties:
        body:
          type: string
        event:
          type: string
      type: object
    webapi.PostPullRequestReviewCommentForm:
      properties:
        body:
          type: string
        end_line:
          type: integer
        end_side:
          type: string
        path:
          type: string
        start_line:
          type: integer
        start_side:
          type: string
        subject_type:
          description: "can be one of: line, file"
          type: string
      type: object
    webapi.PostPullRequestReviewForm:
      properties:
        body:
          type: string
        comment:
          $ref: '#/components/schemas/webapi.PostPullRequestReviewCommentForm'
        event:
          description: "comment, approve, request_changes or \"\""
          type: string
      type: object
    webapi.PostPullRequestReviewReplyForm:
      properties:
        body:
          type: string
        reply_to_comment_id:
          type: string
      type: object
    webapi.PostReleaseAssetForm:
      properties:
        content_type:
          type: string
        name:
          type: string
        path:
          type: string
        size_in_byte:
          type: integer
        token:
          type: string
      type: object
    webapi.PostReleaseForm:
      properties:
        body:
          type: string
        is_draft:
          type: boolean
        is_prerelease:
          type: boolean
        make_latest:
          type: string
        tag_name:
          type: string
        target_commitish:
          type: string
        title:
          type: string
      type: object
    webapi.PullRequestNumber:
      properties:
        number:
          type: string
      type: object
    webapi.PullRequestReviewID:
      properties:
        comment_ids:
          items:
            type: string
          type: array
        review_id:
          type: string
      type: object
    webapi.PutCommitAnnotation:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    webapi.PutCommitAnnotationsForm:
      properties:
        annotations:
          items:
            $ref: '#/components/schemas/webapi.PutCommitAnnotation'
          type: array
      type: object
    webapi.PutIssueLabelsForm:
      properties:
        labels:
          items:
            type: string
          type: array
      type: object
    webapi.PutPullRequestLabelsForm:
      properties:
        labels:
          items:
            type: string
          type: array
      type: object
    webapi.PutTagAnnotation:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    webapi.PutTagAnnotationsForm:
      properties:
        annotations:
          items:
            $ref: '#/components/schemas/webapi.PutTagAnnotation'
          type: array
      type: object
    webapi.ReleaseAssetID:
      properties:
        asset_id:
          type: string
      type: object
    webapi.UpdateCodeSensitiveIgnoreForm:
      properties:
        ignore:
          type: boolean
        ignore_reason:
          type: string
      type: object
    webapi.UpdatePullRequestForm:
      properties:
        body:
          type: string
        state:
          type: string
        title:
          type: string
      type: object
    wechat.AuthorizedUser:
      properties:
        defaultMaxDay:
          description: 默认的过期天数
          type: integer
        freeze:
          type: boolean
        headImgUrl:
          type: string
        maxDaysOptions:
          description: 用户登陆过期天数可选项
          items:
            type: integer
          type: array
        nickName:
          type: string
      type: object
    wechat.LoginState:
      properties:
        avatar:
          type: string
        confirmed:
          type: boolean
        isExpired:
          type: boolean
        nickName:
          type: string
      type: object
    wechat.LoginTicket:
      properties:
        state:
          type: string
      type: object
    api_Branch_commit:
      example:
        sha: sha
      properties:
        sha:
          type: string
      type: object
    dto_RankDetail_tags_inner:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
  securitySchemes:
    BearerAuth:
      description: Type "Bearer 1Z1609lSrSizKnLxEWx6WLr3lvA".
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"

